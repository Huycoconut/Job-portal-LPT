var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.193,1,3.032]],["body/controllers/AppController.html",[0,2.157,1,5.482,2,1.851,3,0.178,4,0.178,5,0.139,6,5.631,7,0.28,8,0.011,9,1.023,10,0.178,11,0.308,12,0.01,13,0.01]],["title/modules/AppModule.html",[14,0.934,15,3.032]],["body/modules/AppModule.html",[1,4.152,2,1.38,3,0.091,4,0.091,5,0.071,7,0.366,8,0.012,9,0.521,10,0.091,11,0.157,12,0.007,13,0.007,14,1.279,15,6.227,16,1.351,17,1.401,18,1.512,19,1.512,20,1.401,21,2.624,22,1.512,23,2.864,24,2.864,25,2.864,26,4.745,27,4.745,28,4.745,29,4.745,30,4.745,31,4.461,32,4.745,33,4.745,34,4.745,35,4.461,36,4.461,37,4.461,38,4.461,39,4.003,40,2.217,41,1.512,42,1.512,43,3.274,44,2.624,45,3.274,46,3.274,47,3.274,48,1.641,49,0.859,50,3.508,51,3.598,52,1.794,53,3.274,54,3.274,55,2.595,56,2.393,57,2.393,58,3.274,59,2.864,60,2.864,61,2.098,62,3.274,63,1.455,64,1.068,65,1.455,66,0.808,67,3.274,68,0.859,69,2.76,70,3.274,71,3.274,72,3.274,73,3.274,74,3.274,75,3.274,76,3.274,77,3.274,78,3.274,79,3.274,80,2.595,81,2.595,82,3.274,83,2.393,84,3.274,85,3.274,86,3.274,87,2.864,88,3.274,89,2.864,90,1.883,91,3.274,92,3.274,93,1.139,94,3.274,95,3.274,96,3.274,97,2.595,98,1.351,99,3.274,100,3.274,101,3.274,102,4.799,103,3.274,104,0.833,105,2.393,106,1.641,107,0.393,108,1.794,109,1.26]],["title/injectables/AppService.html",[38,2.658,110,0.851]],["body/injectables/AppService.html",[3,0.168,4,0.168,5,0.131,7,0.265,8,0.012,9,0.966,10,0.168,11,0.291,12,0.01,13,0.01,38,4.646,104,1.546,110,1.488,111,2.259,112,5.316,113,0.676,114,1.96,115,8.024,116,0.843,117,6.077,118,1.643,119,1.115,120,6.077,121,6.077]],["title/controllers/AuthController.html",[0,1.193,122,3.032]],["body/controllers/AuthController.html",[0,0.902,2,0.902,3,0.087,4,0.087,5,0.068,7,0.345,8,0.012,9,0.498,10,0.087,11,0.15,12,0.006,13,0.006,14,0.706,38,2.009,39,3.186,51,1.803,52,1.718,59,2.743,68,2.039,81,2.484,83,2.291,87,2.743,89,4.066,93,1.927,98,3.071,104,1.664,105,2.291,107,0.786,113,0.349,114,1.257,116,0.908,118,1.769,122,3.397,123,2.743,124,1.507,125,2.743,126,4.648,127,5.539,128,4.846,129,4.846,130,3.397,131,3.135,132,2.55,133,1.664,134,5.539,135,4.648,136,3.135,137,3.135,138,2.003,139,0.918,140,1.824,141,2.663,142,3.135,143,4.855,144,5.266,145,3.135,146,4.066,147,3.135,148,3.135,149,5.995,150,3.135,151,3.135,152,3.135,153,3.135,154,3.356,155,3.135,156,3.135,157,3.135,158,3.135,159,3.135,160,3.207,161,3.135,162,1.728,163,3.135,164,3.135,165,4.066,166,3.207,167,1.507,168,2.743,169,1.507,170,3.135,171,2.743,172,1.641,173,5.36,174,3.135,175,2.291,176,2.484,177,2.484,178,1.899,179,2.137,180,1.899,181,1.294,182,2.329,183,2.137,184,4.648,185,2.291,186,3.135,187,4.648,188,1.641,189,1.342,190,3.135,191,3.135,192,1.249,193,1.899,194,5.539,195,2.743,196,3.135,197,3.135,198,3.135,199,2.291,200,2.065,201,2.484,202,4.648,203,3.135,204,4.648,205,3.135,206,2.009,207,3.135,208,3.135,209,3.135,210,3.135,211,3.135,212,5.539,213,3.135,214,3.135,215,3.135,216,3.135,217,1.147,218,2.484,219,1.448,220,3.135,221,3.135,222,3.135,223,3.135,224,3.135,225,3.135,226,3.135,227,2.484,228,3.135,229,2.291,230,3.135,231,3.135,232,3.135,233,3.135]],["title/modules/AuthModule.html",[14,0.934,26,2.828]],["body/modules/AuthModule.html",[2,1.576,3,0.109,4,0.109,5,0.085,7,0.364,8,0.012,9,0.627,10,0.109,11,0.189,12,0.008,13,0.008,14,1.418,16,1.627,17,1.688,18,1.821,19,1.821,20,1.688,21,2.909,22,2.909,26,5.644,35,4.746,37,4.746,39,4.669,40,2.531,41,1.821,42,1.821,44,2.909,48,1.976,49,1.034,50,4.604,51,3.915,52,2.16,55,3.124,56,2.882,60,3.449,61,2.527,63,1.752,64,1.286,65,1.752,66,0.973,68,1.034,69,3.152,93,1.372,97,3.124,98,1.627,104,1.003,105,2.882,106,1.976,107,0.474,108,2.16,109,1.517,122,4.604,177,3.124,182,1.976,183,2.688,217,0.973,234,3.449,235,3.449,236,3.943,237,3.449,238,5.049,239,5.049,240,3.943,241,1.895,242,1.976,243,2.688,244,3.943,245,5.48,246,2.527,247,3.943,248,3.943,249,3.943,250,4.343,251,3.943,252,2.268,253,2.527,254,3.943,255,3.943,256,3.943,257,4.794,258,3.449,259,3.124,260,5.48,261,3.943,262,3.449,263,3.943]],["title/injectables/AuthService.html",[39,2.386,110,0.851]],["body/injectables/AuthService.html",[3,0.064,4,0.064,5,0.05,7,0.32,8,0.012,9,0.369,10,0.064,11,0.111,12,0.005,13,0.005,39,2.12,49,0.608,51,3.006,52,1.27,55,5.047,56,1.695,63,1.03,64,0.756,65,1.03,66,0.572,68,1.977,93,1.596,98,2.94,104,1.62,107,0.884,110,0.756,111,0.862,113,0.258,114,0.997,116,0.884,118,1.241,119,1.095,128,5.314,129,4.014,130,2.694,132,2.051,138,1.6,139,0.7,140,1.458,141,2.513,144,4.472,146,4.573,160,2.736,162,1.37,173,2.029,178,1.405,179,1.581,180,1.405,181,0.957,182,2.62,183,1.581,192,1.468,200,2.535,201,3.636,206,2.94,217,1.911,218,2.921,219,3.145,227,4.813,229,1.695,241,2.513,242,3.044,243,1.581,250,2.921,252,1.334,253,1.486,257,3.225,262,2.029,264,2.029,265,1.028,266,4.588,267,4.588,268,3.686,269,2.319,270,3.353,271,4.588,272,2.319,273,3.686,274,2.319,275,3.225,276,2.319,277,3.686,278,4.99,279,2.319,280,2.233,281,2.513,282,3.353,283,2.319,284,2.319,285,2.319,286,2.639,287,1.162,288,2.029,289,2.029,290,1.837,291,1.695,292,2.319,293,2.205,294,1.837,295,2.319,296,1.837,297,1.486,298,2.029,299,1.581,300,2.029,301,1.486,302,2.029,303,3.686,304,2.319,305,2.319,306,2.694,307,3.686,308,2.18,309,3.686,310,3.686,311,2.319,312,2.319,313,3.686,314,2.319,315,2.542,316,2.011,317,3.225,318,3.225,319,1.747,320,4.014,321,3.686,322,3.686,323,3.686,324,6.809,325,3.686,326,1.65,327,3.686,328,2.233,329,3.225,330,3.686,331,3.686,332,3.686,333,4.588,334,3.686,335,3.686,336,3.686,337,3.686,338,3.686,339,4.588,340,3.225,341,2.319,342,2.319,343,1.837,344,2.319,345,3.686,346,2.319,347,2.319,348,1.486,349,2.319,350,2.319,351,2.319,352,2.319,353,2.319,354,2.029,355,1.847,356,1.325,357,2.362,358,3.686,359,3.686,360,1.486,361,1.581,362,2.319,363,2.319,364,1.334,365,2.319,366,2.319]],["title/controllers/CompaniesController.html",[0,1.193,367,3.032]],["body/controllers/CompaniesController.html",[0,1.016,2,1.016,3,0.14,4,0.098,5,0.076,7,0.321,8,0.012,9,0.561,10,0.098,11,0.169,12,0.007,13,0.007,64,1.934,68,2.17,104,1.746,107,0.824,113,0.393,114,1.371,116,0.953,118,1.856,119,1.179,124,1.698,132,2.798,133,1.746,138,2.101,139,0.92,140,1.914,166,3.105,167,1.698,169,2.851,172,2.654,181,1.458,188,1.848,189,1.512,217,0.871,259,2.799,326,2.133,367,3.706,368,3.09,369,3.09,370,1.504,371,2.363,372,2.019,373,2.019,374,3.09,375,4.579,376,3.531,377,1.569,378,2.657,379,3.05,380,2.88,381,3.09,382,3.249,383,1.707,384,3.249,385,3.531,386,2.636,387,1.407,388,3.09,389,3.531,390,2.486,391,1.407,392,2.916,393,3.531,394,1.631,395,4.562,396,3.249,397,3.531,398,1.848,399,1.935,400,2.17,401,3.801,402,3.09,403,1.407,404,3.457,405,1.359,406,1.631,407,3.531,408,3.531,409,1.631,410,1.512,411,2.263,412,3.531,413,2.263,414,2.14,415,2.14,416,3.072,417,2.14,418,1.935,419,2.031,420,2.14,421,2.14,422,2.916,423,2.14,424,3.531,425,2.031,426,2.031,427,3.531,428,2.408,429,3.531,430,2.031,431,3.531]],["title/modules/CompaniesModule.html",[14,0.934,27,2.828]],["body/modules/CompaniesModule.html",[2,1.945,3,0.15,4,0.15,5,0.117,7,0.346,8,0.012,9,0.862,10,0.15,11,0.26,12,0.009,13,0.009,14,1.659,16,2.238,17,2.321,18,2.505,19,2.505,20,2.321,21,3.404,22,2.505,27,5.52,40,3.124,41,2.505,42,2.505,44,2.505,48,2.718,49,1.422,106,2.718,107,0.651,109,2.086,367,5.387,383,1.826,401,5.189,402,4.744,432,4.744,433,4.744,434,5.423,435,5.423,436,4.334,437,4.744,438,3.964]],["title/injectables/CompaniesService.html",[110,0.851,401,2.658]],["body/injectables/CompaniesService.html",[3,0.084,4,0.084,5,0.066,7,0.327,8,0.012,9,0.484,10,0.084,11,0.146,12,0.006,13,0.006,49,0.798,63,1.352,64,0.992,65,1.352,66,0.751,68,1.936,90,1.75,98,2.797,104,1.724,107,0.814,110,0.933,111,1.131,113,0.339,114,1.229,116,0.941,118,1.747,119,1.135,132,2.702,138,2.075,139,0.908,140,1.89,141,2.185,162,1.131,181,1.256,192,1.811,200,1.352,217,1.781,219,2.788,241,2.902,286,1.75,287,1.525,299,2.074,308,2.15,319,1.565,326,1.634,328,1.843,348,1.95,355,1.525,360,1.95,364,3.13,370,1.349,371,1.811,372,1.811,373,1.811,374,3.977,375,4.344,377,2.02,378,2.52,379,3.012,380,2.418,383,2.033,386,2.418,387,1.811,390,2.444,391,1.811,394,2.1,395,4.375,400,1.302,401,2.913,403,1.212,404,3.099,405,1.171,437,2.662,439,2.662,440,3.043,441,3.043,442,4.546,443,3.043,444,3.043,445,3.043,446,3.043,447,3.043,448,2.224,449,3.043,450,1.843,451,1.593,452,1.75,453,2.224,454,3.043,455,3.043,456,1.463,457,3.487,458,3.297,459,1.843,460,1.843,461,1.843,462,3.043,463,3.043,464,1.843,465,1.405,466,4.546,467,2.754,468,3.043,469,2.754,470,1.843,471,2.754,472,3.043,473,1.843,474,1.843,475,3.043,476,1.843,477,1.843,478,1.843,479,1.843,480,1.843,481,1.843,482,3.043,483,1.95,484,1.95,485,1.95,486,3.043,487,3.043,488,4.546,489,4.546,490,1.302,491,1.667,492,3.043,493,4.546,494,2.224,495,2.224,496,2.074]],["title/classes/Company.html",[11,0.199,383,1.397]],["body/classes/Company.html",[3,0.106,4,0.106,5,0.082,7,0.27,8,0.012,10,0.171,11,0.257,12,0.007,13,0.007,49,1.002,66,1.322,93,2.55,107,0.744,109,2.062,113,0.425,116,1.11,119,1.23,133,2.035,139,1.119,217,0.942,265,1.495,308,1.895,319,1.781,383,1.805,436,2.447,448,2.791,456,2.977,490,2.65,491,3.393,497,0.886,498,2.791,499,3.393,500,2.86,501,3.393,502,2.86,503,3.393,504,4.907,505,3.968,506,4.907,507,3.819,508,3.241,509,3.751,510,3.026,511,3.819,512,3.258,513,5.062,514,3.819,515,3.819,516,3.819,517,3.819,518,2.805,519,3.819,520,3.819,521,3.819,522,3.819,523,3.819,524,3.819,525,2.314,526,1.836,527,1.469,528,2.314,529,1.42,530,1.329,531,2.805,532,2.314,533,4.907,534,2.752,535,3.341]],["title/classes/Company-1.html",[11,0.165,383,1.164,465,1.597]],["body/classes/Company-1.html",[3,0.094,4,0.094,5,0.073,7,0.278,8,0.012,10,0.161,11,0.348,12,0.007,13,0.007,66,1.218,107,0.874,113,0.379,116,0.685,119,1.277,133,1.256,139,0.854,154,2.062,160,1.781,178,3.519,189,1.457,265,1.377,280,2.991,308,1.778,315,2.451,319,2.029,356,2.93,383,2.146,410,2.113,497,0.79,499,3.491,502,2.28,510,1.405,527,2.235,529,2.16,530,1.184,534,2.581,536,2.181,537,4.202,538,3.403,539,3.403,540,4.246,541,1.781,542,2.839,543,3.608,544,3.608,545,2.839,546,1.865,547,3.675,548,3.366,549,3.366,550,3.183,551,3.519,552,3.507,553,4.265,554,3.866,555,3.519,556,2.488,557,4.098,558,4.344,559,2.488,560,3.608,561,2.488,562,2.488]],["title/classes/CreateCompanyDto.html",[11,0.199,375,2.658]],["body/classes/CreateCompanyDto.html",[3,0.132,4,0.132,5,0.103,7,0.207,8,0.012,10,0.132,11,0.332,12,0.009,13,0.009,107,0.916,113,0.53,116,1.02,119,1.244,133,1.87,139,0.985,265,1.735,356,2.908,375,3.988,497,1.105,499,4.18,502,3.524,504,6.046,510,1.965,527,1.831,530,1.656,537,3.824,547,3.267,552,3.461,553,4.233,563,6.675,564,3.773,565,4.454,566,4.76,567,4.76,568,4.76,569,4.76]],["title/classes/CreateFileDto.html",[11,0.199,570,2.828]],["body/classes/CreateFileDto.html",[3,0.181,4,0.181,5,0.141,8,0.011,10,0.181,11,0.313,12,0.01,13,0.01,497,1.517,570,5.16,571,5.72,572,5.181]],["title/classes/CreateJobDto.html",[11,0.199,573,2.658]],["body/classes/CreateJobDto.html",[3,0.108,4,0.108,5,0.084,7,0.273,8,0.012,10,0.108,11,0.3,12,0.008,13,0.008,66,0.962,93,1.356,107,0.752,113,0.434,116,1.103,119,1.264,133,2.021,139,1.094,140,2.336,265,1.516,497,0.905,502,2.892,512,3.279,518,2.846,526,3.01,527,1.5,529,2.872,530,1.356,537,2.725,541,2.04,547,1.732,550,2.979,551,2.362,573,3.484,574,7.026,575,3.089,576,5.477,577,4.012,578,5.477,579,5.477,580,5.477,581,4.961,582,3.793,583,5.477,584,7.124,585,3.898,586,5.437,587,3.898,588,3.898,589,3.898,590,3.898,591,3.898,592,3.898,593,3.898,594,3.898,595,3.898,596,3.898,597,5.437,598,3.898,599,3.898,600,3.898,601,3.898,602,3.294,603,3.707,604,5.418,605,2.04,606,2.849]],["title/classes/CreateMailDto.html",[11,0.199,607,2.658]],["body/classes/CreateMailDto.html",[3,0.181,4,0.181,5,0.141,8,0.011,10,0.181,11,0.313,12,0.01,13,0.01,497,1.517,607,4.85,608,5.72,609,5.181]],["title/classes/CreatePermissionDto.html",[11,0.199,610,2.658]],["body/classes/CreatePermissionDto.html",[3,0.131,4,0.131,5,0.102,7,0.206,8,0.012,10,0.131,11,0.297,12,0.009,13,0.009,14,1.714,107,0.914,113,0.526,116,1.018,119,1.242,133,1.865,139,0.982,265,1.728,356,2.903,451,3.243,497,1.097,529,2.831,530,1.645,537,3.815,547,3.259,552,3.456,553,4.226,610,3.97,611,6.66,612,3.747,613,4.186,614,4.879,615,7.333,616,3.753,617,4.728,618,4.728,619,4.728,620,4.728]],["title/classes/CreateResumeDto.html",[11,0.199,621,2.658]],["body/classes/CreateResumeDto.html",[3,0.097,4,0.097,5,0.075,7,0.298,8,0.012,10,0.139,11,0.341,12,0.007,13,0.007,66,1.243,113,0.39,116,0.989,119,1.155,133,1.812,139,0.984,265,1.405,297,3.229,301,3.229,319,1.698,356,2.925,390,1.753,465,2.327,497,0.813,510,2.436,526,1.683,527,1.939,529,1.302,530,1.218,531,1.833,534,3.262,537,3.892,541,1.833,542,3.395,545,2.014,547,3.495,552,3.502,553,4.258,565,4.145,602,2.121,603,2.387,604,2.387,621,3.229,622,5.818,623,2.387,624,5.646,625,5.491,626,4.098,627,4.705,628,4.705,629,6.446,630,3.502,631,3.502,632,3.502,633,3.502,634,3.502,635,3.502,636,3.502,637,1.347,638,2.014,639,2.014,640,2.559,641,2.775,642,2.244,643,4.315,644,2.559,645,4.409,646,4.409,647,2.559,648,2.387,649,2.775,650,2.775,651,3.063,652,3.063,653,2.244,654,3.993,655,3.063]],["title/classes/CreateRoleDto.html",[11,0.199,656,2.658]],["body/classes/CreateRoleDto.html",[3,0.121,4,0.121,5,0.094,7,0.256,8,0.012,10,0.121,11,0.281,12,0.008,13,0.008,14,1.323,66,1.45,93,2.045,107,0.798,113,0.486,116,0.986,119,1.175,133,1.808,139,0.952,265,1.639,293,3.416,316,3.003,356,2.853,390,1.52,497,1.014,502,3.425,510,2.426,529,2.642,530,1.52,534,2.612,537,3.716,542,3.381,547,3.468,550,3.221,551,3.561,552,3.478,553,3.719,565,4.305,577,4.753,602,3.561,606,4.856,644,4.296,654,4.658,656,3.767,657,6.488,658,3.461,659,5.812,660,4.368,661,4.368,662,4.368,663,4.368,664,4.007,665,4.368,666,4.368]],["title/classes/CreateSubcriberDto.html",[11,0.199,667,2.658]],["body/classes/CreateSubcriberDto.html",[3,0.133,4,0.133,5,0.104,7,0.273,8,0.012,10,0.133,11,0.3,12,0.009,13,0.009,66,1.545,107,0.919,113,0.535,116,0.966,119,1.207,133,1.771,139,0.933,265,1.746,293,3.01,316,2.409,319,2.201,356,2.821,497,1.115,527,2.409,529,2.744,530,1.672,537,3.698,542,2.764,547,3.279,550,3.43,551,3.793,552,3.468,553,3.645,565,4.219,582,4.219,602,3.793,644,3.512,659,4.204,667,4.012,668,6.456,669,3.808,670,4.805,671,4.805,672,4.805,673,5.477,674,4.805,675,4.805,676,4.805]],["title/classes/CreateUserCvDto.html",[11,0.199,653,2.658]],["body/classes/CreateUserCvDto.html",[3,0.104,4,0.104,5,0.081,7,0.306,8,0.012,10,0.147,11,0.349,12,0.007,13,0.007,66,1.31,113,0.42,116,0.853,119,1.154,133,1.564,139,0.894,265,1.481,297,3.404,301,3.404,319,1.084,356,2.896,390,2.322,465,2.453,497,0.875,510,2.538,526,1.812,527,2.043,529,1.402,530,1.312,531,1.973,534,3.127,537,3.955,541,1.973,542,3.537,545,2.168,547,3.546,552,3.475,553,4.131,565,3.725,602,2.284,603,2.57,604,2.57,621,2.416,622,5.29,623,2.57,624,5.29,625,5.692,626,3.84,627,4.807,628,3.941,629,6.383,637,1.45,638,2.168,639,2.168,640,2.756,641,2.988,642,2.416,643,4.494,644,2.756,645,4.647,646,4.647,647,2.756,648,2.57,649,2.988,650,2.988,651,3.298,652,3.298,653,3.404,654,5.29,655,5.38,677,4.647,678,3.77,679,3.298,680,3.77]],["title/classes/CreateUserDto.html",[11,0.199,546,2.273]],["body/classes/CreateUserDto.html",[3,0.078,4,0.078,5,0.061,7,0.253,8,0.012,10,0.144,11,0.328,12,0.006,13,0.006,66,1.062,107,0.848,113,0.315,116,1.004,119,1.282,133,1.84,139,1.005,154,1.715,160,1.481,178,4.47,189,1.211,265,1.2,280,2.608,308,0.866,315,2.637,319,2.081,356,2.962,383,2.108,410,1.842,497,0.657,499,3.756,502,1.988,510,1.168,527,2.239,529,1.937,530,0.985,534,1.913,536,1.814,537,4.079,540,3.807,541,1.481,542,2.476,543,3.146,544,3.146,545,2.476,546,2.358,547,3.6,548,3.551,549,3.551,550,3.189,551,3.526,552,3.537,553,4.311,554,3.964,555,3.526,556,3.807,557,4.279,558,4.673,559,2.069,560,3.146,561,2.069,562,2.069,565,4.152,681,2.83,682,2.83,683,2.83,684,2.83,685,2.476,686,2.83,687,2.83,688,2.83,689,2.83,690,2.83,691,2.83]],["title/controllers/DatabasesController.html",[0,1.193,692,3.032]],["body/controllers/DatabasesController.html",[0,1.779,2,1.779,3,0.171,4,0.171,5,0.133,7,0.319,8,0.012,9,0.983,10,0.171,11,0.296,12,0.01,13,0.01,124,2.974,409,2.857,410,2.648,692,5.355,693,5.412,694,6.186,695,5.003,696,5.412,697,6.186]],["title/modules/DatabasesModule.html",[14,0.934,28,2.828]],["body/modules/DatabasesModule.html",[2,1.826,3,0.136,4,0.136,5,0.106,7,0.354,8,0.012,9,0.78,10,0.136,11,0.235,12,0.009,13,0.009,14,1.584,16,2.025,17,2.101,18,2.267,19,2.267,20,2.101,21,3.249,22,2.267,28,5.549,40,2.932,41,2.267,42,2.267,44,2.267,48,2.459,49,1.287,68,1.287,69,3.651,106,2.459,107,0.845,108,2.689,109,2.707,242,3.954,243,3.346,253,3.145,315,1.888,316,1.888,692,5.142,695,5.057,696,4.293,698,4.293,699,4.293,700,4.907,701,3.889,702,4.907,703,4.328,704,3.889,705,3.845,706,3.346,707,3.889,708,3.587]],["title/injectables/DatabasesService.html",[110,0.851,695,2.658]],["body/injectables/DatabasesService.html",[3,0.088,4,0.088,5,0.068,7,0.325,8,0.012,9,0.505,10,0.088,11,0.152,12,0.006,13,0.006,49,0.832,51,4.096,52,1.739,63,1.41,64,1.035,65,1.41,66,0.783,68,1.23,93,1.632,98,2.303,107,0.878,110,0.963,111,1.18,113,0.353,114,1.268,116,0.774,118,0.858,138,0.971,139,0.425,140,0.885,162,1.744,192,1.868,200,3.248,206,2.034,217,1.757,219,3.448,241,3.65,242,3.569,243,2.164,252,1.825,253,2.034,265,1.308,270,4.078,282,2.32,287,1.59,291,2.32,293,1.526,296,2.515,306,2.32,315,2.53,316,2.146,319,1.605,328,1.923,356,1.141,370,1.392,410,2.388,499,3.057,502,2.166,549,2.164,554,3.057,555,3.38,557,3.38,577,3.006,642,2.034,664,3.198,695,3.006,701,4.884,704,2.515,706,2.164,709,2.776,710,6.883,711,2.515,712,4.881,713,4.421,714,4.69,715,3.173,716,4.69,717,2.164,718,2.034,719,2.515,720,3.804,721,4.078,722,4.69,723,2.32,724,2.776,725,2.776,726,2.515,727,2.776,728,2.515,729,3.173,730,3.173,731,3.173,732,6.163,733,3.173,734,5.579,735,3.173,736,4.69,737,3.173,738,3.173,739,5.455,740,3.173,741,3.173,742,3.173,743,3.173,744,3.717,745,3.173,746,4.103,747,2.776,748,2.515,749,3.173,750,2.776,751,3.173,752,3.173,753,3.173,754,3.173,755,3.173,756,2.515,757,2.776,758,3.173,759,5.579,760,2.515,761,5.579,762,5.579,763,5.579,764,5.579,765,5.579,766,4.69,767,3.173,768,2.776,769,2.776,770,3.173,771,3.173,772,3.173,773,2.776,774,3.173,775,3.173,776,3.173,777,2.164]],["title/classes/File.html",[5,0.089,11,0.199]],["body/classes/File.html",[3,0.181,4,0.181,5,0.172,8,0.011,10,0.181,11,0.314,12,0.01,13,0.01,497,1.522,778,5.738]],["title/controllers/FileController.html",[0,1.193,779,3.032]],["body/controllers/FileController.html",[0,1.119,2,1.119,3,0.108,4,0.108,5,0.159,7,0.321,8,0.012,9,0.619,10,0.108,11,0.186,12,0.007,13,0.007,64,1.269,104,1.811,107,0.813,113,0.433,114,1.468,116,0.988,118,1.925,119,1.206,124,1.87,133,1.811,138,2.072,139,0.907,140,1.888,162,1.447,166,2.842,167,1.87,169,1.87,172,2.842,180,2.357,188,2.036,189,1.665,326,1.952,371,2.696,372,2.163,373,2.163,387,1.55,390,2.566,391,1.55,392,3.123,394,1.797,396,3.48,398,2.036,399,2.132,405,1.497,406,1.797,409,1.797,410,1.665,425,3.123,426,2.238,430,2.238,465,1.797,779,3.969,780,3.404,781,3.891,782,6.254,783,3.891,784,3.891,785,3.891,786,5.263,787,3.891,788,3.891,789,6.254,790,3.891,791,5.43,792,3.891,793,3.891,794,3.891,795,5.43,796,5.43,797,3.404,798,3.083,799,4.008,800,3.404,801,3.891,802,2.844,803,3.891,804,3.891,805,3.891,806,3.891,807,3.891,808,3.891,809,3.891,810,3.891,811,3.891,812,3.891,813,3.891,814,5.43,815,3.891,816,3.891,817,3.891,818,3.891,819,3.891,820,3.891,821,3.891,822,3.891,823,3.891]],["title/modules/FileModule.html",[14,0.934,29,2.828]],["body/modules/FileModule.html",[2,1.926,3,0.148,4,0.148,5,0.115,7,0.351,8,0.012,9,0.849,10,0.148,11,0.256,12,0.009,13,0.009,14,1.647,16,2.203,17,2.285,18,2.466,19,2.466,20,2.285,21,3.38,22,2.466,29,5.499,40,3.093,41,2.466,42,2.466,44,3.093,50,4.895,51,3.071,52,2.925,180,3.234,779,5.349,799,5.169,800,4.671,802,3.902,824,4.671,825,4.671,826,5.339,827,5.339,828,5.339,829,4.895,830,5.339,831,5.339,832,5.339]],["title/injectables/FileService.html",[110,0.851,799,2.658]],["body/injectables/FileService.html",[3,0.125,4,0.125,5,0.166,7,0.294,8,0.012,9,0.717,10,0.125,11,0.216,12,0.008,13,0.008,104,1.907,107,0.865,110,1.233,111,1.677,113,0.502,114,1.624,116,1.04,118,2.128,119,1.153,138,2.204,139,0.964,140,2.008,162,1.677,326,2.16,370,1.782,371,2.867,372,2.392,373,2.392,378,3.009,387,2.392,390,2.682,391,2.392,394,2.774,403,1.797,405,1.735,570,5.111,786,5.365,798,4.76,799,3.849,833,3.947,834,6.006,835,4.511,836,4.511,837,4.511,838,4.511,839,4.511,840,6.559,841,3.947,842,3.947,843,3.947]],["title/controllers/HealthController.html",[0,1.193,844,3.032]],["body/controllers/HealthController.html",[0,1.568,2,1.568,3,0.151,4,0.151,5,0.118,7,0.322,8,0.012,9,0.867,10,0.151,11,0.261,12,0.009,13,0.009,98,3.049,104,1.387,113,0.607,114,1.835,116,0.757,118,1.474,124,2.621,133,1.387,166,3.551,192,2.171,200,3.015,281,4.626,406,2.518,844,4.959,845,4.769,846,5.451,847,6.764,848,5.451,849,5.451,850,6.785,851,6.785,852,7.388,853,5.451,854,4.32,855,5.451,856,5.451,857,5.451,858,5.451,859,5.451,860,5.451,861,5.451,862,5.451]],["title/modules/HealthModule.html",[14,0.934,30,2.828]],["body/modules/HealthModule.html",[2,2.092,3,0.169,4,0.169,5,0.132,7,0.338,8,0.012,9,0.972,10,0.169,11,0.293,12,0.01,13,0.01,14,1.638,16,2.523,30,4.96,44,2.823,844,5.677,854,4.844,863,6.113,864,6.113,865,7.275]],["title/interfaces/IUser.html",[132,1.492,866,2.658]],["body/interfaces/IUser.html",[3,0.149,4,0.149,5,0.116,8,0.012,10,0.149,12,0.009,13,0.009,14,1.211,107,0.971,113,0.599,119,1.322,132,2.42,139,1.12,140,1.877,265,1.877,308,2.474,315,2.96,316,2.96,319,2.213,508,4.028,613,3.26,866,3.448,867,4.264,868,4.707]],["title/classes/Jobs.html",[11,0.199,637,1.596]],["body/classes/Jobs.html",[3,0.1,4,0.1,5,0.078,7,0.262,8,0.012,10,0.166,11,0.247,12,0.007,13,0.007,49,0.951,66,1.274,93,2.094,107,0.788,109,1.987,113,0.403,116,1.135,119,1.265,133,2.08,139,1.112,217,0.894,265,1.44,308,1.11,383,2.335,497,0.841,500,2.779,501,3.297,502,2.779,503,3.297,504,2.872,505,3.856,506,2.872,508,1.897,509,2.196,512,3.478,513,5.178,518,3.433,525,2.196,526,1.742,527,1.394,528,2.196,529,1.348,530,1.261,531,2.703,532,2.196,533,2.872,534,2.295,576,5.265,577,3.856,578,5.265,579,5.265,580,5.265,581,4.769,582,3.646,583,5.265,637,1.987,869,2.649,870,2.649,871,3.775,872,3.624,873,3.624,874,3.624,875,3.624,876,3.624,877,3.624,878,3.624,879,3.624,880,3.624,881,3.624,882,3.624,883,3.624,884,3.624,885,3.624,886,3.624,887,2.471,888,2.471,889,3.171]],["title/controllers/JobsController.html",[0,1.193,890,3.032]],["body/controllers/JobsController.html",[0,0.99,2,0.99,3,0.095,4,0.095,5,0.074,7,0.318,8,0.012,9,0.547,10,0.095,11,0.165,12,0.007,13,0.007,64,1.907,68,2.141,104,1.729,107,0.816,113,0.383,114,1.346,116,0.943,118,1.838,119,1.172,124,1.655,132,2.782,133,1.729,138,2.08,139,0.911,140,1.895,166,3.061,167,1.655,169,2.393,171,5.116,172,2.606,181,1.421,188,1.802,189,1.474,217,0.85,326,2.102,370,1.477,371,2.329,372,1.983,373,1.983,377,1.53,378,2.634,379,3.02,380,2.847,381,3.012,382,4.106,384,3.19,386,2.598,387,1.372,390,2.464,391,1.372,392,2.863,394,1.59,396,2.207,398,1.802,399,1.887,400,2.131,403,1.372,405,1.325,406,1.59,409,1.59,410,1.474,411,2.207,413,3.19,414,2.086,415,2.086,416,3.016,417,2.086,418,1.887,419,1.98,420,2.086,421,2.086,422,2.863,423,2.086,425,1.98,426,1.98,428,2.348,430,1.98,573,4.54,637,2.615,797,3.012,890,3.639,891,3.012,892,3.012,893,3.443,894,4.683,895,6.406,896,3.443,897,3.443,898,3.443,899,3.443,900,3.443,901,5.099,902,3.443,903,3.443,904,3.747,905,3.012,906,3.945,907,3.443,908,3.443,909,3.012,910,3.443,911,3.443,912,3.443,913,2.729,914,3.443,915,3.443]],["title/modules/JobsModule.html",[14,0.934,31,2.658]],["body/modules/JobsModule.html",[2,1.854,3,0.139,4,0.139,5,0.108,7,0.352,8,0.012,9,0.799,10,0.139,11,0.241,12,0.009,13,0.009,14,1.602,16,2.075,17,2.152,18,2.322,19,2.322,20,2.152,21,3.287,22,3.287,31,5.175,40,2.977,41,2.322,42,2.322,44,2.322,48,2.519,49,1.318,106,2.519,107,0.774,109,2.738,383,1.693,436,4.131,438,3.674,637,1.934,888,4.395,890,5.201,904,5.403,905,4.398,916,4.398,917,4.398,918,4.398,919,5.027,920,5.64,921,5.027,922,3.222,923,3.984]],["title/injectables/JobsService.html",[110,0.851,904,2.658]],["body/injectables/JobsService.html",[3,0.081,4,0.081,5,0.063,7,0.318,8,0.012,9,0.467,10,0.081,11,0.14,12,0.006,13,0.006,49,0.77,63,1.304,64,1.737,65,1.304,66,1.091,68,1.917,90,1.688,98,3.164,104,1.701,107,0.878,108,2.918,110,0.908,111,1.091,113,0.327,114,1.196,116,0.928,118,1.72,119,1.179,132,2.678,138,2.047,139,0.896,140,1.865,141,2.85,162,1.645,181,1.211,192,1.762,200,1.304,217,1.803,219,2.938,241,2.85,286,1.688,287,1.471,293,1.411,308,2.187,326,1.591,328,1.778,348,1.881,355,2.217,356,1.055,357,1.881,360,1.881,361,3.016,364,3.063,370,1.313,371,1.762,372,1.762,373,1.762,377,1.966,378,2.486,379,3.174,380,2.366,383,0.988,386,2.634,387,1.762,390,2.414,391,1.762,394,2.043,400,1.256,403,1.169,405,1.129,450,1.778,451,1.536,452,1.688,458,1.778,459,1.778,460,1.778,461,1.778,464,1.778,465,1.355,467,2.68,469,2.68,470,1.778,471,2.68,473,1.778,474,1.778,476,1.778,477,1.778,478,1.778,479,1.778,480,1.778,481,1.778,483,1.881,484,1.881,485,1.881,490,1.256,494,2.145,495,2.145,496,2.001,500,1.355,573,4.285,637,1.129,887,2.001,892,3.87,894,4.333,901,4.87,904,2.835,906,3.506,920,2.567,924,2.567,925,2.935,926,2.935,927,3.87,928,2.935,929,2.935,930,2.935,931,2.935,932,2.935,933,2.001,934,2.567,935,2.935,936,2.935,937,2.935,938,1.881,939,1.881,940,2.835,941,2.935,942,2.935,943,1.881,944,2.001,945,2.145,946,2.935,947,4.424,948,4.424,949,2.935]],["title/injectables/JwtAuthGuard.html",[57,3.032,110,0.851]],["body/injectables/JwtAuthGuard.html",[3,0.183,4,0.102,5,0.08,7,0.304,8,0.012,9,0.587,10,0.102,11,0.177,12,0.007,13,0.007,57,3.823,61,2.364,68,1.831,93,1.284,104,1.546,107,0.73,110,1.073,111,1.372,113,0.411,114,1.414,116,0.843,118,1.414,138,1.86,139,0.814,140,1.695,143,5.239,162,1.945,169,1.773,180,2.235,192,1.469,195,3.228,217,1.839,227,2.924,246,2.364,293,1.773,301,3.894,316,2.012,355,2.621,356,2.377,357,2.364,406,1.704,409,1.704,451,1.931,496,2.515,552,2.83,613,2.235,614,2.364,648,2.515,664,3.566,746,4.576,847,3.228,950,5.784,951,2.924,952,2.416,953,5.23,954,5.23,955,5.23,956,3.228,957,5.745,958,3.689,959,5.23,960,5.449,961,3.689,962,4.832,963,5.23,964,3.689,965,6.076,966,5.23,967,3.228,968,3.228,969,2.924,970,4.145,971,2.697,972,4.576,973,3.689,974,4.145,975,5.23,976,3.689,977,3.689,978,5.23,979,3.689,980,3.689,981,3.228,982,5.23,983,3.689,984,3.823,985,5.23,986,3.689,987,3.689,988,2.924,989,3.689,990,3.228,991,3.689,992,3.689,993,3.689,994,3.689,995,2.924,996,3.689,997,3.228,998,3.689,999,5.23,1000,3.689,1001,3.689,1002,3.689,1003,3.689,1004,3.689,1005,3.689,1006,3.689,1007,3.689]],["title/injectables/JwtStrategy.html",[110,0.851,238,2.828]],["body/injectables/JwtStrategy.html",[3,0.122,4,0.122,5,0.095,7,0.334,8,0.012,9,0.703,10,0.122,11,0.212,12,0.008,13,0.008,51,4.409,52,2.424,98,2.76,104,1.125,107,0.895,110,1.217,111,1.645,113,0.492,114,1.603,116,0.823,118,1.196,119,0.912,132,2.568,138,1.815,139,0.794,140,1.653,141,2.85,181,1.826,182,3.58,183,3.016,192,2.361,199,3.234,200,2.634,201,5.299,217,1.65,218,3.506,219,2.043,238,4.042,246,2.835,258,3.87,293,2.127,299,3.016,306,3.234,308,2.047,315,2.572,316,1.702,317,3.87,319,1.705,320,5.85,641,3.506,642,2.835,643,4.333,647,3.234,952,2.738,971,3.234,1008,3.87,1009,5.187,1010,4.424,1011,4.424,1012,5.928,1013,4.424,1014,4.424,1015,3.87,1016,5.187,1017,3.87,1018,4.424,1019,4.424,1020,4.424,1021,3.506,1022,4.424,1023,4.424,1024,4.424,1025,4.424,1026,3.87,1027,4.424,1028,3.87,1029,4.424,1030,4.424,1031,4.424,1032,5.928,1033,4.424]],["title/injectables/LocalAuthGuard.html",[110,0.851,175,3.032]],["body/injectables/LocalAuthGuard.html",[3,0.173,4,0.173,5,0.135,7,0.321,8,0.012,9,0.992,10,0.173,11,0.299,12,0.01,13,0.01,110,1.512,111,2.321,175,5.384,246,4,951,4.947,952,3.402,968,5.461,1034,5.461,1035,7.366]],["title/injectables/LocalStrategy.html",[110,0.851,239,2.828]],["body/injectables/LocalStrategy.html",[3,0.139,4,0.139,5,0.108,7,0.327,8,0.012,9,0.799,10,0.139,11,0.241,12,0.009,13,0.009,39,4.568,68,1.866,98,2.937,104,1.279,107,0.774,110,1.323,111,1.869,113,0.559,114,1.743,116,0.895,118,1.359,119,1.221,138,1.973,139,0.864,140,1.798,162,1.869,176,3.984,177,3.984,192,2.002,217,1.24,219,2.322,239,4.395,246,3.222,280,3.045,281,4.395,293,2.417,299,3.427,355,2.519,356,1.807,357,3.222,409,2.322,554,4.113,643,4.712,952,2.977,967,4.398,971,3.674,1009,5.64,1015,4.398,1017,4.398,1036,4.398,1037,5.027,1038,5.027,1039,6.446,1040,5.027,1041,5.027,1042,5.027]],["title/classes/Mail.html",[11,0.199,1043,2.828]],["body/classes/Mail.html",[3,0.181,4,0.181,5,0.141,8,0.011,10,0.181,11,0.314,12,0.01,13,0.01,497,1.522,1043,5.169,1044,5.738]],["title/controllers/MailController.html",[0,1.193,1045,3.032]],["body/controllers/MailController.html",[0,1.054,2,1.054,3,0.101,4,0.101,5,0.079,7,0.349,8,0.012,9,0.582,10,0.101,11,0.175,12,0.007,13,0.007,49,0.961,63,1.628,64,1.697,65,1.628,66,0.904,68,0.961,80,2.903,98,2.498,104,0.932,107,0.727,113,0.408,114,1.407,116,0.508,118,0.991,124,1.761,130,2.677,133,0.932,141,1.761,166,3.644,167,1.761,169,1.761,172,1.917,188,1.917,189,1.568,192,1.459,193,3.667,200,2.929,217,1.717,219,2.796,241,2.91,259,2.903,281,3.548,287,1.836,300,4.553,301,2.348,319,1.497,383,1.234,398,1.917,399,2.007,403,1.459,405,1.409,406,1.692,410,2.821,418,2.851,552,1.568,581,2.903,582,3.153,607,2.348,637,2.678,638,2.107,649,2.903,739,5.732,887,2.497,927,3.205,934,3.205,962,2.677,995,2.903,997,3.205,1028,3.205,1043,2.497,1045,3.804,1046,3.205,1047,6.59,1048,3.663,1049,5.204,1050,3.663,1051,3.663,1052,5.295,1053,2.497,1054,2.677,1055,4.124,1056,2.497,1057,3.879,1058,3.205,1059,2.219,1060,2.497,1061,3.205,1062,5.204,1063,3.663,1064,3.663,1065,3.663,1066,3.205,1067,3.205,1068,3.663,1069,3.663,1070,3.663,1071,3.663,1072,4.553,1073,3.663,1074,3.663,1075,5.204,1076,3.663,1077,3.663,1078,3.205,1079,3.663,1080,3.205,1081,3.663,1082,3.205,1083,3.663,1084,3.663,1085,3.663,1086,3.663,1087,3.663,1088,3.663,1089,3.663,1090,3.663,1091,3.663,1092,3.663,1093,3.663,1094,3.663,1095,3.663,1096,3.663,1097,3.663,1098,3.663,1099,3.663,1100,3.663,1101,3.205,1102,3.663,1103,3.663,1104,3.205,1105,3.663]],["title/modules/MailModule.html",[14,0.934,32,2.828]],["body/modules/MailModule.html",[2,1.583,3,0.11,4,0.11,5,0.085,7,0.359,8,0.012,9,0.63,10,0.11,11,0.19,12,0.008,13,0.008,14,1.422,16,1.637,17,1.697,18,1.832,19,1.832,20,1.697,21,2.918,22,1.832,31,4.754,32,5.437,36,4.754,40,2.541,41,1.832,42,1.832,44,2.918,48,1.987,49,1.04,50,4.022,51,3.925,52,2.173,68,1.443,69,3.165,93,1.914,97,3.142,105,2.898,106,2.757,107,0.82,108,2.173,109,2.625,125,3.469,162,1.474,253,2.541,278,3.469,383,1.335,436,3.526,438,2.898,616,2.402,637,1.526,638,2.281,701,3.142,888,3.751,922,2.541,923,3.142,1021,3.142,1045,4.618,1053,3.751,1054,2.898,1057,4.754,1058,3.469,1059,2.402,1061,3.469,1101,3.469,1104,3.469,1106,3.469,1107,3.965,1108,3.469,1109,3.965,1110,3.965,1111,5.502,1112,3.965,1113,3.469,1114,3.751,1115,3.965,1116,3.965,1117,3.469,1118,3.965,1119,3.965,1120,3.965,1121,3.965,1122,3.965,1123,3.965,1124,3.965,1125,3.965,1126,3.965,1127,3.965,1128,3.965,1129,3.965,1130,3.965,1131,3.965,1132,3.965,1133,3.965,1134,3.965,1135,3.965,1136,3.965]],["title/injectables/MailService.html",[110,0.851,1057,2.658]],["body/injectables/MailService.html",[3,0.111,4,0.111,5,0.087,7,0.339,8,0.012,9,0.639,10,0.111,11,0.192,12,0.008,13,0.008,49,1.054,63,1.786,64,1.311,65,1.786,66,0.992,68,1.054,104,1.832,107,0.865,110,1.14,111,1.494,113,0.447,114,1.502,116,1.034,118,2.065,119,1.108,138,2.205,139,0.965,140,2.009,162,1.494,192,2.212,200,2.468,241,3.3,242,2.014,243,2.74,252,2.312,253,2.576,270,4.059,287,2.014,291,2.938,326,1.997,370,1.648,371,2.734,372,2.212,373,2.212,378,2.937,387,2.212,390,2.592,391,2.212,394,2.565,403,1.601,405,1.546,607,4.617,711,3.185,840,6.303,841,3.517,842,3.517,843,3.517,1043,4.911,1052,6.005,1053,2.74,1054,2.938,1055,4.401,1056,5.206,1057,4.617,1137,3.517,1138,4.019,1139,5.554,1140,4.019,1141,4.019,1142,4.019,1143,4.019,1144,4.019]],["title/injectables/MulterConfigService.html",[110,0.851,829,3.032]],["body/injectables/MulterConfigService.html",[3,0.121,4,0.121,5,0.144,7,0.323,8,0.012,9,0.697,10,0.121,11,0.21,12,0.008,13,0.008,93,1.526,104,1.499,107,0.527,110,1.21,111,1.631,113,0.488,114,1.594,116,0.924,118,1.8,119,1.142,138,1.343,139,0.588,140,1.223,149,5.157,180,2.657,193,2.657,206,3.778,217,1.928,616,3.571,723,3.206,748,3.476,802,3.206,829,4.308,981,3.838,1145,3.838,1146,7.118,1147,5.894,1148,7.118,1149,4.386,1150,6.657,1151,5.894,1152,4.386,1153,5.894,1154,4.386,1155,4.386,1156,5.894,1157,5.894,1158,3.838,1159,5.894,1160,4.386,1161,5.894,1162,4.386,1163,4.386,1164,4.386,1165,4.386,1166,4.386,1167,4.386,1168,4.386,1169,4.386,1170,5.894,1171,3.838,1172,4.386,1173,4.386,1174,4.386,1175,4.386,1176,5.894,1177,4.386,1178,4.386,1179,5.894,1180,4.386,1181,4.386,1182,5.894,1183,4.386,1184,5.894,1185,4.386,1186,4.386,1187,4.386,1188,5.894,1189,4.386]],["title/classes/MyThrottlerGuard.html",[11,0.199,185,3.032]],["body/classes/MyThrottlerGuard.html",[3,0.159,4,0.159,5,0.124,7,0.251,8,0.012,10,0.159,11,0.275,12,0.01,13,0.01,81,5.998,83,4.207,113,0.64,114,1.897,116,0.799,118,1.556,162,2.14,185,5.128,281,4.783,355,2.884,497,1.336,550,3.153,952,3.24,1190,5.035,1191,7.568,1192,7.878,1193,5.755,1194,7.015,1195,5.755,1196,5.755,1197,5.755,1198,5.035,1199,5.755,1200,5.755,1201,5.755,1202,5.755]],["title/classes/Permission.html",[11,0.199,316,1.596]],["body/classes/Permission.html",[3,0.106,4,0.106,5,0.083,7,0.309,8,0.012,10,0.172,11,0.258,12,0.007,13,0.007,14,1.398,49,1.007,66,1.327,93,1.336,107,0.746,109,2.07,113,0.427,116,1.111,119,1.231,133,2.037,139,1.12,217,0.947,265,1.5,308,1.901,316,2.07,319,1.786,383,1.293,456,2.986,490,2.658,491,3.403,497,0.891,500,2.868,501,3.403,503,3.403,505,3.98,508,3.251,509,3.763,510,3.031,512,3.263,513,5.101,518,2.816,525,2.326,526,1.846,527,1.477,528,2.326,529,1.428,530,1.336,531,2.816,532,2.326,534,2.76,613,3.763,614,3.98,637,1.477,638,2.209,703,2.618,717,2.618,922,2.461,1203,2.807,1204,3.84,1205,3.84,1206,3.84,1207,3.84,1208,3.84,1209,3.84,1210,3.84,1211,3.84,1212,3.84,1213,3.84,1214,3.84,1215,3.36]],["title/controllers/PermissionsController.html",[0,1.193,1216,3.032]],["body/controllers/PermissionsController.html",[0,0.984,2,0.984,3,0.095,4,0.095,5,0.074,7,0.325,8,0.012,9,0.544,10,0.095,11,0.164,12,0.007,13,0.007,64,1.9,68,2.139,104,1.724,107,0.814,113,0.381,114,1.34,116,0.941,118,1.833,119,1.17,124,1.644,132,2.778,133,1.724,138,2.075,139,0.908,140,1.89,167,1.644,169,2.8,172,2.593,181,1.412,188,1.79,189,1.464,217,0.844,316,2.872,326,2.095,370,1.728,371,2.32,372,1.973,373,1.973,377,1.52,378,2.628,379,3.012,380,2.838,382,3.175,384,3.175,386,2.838,387,1.362,390,2.459,391,1.362,392,1.967,394,1.58,395,3.869,396,2.192,398,1.79,399,1.874,400,2.121,403,1.362,404,2.332,405,1.316,406,1.58,409,1.58,410,1.464,413,3.175,414,2.072,415,2.072,416,3.002,417,2.072,418,1.874,419,1.967,420,2.072,421,2.072,422,2.85,423,2.072,425,1.967,426,1.967,428,2.332,430,1.967,610,4.529,664,2.332,913,2.711,1216,3.621,1217,2.992,1218,2.992,1219,3.42,1220,2.5,1221,3.42,1222,3.42,1223,4.954,1224,7.067,1225,3.42,1226,3.42,1227,3.42,1228,4.621,1229,3.42,1230,3.42,1231,2.992,1232,3.733,1233,2.992,1234,3.926,1235,3.42,1236,3.42,1237,3.42,1238,3.42,1239,3.42,1240,3.42,1241,2.992,1242,3.42]],["title/modules/PermissionsModule.html",[14,0.934,33,2.828]],["body/modules/PermissionsModule.html",[2,1.939,3,0.149,4,0.149,5,0.116,7,0.345,8,0.012,9,0.858,10,0.149,11,0.258,12,0.009,13,0.009,14,1.655,16,2.226,17,2.309,18,2.492,19,2.492,20,2.309,21,3.396,22,2.492,33,5.513,40,3.113,41,2.492,42,2.492,44,2.492,48,2.703,49,1.415,106,2.703,107,0.648,109,2.075,316,2.075,703,4.596,707,4.275,1216,5.374,1232,5.182,1233,4.719,1243,4.719,1244,4.719,1245,5.394,1246,5.394,1247,4.719]],["title/injectables/PermissionsService.html",[110,0.851,1232,2.658]],["body/injectables/PermissionsService.html",[3,0.076,4,0.076,5,0.059,7,0.324,8,0.012,9,0.436,10,0.076,11,0.131,12,0.006,13,0.006,14,1.149,49,0.719,63,1.218,64,1.665,65,1.218,66,1.26,68,1.88,90,1.576,98,3.116,104,1.656,107,0.879,108,1.501,110,0.862,111,1.019,113,0.305,114,1.136,116,0.904,118,1.669,119,1.161,132,2.631,138,1.993,139,0.872,140,1.816,141,2.751,162,2.294,181,1.131,192,1.673,200,1.218,217,1.805,219,3.007,241,2.751,286,1.576,287,1.373,308,2.14,316,1.054,319,1.208,326,1.51,328,2.544,348,1.756,355,2.559,356,1.51,360,1.756,361,2.863,364,3.292,370,1.246,371,1.673,372,1.673,373,1.673,377,1.866,378,2.421,379,3.107,380,2.269,386,2.543,387,1.673,390,2.358,391,1.673,394,1.939,395,1.66,400,1.173,403,1.091,404,1.868,405,1.054,450,1.66,451,1.434,452,1.576,456,1.317,457,2.691,458,1.66,459,1.66,460,1.66,461,1.66,464,1.66,465,1.266,467,2.544,469,2.544,470,1.66,471,2.544,473,1.66,474,1.66,476,1.66,477,1.66,478,1.66,479,1.66,480,1.66,481,1.66,490,1.173,494,2.003,495,2.003,496,1.868,500,1.266,512,1.866,610,4.343,613,3.467,614,3.668,616,1.66,712,3.674,717,1.868,727,2.397,938,1.756,939,1.756,940,2.691,943,1.756,945,3.069,1113,2.397,1218,3.674,1228,4.767,1231,2.397,1232,2.691,1234,3.328,1247,2.397,1248,2.397,1249,2.74,1250,2.74,1251,2.74,1252,2.74,1253,2.74,1254,2.74,1255,2.74,1256,4.199,1257,4.199,1258,2.74,1259,3.732,1260,3.481,1261,2.74,1262,2.74,1263,2.003,1264,2.74,1265,2.74,1266,2.003,1267,4.199,1268,3.674,1269,4.199,1270,2.74]],["title/classes/RegisterUserDto.html",[11,0.199,160,2.171]],["body/classes/RegisterUserDto.html",[3,0.079,4,0.079,5,0.062,7,0.255,8,0.012,10,0.145,11,0.329,12,0.006,13,0.006,66,1.069,107,0.851,113,0.318,116,0.983,119,1.276,133,1.801,139,0.991,154,1.729,160,2.267,178,4.394,189,1.221,265,1.208,280,2.624,308,0.874,315,2.644,319,2.086,356,2.965,383,1.763,410,1.854,497,0.662,499,3.766,502,2,510,1.178,527,2.248,529,1.946,530,0.993,534,2.326,536,1.829,537,4.084,540,3.826,541,1.494,542,2.491,543,3.166,544,3.166,545,2.491,546,1.564,547,3.605,548,3.569,549,3.569,550,3.443,551,3.807,552,3.552,553,4.3,554,3.974,555,4.007,556,2.086,557,4.394,558,4.686,559,3.166,560,3.166,561,2.086,562,2.086,565,4.164,677,2.496,685,2.496,1271,2.853,1272,2.853,1273,2.853,1274,2.853,1275,2.853,1276,2.853,1277,2.853,1278,2.853]],["title/interfaces/Response.html",[144,2.658,866,2.658]],["body/interfaces/Response.html",[3,0.138,4,0.138,5,0.108,7,0.338,8,0.012,9,0.795,10,0.178,11,0.239,12,0.009,13,0.009,61,3.206,104,1.272,110,1.319,113,0.557,119,1.092,139,0.951,144,4.118,193,4.301,265,1.792,378,2.64,406,2.311,409,2.311,453,3.656,547,3.444,723,3.656,777,5.407,866,3.206,867,3.964,957,5.627,960,4.697,962,3.656,974,3.964,1279,3.964,1280,6.78,1281,5.622,1282,5.622,1283,5.622,1284,4.377,1285,4.377,1286,3.656,1287,3.656,1288,4.377,1289,3.964,1290,4.377,1291,4.377,1292,4.377,1293,4.377,1294,4.377,1295,4.377]],["title/classes/Resume.html",[11,0.199,639,2.386]],["body/classes/Resume.html",[3,0.094,4,0.094,5,0.073,7,0.294,8,0.012,10,0.16,11,0.235,12,0.007,13,0.007,49,0.888,66,1.214,93,1.178,109,1.892,113,0.377,116,1.115,119,1.201,133,2.044,139,1.134,217,0.836,265,1.372,308,1.946,319,2.09,383,2.141,438,2.476,456,2.785,490,2.721,491,3.174,497,0.786,500,2.675,501,3.174,503,3.174,505,3.712,508,3.327,509,3.851,510,2.907,512,3.23,513,5.077,518,2.575,525,2.052,526,1.628,527,1.303,528,2.052,529,1.259,530,1.178,531,2.575,532,2.052,534,3.509,625,4.234,626,3.656,627,3.712,628,3.712,637,1.303,638,1.948,639,2.829,870,4.935,871,3.595,922,2.171,923,2.684,1296,2.476,1297,3.949,1298,4.304,1299,3.387,1300,3.387,1301,3.387,1302,3.387,1303,3.387,1304,3.387,1305,3.387,1306,3.387,1307,3.387,1308,3.387,1309,3.387,1310,3.387,1311,3.387,1312,3.387,1313,2.476,1314,2.963,1315,2.309,1316,2.309,1317,2.963]],["title/classes/ResumeHistoryDto.html",[11,0.199,1318,3.032]],["body/classes/ResumeHistoryDto.html",[3,0.124,4,0.124,5,0.097,7,0.293,8,0.012,10,0.124,11,0.344,12,0.008,13,0.008,66,1.475,93,1.559,113,0.499,116,0.934,119,1.243,133,1.712,139,1.103,265,1.668,308,2.06,319,2.065,490,3.073,491,2.456,497,1.04,501,2.456,503,2.456,508,2.346,510,2.778,512,3.324,518,2.346,526,3.235,527,2.301,529,2.861,530,1.559,541,2.346,545,4.303,602,3.623,603,4.077,604,5.566,606,3.276,623,3.055,626,4.13,627,2.872,628,2.872,1297,3.055,1315,4.588,1318,5.248,1319,5.69,1320,4.481,1321,4.481,1322,4.481,1323,4.481,1324,4.481,1325,5.888,1326,2.872]],["title/controllers/ResumesController.html",[0,1.193,1327,3.032]],["body/controllers/ResumesController.html",[0,0.979,2,0.979,3,0.094,4,0.094,5,0.073,7,0.317,8,0.012,9,0.541,10,0.094,11,0.163,12,0.007,13,0.007,64,1.894,68,2.178,104,1.795,107,0.847,113,0.379,114,1.335,116,0.979,118,1.908,119,1.215,124,1.636,132,2.868,133,1.795,138,2.16,139,0.945,140,1.968,167,1.636,169,2.792,172,1.781,181,1.405,188,1.781,189,1.457,217,0.84,326,2.089,370,1.465,371,2.314,372,1.966,373,1.966,377,1.512,378,2.623,379,3.006,380,2.831,382,3.164,384,3.164,386,2.581,387,1.356,390,2.455,391,1.356,392,2.839,394,1.572,396,3.164,398,1.781,399,1.865,400,2.113,403,1.356,405,1.309,406,1.572,409,1.572,410,1.457,411,2.181,413,2.181,414,2.062,415,2.062,416,2.991,417,2.062,418,1.865,419,1.958,420,2.062,421,2.062,422,2.839,423,2.062,425,2.839,426,1.958,428,2.32,430,1.958,621,3.723,626,3.665,637,1.899,653,4.083,1220,2.488,1326,2.181,1327,3.608,1328,2.978,1329,3.403,1330,4.319,1331,3.403,1332,3.403,1333,3.403,1334,3.403,1335,2.978,1336,4.937,1337,3.403,1338,3.403,1339,3.403,1340,3.723,1341,2.978,1342,4.319,1343,3.403,1344,3.403,1345,3.403,1346,3.403,1347,3.403,1348,3.403,1349,3.403,1350,3.403,1351,3.403,1352,3.403]],["title/modules/ResumesModule.html",[14,0.934,34,2.828]],["body/modules/ResumesModule.html",[2,1.945,3,0.15,4,0.15,5,0.117,7,0.346,8,0.012,9,0.862,10,0.15,11,0.26,12,0.009,13,0.009,14,1.659,16,2.238,17,2.321,18,2.505,19,2.505,20,2.321,21,3.404,22,2.505,34,5.52,40,3.124,41,2.505,42,2.505,44,2.505,48,2.718,49,1.422,106,2.718,107,0.651,109,2.086,639,3.119,640,3.964,1316,4.611,1327,5.387,1340,5.189,1341,4.744,1353,4.744,1354,4.744,1355,5.423,1356,5.423,1357,5.423]],["title/injectables/ResumesService.html",[110,0.851,1340,2.658]],["body/injectables/ResumesService.html",[3,0.07,4,0.07,5,0.054,7,0.304,8,0.012,9,0.4,10,0.07,11,0.12,12,0.005,13,0.005,49,0.66,63,1.118,64,1.578,65,1.118,66,0.97,68,1.874,90,1.447,98,3.244,104,1.671,107,0.858,108,1.379,110,0.807,111,0.936,113,0.28,114,1.063,116,0.912,118,1.701,119,1.179,132,2.697,138,2.011,139,0.88,140,1.832,141,3.023,162,2.034,181,1.039,192,1.566,199,1.839,200,1.118,217,1.724,219,3.035,241,2.629,286,1.447,287,1.261,293,1.21,308,2.188,319,1.707,326,1.414,328,2.382,343,1.994,348,1.613,355,1.97,356,0.905,357,1.613,360,1.613,361,2.68,364,3.779,370,1.166,371,1.566,372,1.566,373,1.566,377,1.747,378,2.338,379,3.021,380,2.15,386,2.43,387,1.566,390,2.286,391,1.566,394,1.816,400,1.077,403,1.002,405,0.968,450,1.524,451,1.317,452,1.447,456,1.21,457,3.803,458,1.524,459,2.382,460,1.524,461,1.524,464,1.524,465,2.235,467,2.382,469,2.382,470,1.524,471,2.382,473,1.524,474,1.524,476,1.524,477,1.524,478,1.524,479,1.524,480,1.524,481,1.524,483,1.613,484,1.613,485,1.613,490,2.071,494,1.839,495,1.839,496,1.716,500,1.816,512,1.747,552,1.077,616,2.382,621,1.613,624,1.994,625,1.839,626,3.911,628,2.52,639,3.146,640,1.839,647,1.839,653,3.505,777,2.68,933,1.716,938,1.613,939,1.613,940,2.52,943,1.613,944,1.716,945,1.839,1026,2.201,1082,2.201,1171,2.201,1263,1.839,1266,1.839,1268,3.44,1297,2.68,1313,1.839,1315,2.68,1326,1.613,1330,3.44,1335,3.44,1340,2.52,1342,3.44,1358,2.201,1359,2.516,1360,2.516,1361,3.931,1362,3.931,1363,2.516,1364,3.931,1365,2.516,1366,2.516,1367,2.516,1368,2.516,1369,2.516,1370,2.516,1371,2.516,1372,2.516,1373,3.931,1374,2.516,1375,2.516,1376,2.516,1377,3.931,1378,2.516,1379,3.931,1380,3.931,1381,2.201,1382,2.516,1383,2.516,1384,2.516,1385,1.994,1386,3.116]],["title/classes/Role.html",[11,0.199,315,1.596]],["body/classes/Role.html",[3,0.094,4,0.094,5,0.073,7,0.307,8,0.012,10,0.161,11,0.236,12,0.007,13,0.007,49,0.893,66,1.218,93,1.184,107,0.698,109,1.899,113,0.379,116,1.116,119,1.227,133,2.046,139,1.127,217,0.84,265,1.377,308,1.951,315,1.899,316,2.714,319,1.833,383,1.146,456,2.792,490,2.727,491,3.183,497,0.79,500,2.683,501,3.183,502,2.683,503,3.183,505,3.723,508,3.335,509,4.098,510,2.912,512,3.234,513,5.094,518,3.335,525,2.062,526,1.636,527,1.309,528,2.062,529,1.265,530,1.184,531,2.584,532,2.062,534,3.006,577,3.723,626,3.665,627,3.723,637,1.309,638,1.958,704,2.697,705,2.062,707,2.697,718,2.181,870,4.246,871,3.608,922,2.181,1297,3.96,1314,2.978,1315,2.32,1387,2.488,1388,3.403,1389,3.403,1390,3.403,1391,3.403,1392,3.403,1393,3.403,1394,3.403,1395,3.403,1396,3.403,1397,3.403,1398,3.403,1399,3.403,1400,3.403,1401,3.403,1402,2.978]],["title/controllers/RolesController.html",[0,1.193,1403,3.032]],["body/controllers/RolesController.html",[0,1.043,2,1.043,3,0.1,4,0.1,5,0.078,7,0.323,8,0.012,9,0.576,10,0.1,11,0.173,12,0.007,13,0.007,64,1.962,68,2.077,104,1.764,107,0.833,113,0.403,114,1.397,116,0.962,118,1.875,119,1.186,124,1.742,132,2.667,133,1.764,138,2.122,139,0.929,140,1.933,167,1.742,169,2.893,172,2.703,181,1.496,182,3.016,188,1.897,189,1.551,217,0.894,326,2.164,370,1.532,371,2.397,372,2.057,373,2.057,377,1.611,378,2.68,379,3.081,380,2.915,382,3.31,384,3.31,386,2.674,387,1.444,390,2.507,391,1.444,392,2.971,394,1.674,396,3.31,398,1.897,399,1.986,400,2.211,403,1.444,405,1.394,406,1.674,409,1.674,410,1.551,411,2.323,413,2.323,414,2.196,415,2.196,416,3.129,417,2.196,418,1.986,419,2.085,420,2.196,421,2.196,422,2.971,423,2.196,425,2.971,426,2.085,428,2.471,430,2.085,637,1.987,656,4.619,1220,2.649,1403,3.775,1404,3.171,1405,3.171,1406,3.171,1407,3.624,1408,3.624,1409,3.624,1410,3.624,1411,4.859,1412,3.624,1413,3.171,1414,3.775,1415,3.624,1416,3.624,1417,3.624,1418,3.624,1419,3.624,1420,3.624,1421,3.624]],["title/modules/RolesModule.html",[14,0.934,35,2.658]],["body/modules/RolesModule.html",[2,1.893,3,0.144,4,0.144,5,0.112,7,0.349,8,0.012,9,0.825,10,0.144,11,0.248,12,0.009,13,0.009,14,1.626,16,2.142,17,2.222,18,2.398,19,2.398,20,2.222,21,3.337,22,3.337,35,5.213,40,3.039,41,2.398,42,2.398,44,2.398,48,2.601,49,1.361,106,2.601,107,0.623,109,1.997,182,4.244,315,1.997,639,2.986,705,3.986,708,3.794,1316,3.539,1403,5.28,1413,4.542,1422,4.542,1423,4.542,1424,4.542,1425,5.191,1426,5.191,1427,5.191,1428,4.542]],["title/injectables/RolesService.html",[110,0.851,182,2.079]],["body/injectables/RolesService.html",[3,0.075,4,0.075,5,0.059,7,0.318,8,0.012,9,0.433,10,0.075,11,0.13,12,0.006,13,0.006,14,0.613,49,0.715,63,1.211,64,1.66,65,1.211,66,1.255,68,1.704,90,1.568,98,2.954,104,1.566,107,0.893,110,0.858,111,1.013,113,0.303,114,1.131,116,0.902,118,1.665,119,1.16,132,2.432,138,1.989,139,0.87,140,1.812,141,2.446,162,2.416,181,1.125,182,2.096,192,1.666,200,1.211,217,1.884,219,2.636,241,2.744,286,1.568,287,1.366,297,1.747,308,2.071,315,1.609,316,1.958,319,1.203,326,1.504,343,2.16,355,3.085,356,0.98,364,2.405,370,1.241,371,1.666,372,1.666,373,1.666,377,1.858,378,2.416,379,3.102,380,2.261,386,2.536,387,1.666,390,2.49,391,1.666,394,1.932,400,1.167,403,1.086,405,1.049,422,1.568,450,1.651,451,1.427,452,1.568,456,1.31,457,2.68,458,1.651,459,1.651,460,1.651,461,1.651,464,1.651,465,3.224,467,2.534,469,2.534,470,1.651,471,2.534,473,1.651,474,1.651,476,1.651,477,1.651,478,1.651,479,1.651,480,1.651,481,1.651,483,3.658,484,3.261,485,3.261,490,1.167,502,1.932,512,1.211,577,2.68,613,1.651,614,1.747,616,1.651,650,3.314,656,4.335,713,3.314,718,1.747,720,2.851,728,2.16,744,2.16,756,3.314,933,1.858,938,1.747,939,1.747,940,2.68,943,1.747,944,3.469,1259,1.992,1260,1.858,1263,1.992,1266,1.992,1385,2.16,1386,2.16,1406,3.659,1411,4.473,1414,3.057,1428,2.384,1429,2.384,1430,2.725,1431,2.725,1432,2.725,1433,2.725,1434,2.725,1435,2.725,1436,2.725,1437,2.16,1438,4.182,1439,2.725,1440,2.725,1441,2.725,1442,2.725,1443,2.725,1444,2.725,1445,4.182,1446,4.182,1447,2.725,1448,2.384,1449,2.725,1450,2.725,1451,4.182,1452,2.725]],["title/classes/Subcriber.html",[11,0.199,1059,2.513]],["body/classes/Subcriber.html",[3,0.109,4,0.109,5,0.085,7,0.311,8,0.012,10,0.174,11,0.262,12,0.008,13,0.008,49,1.032,66,1.35,93,1.369,107,0.756,109,2.105,113,0.438,116,1.105,119,1.209,133,2.025,139,1.119,217,0.971,265,1.526,308,1.926,319,2.129,383,1.325,456,3.025,490,2.693,491,3.448,497,0.913,500,2.906,501,3.448,503,3.448,505,4.033,508,3.294,509,3.812,510,3.055,512,3.289,513,5.08,518,2.865,525,2.384,526,1.892,527,1.514,528,2.384,529,1.463,530,1.369,531,2.865,532,2.384,534,2.796,582,3.812,637,1.514,638,2.263,922,2.522,1059,3.316,1060,2.683,1114,2.683,1453,2.876,1454,3.935,1455,3.935,1456,3.935,1457,3.935,1458,3.935,1459,3.935,1460,3.935,1461,3.935,1462,3.935,1463,3.935,1464,3.443]],["title/controllers/SubcribersController.html",[0,1.193,1465,3.032]],["body/controllers/SubcribersController.html",[0,0.984,2,0.984,3,0.095,4,0.095,5,0.074,7,0.331,8,0.012,9,0.544,10,0.095,11,0.164,12,0.007,13,0.007,64,1.9,68,2.094,104,1.798,107,0.849,113,0.381,114,1.34,116,0.981,118,1.911,119,1.087,124,1.644,132,2.778,133,1.798,138,2.163,139,0.947,140,1.971,166,1.79,167,1.644,168,2.992,169,2.8,172,1.79,181,1.412,188,1.79,189,1.464,217,0.844,326,1.781,370,1.47,371,2.32,372,1.973,373,1.973,377,1.52,378,2.628,379,3.012,380,2.838,382,3.175,384,3.175,386,2.589,387,1.362,390,2.222,391,1.362,392,2.85,398,3.049,399,1.874,400,2.121,403,1.362,405,1.316,406,1.58,409,1.58,410,1.464,411,2.192,413,2.192,414,2.072,415,2.072,416,3.002,417,2.072,418,1.874,419,1.967,420,2.072,421,2.072,422,2.85,423,2.072,425,2.85,426,1.967,430,1.967,582,2.072,637,1.906,667,4.529,1072,2.992,1220,2.5,1411,4.529,1414,2.5,1465,3.621,1466,2.992,1467,4.954,1468,2.992,1469,3.42,1470,3.42,1471,3.42,1472,3.42,1473,3.42,1474,4.954,1475,3.42,1476,3.42,1477,3.42,1478,3.42,1479,3.42,1480,3.926,1481,3.733,1482,2.992,1483,3.926,1484,2.332,1485,2.711,1486,3.42,1487,3.42,1488,3.42,1489,3.42,1490,3.42,1491,2.992,1492,3.42,1493,3.42,1494,3.42,1495,3.42,1496,3.42,1497,3.42]],["title/modules/SubcribersModule.html",[14,0.934,36,2.658]],["body/modules/SubcribersModule.html",[2,1.905,3,0.145,4,0.145,5,0.113,7,0.342,8,0.012,9,0.834,10,0.145,11,0.251,12,0.009,13,0.009,14,1.634,16,2.164,17,2.245,18,2.422,19,2.422,20,2.245,21,3.352,22,3.352,36,5.225,40,3.059,41,2.422,42,2.422,44,2.422,48,2.628,49,1.375,106,2.628,107,0.63,109,2.017,1059,3.177,1114,4.515,1117,4.588,1465,5.305,1481,5.434,1482,4.588,1498,4.588,1499,4.588,1500,4.588,1501,5.244,1502,5.244,1503,4.588]],["title/injectables/SubcribersService.html",[110,0.851,1481,2.658]],["body/injectables/SubcribersService.html",[3,0.076,4,0.076,5,0.06,7,0.319,8,0.012,9,0.439,10,0.076,11,0.132,12,0.006,13,0.006,49,0.724,63,1.227,64,1.673,65,1.227,66,1.042,68,1.838,90,1.589,93,0.961,98,3.224,104,1.661,107,0.842,110,0.867,111,1.027,113,0.307,114,1.143,116,0.943,118,1.766,119,1.105,132,2.636,138,2.08,139,0.911,140,1.895,141,2.977,162,1.908,181,1.14,192,1.683,200,1.227,217,1.866,219,2.86,241,2.763,286,1.589,287,1.384,293,1.328,297,3.288,308,1.759,319,1.879,326,2.066,355,2.117,356,0.993,357,1.77,364,2.43,370,1.254,371,1.683,372,1.683,373,1.683,377,1.877,378,2.428,379,3.115,380,2.28,386,2.554,387,1.683,390,2.155,391,1.683,400,1.182,403,1.1,405,1.063,419,1.589,450,1.673,451,1.446,452,1.589,456,1.328,457,3.288,458,1.673,459,1.673,460,1.673,461,1.673,464,1.673,465,1.951,467,2.56,469,2.56,470,1.673,471,2.56,473,1.673,474,1.673,476,1.673,477,1.673,478,1.673,479,1.673,480,1.673,481,1.673,483,1.77,484,1.77,485,1.77,490,1.182,500,1.276,512,1.227,548,1.883,582,1.673,648,1.883,667,4.186,673,2.416,720,1.883,933,1.883,938,1.77,939,1.77,940,2.708,943,1.77,944,2.88,945,2.019,1059,1.673,1060,1.883,1066,2.416,1067,3.696,1198,2.416,1259,3.088,1260,2.88,1263,2.019,1266,2.019,1437,2.189,1468,3.696,1481,2.708,1483,3.348,1484,4.634,1503,2.416,1504,2.416,1505,4.225,1506,2.762,1507,2.762,1508,2.762,1509,2.762,1510,2.762,1511,4.225,1512,2.762,1513,2.762,1514,4.225,1515,2.762,1516,2.762,1517,2.762,1518,2.762,1519,2.762,1520,2.762,1521,2.762,1522,4.225,1523,4.225,1524,4.225,1525,2.762,1526,5.131,1527,2.762,1528,4.225,1529,4.225,1530,2.762]],["title/injectables/TransformInterceptor.html",[110,0.851,1287,3.032]],["body/injectables/TransformInterceptor.html",[3,0.135,4,0.135,5,0.105,7,0.335,8,0.012,9,0.775,10,0.175,11,0.233,12,0.009,13,0.009,61,3.123,104,1.239,107,0.759,110,1.297,111,1.812,113,0.542,114,1.709,116,0.877,118,1.318,119,0.749,138,1.934,139,0.846,140,1.762,144,3.123,192,1.941,193,2.952,378,1.812,406,2.251,409,2.251,453,3.562,547,2.808,723,3.562,777,4.78,866,3.123,956,4.263,957,6.241,960,5.422,962,4.618,974,3.861,1279,3.861,1280,5.528,1281,5.528,1282,6.49,1283,6.134,1284,4.263,1285,4.263,1286,3.562,1287,4.618,1288,6.134,1289,5.556,1290,4.263,1291,4.263,1292,4.263,1293,4.263,1294,4.263,1295,4.263,1531,4.873,1532,4.873,1533,4.873]],["title/classes/UpdateCompanyDto.html",[11,0.199,395,2.513]],["body/classes/UpdateCompanyDto.html",[3,0.172,4,0.172,5,0.134,7,0.32,8,0.012,10,0.172,11,0.298,12,0.01,13,0.01,370,1.846,375,3.988,395,4.454,404,4.243,497,1.444,564,4.932,605,3.257,952,3.396,1534,5.445,1535,7.353,1536,3.579,1537,3.41]],["title/classes/UpdateFileDto.html",[11,0.199,786,2.828]],["body/classes/UpdateFileDto.html",[3,0.172,4,0.172,5,0.134,7,0.32,8,0.012,10,0.172,11,0.298,12,0.01,13,0.01,370,1.846,497,1.444,570,4.243,572,4.932,605,3.257,786,5.013,798,4.932,952,3.396,1536,3.579,1537,3.41,1538,5.445,1539,7.353]],["title/classes/UpdateJobDto.html",[11,0.199,901,2.828]],["body/classes/UpdateJobDto.html",[3,0.172,4,0.172,5,0.134,7,0.32,8,0.012,10,0.172,11,0.298,12,0.01,13,0.01,370,1.846,497,1.444,573,3.988,575,4.932,605,3.257,901,5.013,906,4.932,952,3.396,1536,3.579,1537,3.41,1540,5.445,1541,7.353]],["title/classes/UpdateMailDto.html",[11,0.199,1056,2.828]],["body/classes/UpdateMailDto.html",[3,0.172,4,0.172,5,0.134,7,0.32,8,0.012,10,0.172,11,0.298,12,0.01,13,0.01,370,1.846,497,1.444,605,3.257,607,3.988,609,4.932,952,3.396,1055,4.932,1056,5.013,1536,3.579,1537,3.41,1542,5.445,1543,7.353]],["title/classes/UpdatePermissionDto.html",[11,0.199,1228,2.828]],["body/classes/UpdatePermissionDto.html",[3,0.172,4,0.172,5,0.134,7,0.32,8,0.012,10,0.172,11,0.298,12,0.01,13,0.01,370,1.846,497,1.444,605,3.257,610,3.988,612,4.932,952,3.396,1228,5.013,1234,4.932,1536,3.579,1537,3.41,1544,5.445,1545,7.353]],["title/classes/UpdateResumeDto.html",[11,0.199,1326,2.658]],["body/classes/UpdateResumeDto.html",[3,0.104,4,0.104,5,0.081,7,0.268,8,0.012,10,0.104,11,0.32,12,0.007,13,0.007,66,1.312,93,1.314,113,0.42,116,1.081,119,1.239,133,1.982,139,1.118,140,2.327,265,1.483,308,1.884,319,2.101,490,2.86,491,3.373,497,0.877,501,3.373,503,3.373,508,2.784,510,2.54,512,3.129,518,2.784,526,2.959,527,2.046,529,2.618,530,1.314,541,1.977,545,4.05,602,3.222,603,3.626,604,5.383,606,2.761,623,2.575,626,3.843,627,3.945,628,3.945,679,3.304,1297,4.196,1315,2.575,1318,4.883,1319,6.257,1325,5.385,1326,3.408,1546,3.777,1547,3.777,1548,5.318,1549,3.777,1550,3.777,1551,3.777,1552,3.777,1553,3.777,1554,3.777,1555,3.777,1556,6.155,1557,3.777,1558,3.777,1559,3.777,1560,3.777]],["title/classes/UpdateRoleDto.html",[11,0.199,1411,2.658]],["body/classes/UpdateRoleDto.html",[3,0.172,4,0.172,5,0.134,7,0.32,8,0.012,10,0.172,11,0.298,12,0.01,13,0.01,370,1.846,497,1.444,605,3.257,656,3.988,658,4.932,952,3.396,1411,4.712,1414,4.549,1485,4.932,1536,3.579,1537,3.41,1561,7.353]],["title/classes/UpdateSubcriberDto.html",[11,0.199,1484,2.828]],["body/classes/UpdateSubcriberDto.html",[3,0.172,4,0.172,5,0.134,7,0.32,8,0.012,10,0.172,11,0.298,12,0.01,13,0.01,370,1.846,497,1.444,605,3.257,667,3.988,669,4.932,952,3.396,1483,4.932,1484,5.013,1536,3.579,1537,3.41,1562,5.445,1563,7.353]],["title/classes/UpdateUserDto.html",[11,0.199,1564,2.828]],["body/classes/UpdateUserDto.html",[3,0.149,4,0.149,5,0.116,7,0.294,8,0.012,10,0.149,11,0.258,12,0.009,13,0.009,113,0.6,116,0.749,119,1.037,139,0.723,179,3.678,217,1.663,265,1.88,293,2.593,301,3.457,308,2.251,326,1.94,370,1.601,465,2.492,497,1.252,536,3.457,546,2.956,552,2.309,554,4.029,605,2.824,629,5.827,642,3.457,952,3.113,984,3.943,1080,4.719,1289,4.275,1381,4.719,1536,3.103,1537,2.956,1564,4.596,1565,5.897,1566,6.741,1567,5.394,1568,6.741,1569,5.394,1570,5.394,1571,5.394,1572,5.394,1573,5.394,1574,4.719,1575,5.394,1576,5.394,1577,5.394]],["title/classes/User.html",[11,0.199,68,1.088]],["body/classes/User.html",[3,0.09,4,0.09,5,0.07,7,0.271,8,0.012,10,0.156,11,0.228,12,0.007,13,0.007,49,0.849,66,1.174,68,1.248,69,1.862,93,2.307,107,0.747,109,1.831,113,0.36,116,1.129,119,1.257,133,2.069,139,1.132,217,0.799,229,4.126,252,1.862,265,1.328,308,1.905,315,2.394,319,1.994,378,1.77,383,1.901,456,2.714,490,2.416,491,3.093,497,0.752,499,3.093,500,2.607,501,3.093,503,3.093,506,3.772,508,3.257,509,3.77,510,3.035,512,3.081,513,5.118,518,2.492,525,1.962,526,1.557,527,1.246,528,1.962,529,1.204,530,1.127,531,2.492,532,1.962,533,3.772,534,3.185,554,3.093,555,3.42,557,3.42,558,3.849,705,1.962,706,2.208,708,2.367,870,3.479,871,2.367,1298,2.833,1578,2.367,1579,4.939,1580,3.238,1581,3.238,1582,3.238,1583,3.238,1584,3.238,1585,3.238,1586,3.238,1587,3.238,1588,3.238,1589,3.238,1590,3.238,1591,3.238,1592,3.238,1593,3.238,1594,3.238,1595,3.238,1596,3.238,1597,2.833]],["title/classes/UserLoginDto.html",[11,0.199,154,2.513]],["body/classes/UserLoginDto.html",[3,0.093,4,0.093,5,0.072,7,0.275,8,0.012,10,0.159,11,0.347,12,0.007,13,0.007,66,1.204,107,0.807,113,0.373,116,0.677,119,1.279,133,1.241,139,0.847,154,2.955,160,1.753,178,3.486,189,1.433,265,1.36,280,4.072,308,1.025,315,2.433,319,2.018,356,2.923,383,1.938,410,3.003,497,0.777,499,3.465,502,2.92,510,1.382,527,2.214,529,2.14,530,1.165,534,2.168,536,2.146,537,4.168,540,4.206,541,1.753,542,2.806,543,3.566,544,3.566,545,2.806,546,1.835,547,3.667,548,3.326,549,3.326,550,3.153,551,3.486,552,3.499,553,4.254,554,4.147,555,3.486,556,2.447,557,4.072,558,4.311,559,2.447,560,3.566,561,3.566,562,3.566,1598,4.878,1599,3.348,1600,3.348]],["title/controllers/UsersController.html",[0,1.193,1601,3.032]],["body/controllers/UsersController.html",[0,1.007,2,1.007,3,0.097,4,0.097,5,0.075,7,0.32,8,0.012,9,0.557,10,0.097,11,0.168,12,0.007,13,0.007,64,1.925,68,2.177,104,1.812,107,0.822,113,0.39,114,1.363,116,0.949,118,1.85,119,1.129,124,1.683,132,2.793,133,1.74,138,2.094,139,0.917,140,1.908,160,1.833,162,2.649,165,4.409,166,2.638,167,1.683,169,2.422,172,1.833,179,3.436,181,1.445,188,1.833,189,1.499,217,0.864,242,2.958,302,3.063,326,1.812,370,1.495,371,2.351,372,2.007,373,2.007,377,1.556,378,2.649,379,3.04,380,2.869,386,2.623,387,1.395,388,3.063,390,2.246,391,1.395,392,2.014,398,2.638,399,1.919,400,2.157,403,1.395,405,1.347,406,1.617,409,1.617,410,1.499,411,2.244,414,2.121,415,2.121,416,3.053,417,2.121,418,1.919,419,2.014,420,2.121,421,2.121,422,2.898,423,2.121,425,2.898,426,2.014,430,2.014,546,3.538,909,4.409,913,3.993,988,2.775,1241,4.409,1491,3.063,1564,4.857,1601,3.683,1602,3.063,1603,3.502,1604,3.502,1605,3.502,1606,3.502,1607,3.502,1608,3.502,1609,3.502,1610,3.063,1611,3.502,1612,3.502,1613,3.063,1614,3.063,1615,3.502,1616,3.502,1617,3.502,1618,3.502,1619,3.502,1620,3.502,1621,3.502,1622,3.063]],["title/modules/UsersModule.html",[14,0.934,37,2.658]],["body/modules/UsersModule.html",[2,1.801,3,0.133,4,0.133,5,0.104,7,0.348,8,0.012,9,0.764,10,0.133,11,0.23,12,0.009,13,0.009,14,1.661,16,1.983,17,2.057,18,2.219,19,2.219,20,2.057,21,3.217,22,3.217,37,5.25,40,2.892,41,2.219,42,2.219,44,2.219,48,2.408,49,1.26,68,1.26,69,3.601,106,3.138,107,0.836,108,3.43,109,2.409,182,3.932,183,3.276,242,4.198,315,1.848,390,1.672,418,2.633,550,3.43,705,3.793,706,3.276,708,3.512,726,3.808,990,4.204,1260,3.276,1574,4.204,1601,5.09,1614,4.204,1623,4.204,1624,4.204,1625,4.805,1626,4.805,1627,4.805,1628,4.204,1629,4.805,1630,4.805]],["title/injectables/UsersService.html",[110,0.851,242,2.079]],["body/injectables/UsersService.html",[3,0.054,4,0.054,5,0.042,7,0.311,8,0.012,9,0.309,10,0.054,11,0.093,12,0.004,13,0.004,49,0.509,63,0.863,64,1.326,65,0.863,66,1.003,68,1.921,90,1.117,98,3.056,104,1.815,107,0.889,108,1.75,110,0.655,111,0.722,113,0.216,114,0.864,116,0.957,118,1.732,119,1.2,130,2.334,132,2.37,138,2.018,139,0.883,140,1.838,141,2.503,160,2.466,162,1.752,179,2.177,192,1.272,193,1.176,199,1.419,200,1.419,206,2.046,217,1.807,219,3.186,229,3.444,241,2.845,242,2.038,252,1.117,265,0.89,270,2.973,275,2.794,280,1.934,282,2.334,286,1.837,287,0.973,288,1.699,289,1.699,290,1.539,291,1.419,293,1.955,296,2.53,306,1.419,308,1.96,315,2.154,316,0.747,319,1.778,326,1.148,328,1.176,340,1.699,348,2.046,354,1.699,355,2.361,356,0.698,360,2.046,361,2.177,364,2.339,370,0.947,371,1.272,372,2.074,373,1.272,377,1.419,378,2.082,379,2.747,380,1.807,386,2.094,387,1.272,390,2.059,391,1.272,400,0.831,403,0.773,405,0.747,450,1.176,451,1.016,452,1.117,456,1.535,457,1.244,458,1.176,459,1.176,460,1.176,461,1.176,464,1.176,465,2.405,467,1.934,469,1.934,470,1.176,471,1.934,473,1.176,474,1.176,476,1.176,477,1.176,478,1.176,479,1.176,480,1.176,481,1.176,483,2.046,484,2.606,485,2.606,490,0.831,499,1.75,500,0.897,546,2.582,552,0.831,554,3.387,555,1.934,557,1.934,616,2.464,648,1.324,706,1.324,711,1.539,713,3.223,718,1.244,721,2.334,724,3.558,725,1.699,726,1.539,728,1.539,747,1.699,748,1.539,750,1.699,756,1.539,757,2.794,760,2.53,769,1.699,933,1.324,938,1.244,939,1.244,940,2.046,943,1.244,944,1.324,1259,2.334,1260,2.177,1385,3.223,1386,4.126,1437,1.539,1448,2.794,1564,3.817,1610,2.794,1622,2.794,1628,1.699,1631,1.699,1632,5.917,1633,4.067,1634,3.193,1635,3.193,1636,3.193,1637,1.942,1638,3.193,1639,1.942,1640,3.193,1641,1.942,1642,1.942,1643,1.942,1644,3.193,1645,1.942,1646,3.193,1647,6.181,1648,1.942,1649,1.942,1650,1.942,1651,1.942,1652,1.942,1653,1.942,1654,2.794,1655,1.942,1656,1.942,1657,1.942,1658,1.942,1659,1.942,1660,3.193,1661,1.942,1662,1.942,1663,3.193,1664,1.942,1665,1.942,1666,1.942,1667,4.711,1668,1.942,1669,1.942,1670,3.193,1671,1.942,1672,1.942,1673,1.942,1674,1.942,1675,1.942,1676,4.711,1677,1.942,1678,1.942,1679,3.193,1680,4.067,1681,1.942,1682,1.942,1683,1.942,1684,1.942,1685,1.942,1686,3.193,1687,1.942,1688,1.942]],["title/coverage.html",[1689,4.965]],["body/coverage.html",[0,2.115,1,1.693,5,0.079,6,2.026,8,0.012,11,0.395,12,0.005,13,0.005,20,0.991,38,1.484,39,1.332,57,1.693,68,0.966,69,1.332,110,1.589,112,2.026,122,1.693,123,2.026,132,0.833,139,0.885,144,1.484,154,1.403,160,1.212,162,0.861,166,1.212,167,1.113,175,1.693,178,3.165,182,1.161,185,1.693,238,1.579,239,1.579,242,1.161,252,1.332,264,2.026,315,0.891,316,0.891,367,1.693,368,2.026,375,1.484,383,1.24,395,1.403,401,1.484,436,1.484,439,2.026,448,1.693,498,3.351,536,3.654,546,1.269,563,2.026,564,2.918,570,1.579,571,2.026,572,2.918,573,1.484,574,2.026,575,2.918,607,1.484,608,2.026,609,2.918,610,1.484,611,2.026,612,2.918,621,1.484,622,2.918,623,3.561,637,0.891,639,1.332,653,1.484,656,1.484,657,2.026,658,2.918,667,1.484,668,2.026,669,2.918,692,1.693,693,2.026,695,1.484,703,1.579,705,1.403,709,2.026,717,1.579,718,1.484,719,1.835,720,1.579,721,1.693,739,6.901,778,2.026,779,1.693,780,2.026,786,1.579,799,1.484,829,1.693,833,2.026,844,1.693,845,2.026,866,2.36,868,2.026,869,3.351,887,1.579,888,1.579,890,1.693,891,2.026,901,1.579,904,1.484,924,2.026,950,2.026,951,2.918,969,1.835,970,1.835,1008,2.026,1034,2.026,1036,2.026,1043,1.579,1044,2.026,1045,1.693,1046,2.026,1056,1.579,1057,1.484,1059,1.403,1060,1.579,1114,1.579,1137,2.026,1145,2.026,1190,2.026,1203,3.351,1216,1.693,1217,2.026,1228,1.579,1232,1.484,1248,2.026,1279,2.918,1286,1.693,1287,1.693,1296,3.351,1313,1.693,1316,1.579,1318,1.693,1319,2.918,1326,1.484,1327,1.693,1328,2.026,1340,1.484,1358,2.026,1387,3.351,1403,1.693,1404,2.026,1411,1.484,1429,2.026,1453,3.351,1465,1.693,1466,2.026,1480,1.835,1481,1.484,1484,1.579,1485,1.835,1504,2.026,1534,2.026,1538,2.026,1540,2.026,1542,2.026,1544,2.026,1562,2.026,1564,1.579,1565,2.026,1578,3.351,1601,1.693,1602,2.026,1631,2.026,1689,2.026,1690,2.316,1691,2.316,1692,2.316,1693,8.365,1694,5.701,1695,6.806,1696,4.584,1697,6.365,1698,5.701,1699,6.606,1700,4.584,1701,3.683,1702,7.682,1703,6.365,1704,4.011,1705,5.569,1706,3.683,1707,2.316,1708,2.026,1709,2.316,1710,3.683,1711,3.683,1712,2.316,1713,2.316,1714,2.316,1715,2.316,1716,2.316]],["title/dependencies.html",[17,2.137,1717,3.025]],["body/dependencies.html",[8,0.012,9,0.773,11,0.302,12,0.009,13,0.009,17,2.081,49,1.275,52,2.664,56,3.553,61,3.115,63,2.16,64,1.585,65,2.16,66,1.556,80,3.852,83,3.553,176,3.852,180,2.945,189,2.081,246,3.115,250,3.852,290,3.852,299,4.775,329,4.253,400,2.081,451,2.544,452,2.796,453,3.553,530,1.691,541,2.544,605,2.544,802,3.553,854,3.852,984,3.553,1016,4.253,1053,3.314,1054,3.553,1158,4.253,1537,2.664,1654,4.253,1718,4.861,1719,4.861,1720,4.861,1721,6.308,1722,4.861,1723,4.861,1724,4.861,1725,4.861,1726,4.861,1727,4.861,1728,4.861,1729,4.861,1730,4.861,1731,4.861,1732,4.861,1733,4.861,1734,4.861,1735,4.861,1736,4.861,1737,4.861,1738,4.861,1739,4.861,1740,4.861,1741,4.861,1742,4.861,1743,4.861,1744,4.861,1745,4.861,1746,4.861,1747,4.861,1748,4.861,1749,4.861,1750,4.861,1751,4.861,1752,4.861,1753,4.861,1754,4.861,1755,4.861,1756,4.861,1757,4.861,1758,4.861,1759,4.861,1760,4.861]],["title/miscellaneous/functions.html",[1761,2.216,1762,4.368]],["body/miscellaneous/functions.html",[8,0.01,12,0.01,13,0.01,20,3.432,113,0.735,1708,5.775,1761,4.23,1762,5.775,1763,6.601]],["title/index.html",[113,0.385,1764,3.457,1765,3.457]],["body/index.html",[8,0.011,12,0.01,13,0.01,193,3.671,294,4.802,297,3.883,298,5.301,465,2.798,642,3.883,894,5.29,984,5.29,995,5.735,1053,4.131,1078,5.301,1766,6.059,1767,6.059,1768,7.237,1769,7.237,1770,6.059,1771,7.237,1772,7.237,1773,7.237,1774,6.059,1775,6.059,1776,6.331,1777,7.237]],["title/modules.html",[16,2.342]],["body/modules.html",[8,0.01,12,0.01,13,0.01,15,4.081,16,2.305,26,3.807,27,3.807,28,3.807,29,3.807,30,3.807,31,3.579,32,3.807,33,3.807,34,3.807,35,3.579,36,3.579,37,3.579,1778,8.549,1779,8.549,1780,8.549,1781,8.581,1782,5.584,1783,5.584]],["title/overview.html",[1784,4.965]],["body/overview.html",[2,1.039,8,0.012,12,0.007,13,0.007,14,0.813,15,6.256,16,1.491,17,1.546,18,1.668,19,1.668,20,1.546,21,1.668,22,1.668,23,3.16,24,3.16,25,3.16,26,5.536,27,4.721,28,5.051,29,4.721,30,4.095,31,4.748,32,5.256,33,4.721,34,4.721,35,4.748,36,4.748,37,4.941,38,3.849,39,4.357,40,2.38,41,1.668,42,1.668,111,1.343,182,3.796,234,3.16,235,3.16,237,3.16,238,4.095,239,4.095,242,3.796,294,2.862,401,3.849,432,3.16,433,3.16,497,0.838,695,3.849,698,3.16,699,3.16,799,3.849,824,3.16,825,3.16,867,2.862,904,4.748,916,3.16,917,3.16,918,3.16,1057,3.849,1106,3.16,1108,3.16,1232,3.849,1243,3.16,1244,3.16,1340,3.849,1353,3.16,1354,3.16,1422,3.16,1423,3.16,1424,3.16,1481,4.748,1498,3.16,1499,3.16,1500,3.16,1623,3.16,1624,3.16,1784,3.16,1785,5.152,1786,3.612,1787,3.612]],["title/properties.html",[265,1.392,1717,3.025]],["body/properties.html",[8,0.012,12,0.01,13,0.01,265,1.715,502,2.84,1776,6.813,1788,6.149,1789,6.149,1790,6.149,1791,6.149,1792,6.149,1793,7.301,1794,6.149,1795,6.149,1796,6.149,1797,6.149,1798,6.149,1799,6.149,1800,6.149,1801,6.149,1802,6.149,1803,6.149,1804,6.149]],["title/miscellaneous/typealiases.html",[1761,2.216,1805,4.993]],["body/miscellaneous/typealiases.html",[8,0.01,12,0.01,13,0.01,113,0.668,139,0.805,252,4.141,448,5.262,498,4.39,531,4.391,717,4.908,718,4.614,869,4.39,887,4.908,1060,4.908,1203,4.39,1296,4.39,1313,5.262,1387,4.39,1453,4.39,1578,4.39,1761,3.849,1806,6.006,1807,5.255,1808,5.255,1809,5.255,1810,5.255,1811,5.255,1812,5.255,1813,5.255]],["title/miscellaneous/variables.html",[1761,2.216,1814,4.368]],["body/miscellaneous/variables.html",[8,0.012,12,0.004,13,0.004,14,1.609,64,1.544,68,1.474,69,1.848,93,1.422,104,0.498,107,0.859,113,0.218,119,0.864,139,0.753,141,0.94,143,1.55,166,1.682,167,1.545,169,1.965,206,4.753,217,0.483,282,5.421,308,2.538,315,0.753,316,0.753,318,6.905,319,2.299,326,0.703,369,2.811,370,1.213,383,1.082,398,1.682,436,2.059,498,1.43,500,3.302,535,1.712,547,1.428,613,4.331,614,4.582,637,2.162,664,2.787,703,2.191,705,1.946,719,2.546,720,2.191,721,2.348,744,1.55,760,5.578,768,4.141,773,6.049,777,1.334,869,1.43,888,2.191,889,1.712,894,2.348,960,1.43,969,2.546,970,2.546,971,1.43,972,1.712,988,4.143,1021,5.578,1114,2.191,1203,1.43,1215,1.712,1286,2.988,1296,1.43,1316,2.191,1317,1.712,1387,1.43,1402,1.712,1405,3.577,1453,1.43,1464,1.712,1480,2.546,1578,1.43,1579,6.255,1597,1.712,1613,1.712,1704,1.712,1705,1.712,1761,1.254,1807,1.712,1808,1.712,1809,1.712,1810,1.712,1811,1.712,1812,1.712,1813,1.712,1814,1.712,1815,4.088,1816,5.937,1817,1.956,1818,5.228,1819,3.213,1820,7.149,1821,5.619,1822,7.149,1823,7.149,1824,7.993,1825,7.993,1826,3.213,1827,7.149,1828,7.149,1829,1.956,1830,3.213,1831,1.956,1832,3.213,1833,4.733,1834,3.213,1835,1.956,1836,3.213,1837,1.956,1838,1.956,1839,4.733,1840,3.213,1841,1.956,1842,1.956,1843,1.956,1844,3.213,1845,1.956,1846,3.213,1847,4.733,1848,3.213,1849,1.956,1850,3.213,1851,1.956,1852,1.956,1853,4.733,1854,3.213,1855,1.956,1856,1.956,1857,1.956,1858,3.213,1859,1.956,1860,1.956,1861,5.937,1862,3.213,1863,1.956,1864,3.213,1865,1.956,1866,1.956,1867,3.213,1868,1.956,1869,1.956,1870,1.956,1871,1.956,1872,1.956,1873,3.213,1874,1.956,1875,1.956,1876,3.213,1877,1.956,1878,1.956,1879,1.956,1880,1.956,1881,1.956]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMailDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/MyThrottlerGuard.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subcriber.html":{},"controllers/SubcribersController.html":{},"modules/SubcribersModule.html":{},"injectables/SubcribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubcriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":739,"title":{},"body":{"injectables/DatabasesService.html":{},"controllers/MailController.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1789,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1758,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1734,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1733,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1753,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1693,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1710,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1706,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1701,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1714,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1711,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1707,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1713,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1694,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1698,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1697,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1700,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1695,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1699,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1696,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1712,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0h00",{"_index":1070,"title":{},"body":{"controllers/MailController.html":{}}}],["1",{"_index":465,"title":{"classes/Company-1.html":{}},"body":{"injectables/CompaniesService.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"controllers/FileController.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["1.0.0",{"_index":1755,"title":{},"body":{"dependencies.html":{}}}],["1.0.17",{"_index":1760,"title":{},"body":{"dependencies.html":{}}}],["1.0.2",{"_index":1737,"title":{},"body":{"dependencies.html":{}}}],["1.2.2",{"_index":1723,"title":{},"body":{"dependencies.html":{}}}],["1.4.7",{"_index":1736,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":1718,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["10.0.3",{"_index":1722,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["1024",{"_index":814,"title":{},"body":{"controllers/FileController.html":{}}}],["10t10:00:00.000z",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.0.0",{"_index":1728,"title":{},"body":{"dependencies.html":{}}}],["11t08:20:00.000z",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["123456",{"_index":562,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["12t09:15:00.000z",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13",{"_index":1785,"title":{},"body":{"overview.html":{}}}],["13t10:00:00.000z",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14t11:00:00.000z",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14t12:30:00.000z",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t08:00:00.000z",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:00:00.000z",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.4.7",{"_index":1739,"title":{},"body":{"dependencies.html":{}}}],["16t10:00:00.000z",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16t11:00:00.000z",{"_index":1858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17t10:30:00.000z",{"_index":1862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17t11:00:00.000z",{"_index":1864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":1786,"title":{},"body":{"overview.html":{}}}],["18t09:30:00.000z",{"_index":1867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18t10:00:00.000z",{"_index":1868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19t09:00:00.000z",{"_index":1873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{},"overview.html":{}}}],["2.0.0",{"_index":1750,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":1749,"title":{},"body":{"dependencies.html":{}}}],["2.3.4",{"_index":1720,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1732,"title":{},"body":{"dependencies.html":{}}}],["2024",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["3.0.1",{"_index":1726,"title":{},"body":{"dependencies.html":{}}}],["3.1.9",{"_index":1741,"title":{},"body":{"dependencies.html":{}}}],["30000",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["33",{"_index":1787,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":1754,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":1745,"title":{},"body":{"dependencies.html":{}}}],["4.7.7",{"_index":1743,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":1731,"title":{},"body":{"dependencies.html":{}}}],["5.4.0",{"_index":1730,"title":{},"body":{"dependencies.html":{}}}],["587",{"_index":1123,"title":{},"body":{"modules/MailModule.html":{}}}],["6.4.0",{"_index":1729,"title":{},"body":{"dependencies.html":{}}}],["6.9.3",{"_index":1752,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["60s",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["665a1c9a8c31b2a89f000001",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["665a1c9a8c31b2a89f000002",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["665a1c9a8c31b2a89f000003",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["665a1c9a8c31b2a89f000004",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["665a1c9a8c31b2a89f000005",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["665a1c9a8c31b2a89f000006",{"_index":1861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["665a1d7f8c31b2a89f000001",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["665a1d7f8c31b2a89f000002",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["665a1d7f8c31b2a89f000003",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["665a1d7f8c31b2a89f000004",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["665a1d7f8c31b2a89f000005",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["665a1d7f8c31b2a89f000006",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["665a1d7f8c31b2a89f000007",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["665a1d7f8c31b2a89f000008",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["665a1d7f8c31b2a89f000009",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["665a1d7f8c31b2a89f000010",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["665a1d7f8c31b2a89f000011",{"_index":1859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["665a1d7f8c31b2a89f000012",{"_index":1863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["665a1d7f8c31b2a89f000013",{"_index":1865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["665a1d7f8c31b2a89f000014",{"_index":1869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["69",{"_index":763,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["7.0.1",{"_index":1727,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1759,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":1747,"title":{},"body":{"dependencies.html":{}}}],["8.15.0",{"_index":1748,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":1725,"title":{},"body":{"dependencies.html":{}}}],["9.2.2",{"_index":1724,"title":{},"body":{"dependencies.html":{}}}],["9.4.0",{"_index":1721,"title":{},"body":{"dependencies.html":{}}}],["9.4.3",{"_index":1719,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/Jobs.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subcriber.html":{},"injectables/SubcribersService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["_id.tostring",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["access",{"_index":1871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access_token",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["account",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["action",{"_index":840,"title":{},"body":{"injectables/FileService.html":{},"injectables/MailService.html":{}}}],["adapter",{"_index":1132,"title":{},"body":{"modules/MailModule.html":{}}}],["add",{"_index":754,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["addfiletypevalidator",{"_index":808,"title":{},"body":{"controllers/FileController.html":{}}}],["addmaxsizevalidator",{"_index":812,"title":{},"body":{"controllers/FileController.html":{}}}],["address",{"_index":499,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["adds",{"_index":841,"title":{},"body":{"injectables/FileService.html":{},"injectables/MailService.html":{}}}],["admin",{"_index":744,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["admin@gmail.com",{"_index":760,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["admin_role",{"_index":720,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adminrole",{"_index":755,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["adminrole?._id",{"_index":766,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["age",{"_index":555,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["alias",{"_index":1703,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1806,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":775,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["api",{"_index":451,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/CreatePermissionDto.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["api/v1/companies",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/companies/:id",{"_index":1857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs",{"_index":1872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs/:id",{"_index":1866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users/:id",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users/:id/role",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1jobs",{"_index":1860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibody",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["apipath",{"_index":613,"title":{},"body":{"classes/CreatePermissionDto.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":540,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["apitags",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FileController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('companies",{"_index":407,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["apitags('files",{"_index":803,"title":{},"body":{"controllers/FileController.html":{}}}],["apitags('jobs",{"_index":907,"title":{},"body":{"controllers/JobsController.html":{}}}],["apitags('mail",{"_index":1064,"title":{},"body":{"controllers/MailController.html":{}}}],["apitags('permissions",{"_index":1235,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["apitags('resumes",{"_index":1343,"title":{},"body":{"controllers/ResumesController.html":{}}}],["apitags('roles",{"_index":1415,"title":{},"body":{"controllers/RolesController.html":{}}}],["apitags('subcribers",{"_index":1486,"title":{},"body":{"controllers/SubcribersController.html":{}}}],["apitags('users",{"_index":1615,"title":{},"body":{"controllers/UsersController.html":{}}}],["app.controller",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["app_guard",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":15,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":38,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"coverage.html":{},"overview.html":{}}}],["aqp",{"_index":450,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["aqp(qs",{"_index":461,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["array",{"_index":644,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{}}}],["array'})@isstring",{"_index":675,"title":{},"body":{"classes/CreateSubcriberDto.html":{}}}],["assign",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/HealthController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"modules/MailModule.html":{}}}],["auth.controller",{"_index":251,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":951,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:13",{"_index":958,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:18",{"_index":961,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:30",{"_index":964,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/jwt",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":122,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":968,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":953,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":1035,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":26,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1802,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":39,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":1783,"title":{},"body":{"modules.html":{}}}],["await",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["b",{"_index":629,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/UpdateUserDto.html":{}}}],["b(?=(\\d{3})+(?!\\d))/g",{"_index":1093,"title":{},"body":{"controllers/MailController.html":{}}}],["badrequestexception",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('id",{"_index":945,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/SubcribersService.html":{}}}],["badrequestexception('không",{"_index":483,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('name",{"_index":1439,"title":{},"body":{"injectables/RolesService.html":{}}}],["badrequestexception('quyền",{"_index":1258,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["badrequestexception(`email",{"_index":1674,"title":{},"body":{"injectables/UsersService.html":{}}}],["basename",{"_index":1184,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["bcrypt",{"_index":1654,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcryptjs",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["body",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FileController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{},"controllers/UsersController.html":{}}}],["body('status",{"_index":1348,"title":{},"body":{"controllers/ResumesController.html":{}}}],["boolean",{"_index":518,"title":{},"body":{"classes/Company.html":{},"classes/CreateJobDto.html":{},"classes/Jobs.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"classes/Role.html":{},"classes/Subcriber.html":{},"classes/UpdateResumeDto.html":{},"classes/User.html":{}}}],["boolean(isinit",{"_index":731,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["bootstrap",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FileModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubcribersModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1781,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1778,"title":{},"body":{"modules.html":{}}}],["bugs",{"_index":1795,"title":{},"body":{"properties.html":{}}}],["build",{"_index":815,"title":{},"body":{"controllers/FileController.html":{}}}],["báo",{"_index":1660,"title":{},"body":{"injectables/UsersService.html":{}}}],["bước",{"_index":1766,"title":{},"body":{"index.html":{}}}],["bản",{"_index":419,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"controllers/UsersController.html":{}}}],["c",{"_index":552,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"classes/RegisterUserDto.html":{},"injectables/ResumesService.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["callhandler",{"_index":1282,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":954,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":959,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["catch",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["cb",{"_index":1170,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["cb(null",{"_index":1179,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ch",{"_index":753,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["check",{"_index":847,"title":{},"body":{"controllers/HealthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["cho",{"_index":726,"title":{},"body":{"injectables/DatabasesService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["chính",{"_index":1023,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["chưa",{"_index":548,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"injectables/SubcribersService.html":{},"classes/UserLoginDto.html":{}}}],["chạy",{"_index":1768,"title":{},"body":{"index.html":{}}}],["chọn",{"_index":1445,"title":{},"body":{"injectables/RolesService.html":{}}}],["class",{"_index":11,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMailDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/Jobs.html":{},"classes/Mail.html":{},"classes/MyThrottlerGuard.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"classes/Role.html":{},"classes/Subcriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubcriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMailDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/MyThrottlerGuard.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subcriber.html":{},"controllers/SubcribersController.html":{},"modules/SubcribersModule.html":{},"injectables/SubcribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubcriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":497,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMailDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/Jobs.html":{},"classes/Mail.html":{},"classes/MyThrottlerGuard.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"classes/Role.html":{},"classes/Subcriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubcriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":234,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":235,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":237,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_companiesmodule",{"_index":432,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_companiesmodule_providers",{"_index":433,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule",{"_index":698,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule_providers",{"_index":699,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_filemodule",{"_index":824,"title":{},"body":{"modules/FileModule.html":{},"overview.html":{}}}],["cluster_filemodule_providers",{"_index":825,"title":{},"body":{"modules/FileModule.html":{},"overview.html":{}}}],["cluster_jobsmodule",{"_index":916,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_exports",{"_index":917,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_providers",{"_index":918,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":1106,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_imports",{"_index":1107,"title":{},"body":{"modules/MailModule.html":{}}}],["cluster_mailmodule_providers",{"_index":1108,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule",{"_index":1243,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule_providers",{"_index":1244,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_resumesmodule",{"_index":1353,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_resumesmodule_providers",{"_index":1354,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule",{"_index":1422,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_exports",{"_index":1423,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_providers",{"_index":1424,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_subcribersmodule",{"_index":1498,"title":{},"body":{"modules/SubcribersModule.html":{},"overview.html":{}}}],["cluster_subcribersmodule_exports",{"_index":1499,"title":{},"body":{"modules/SubcribersModule.html":{},"overview.html":{}}}],["cluster_subcribersmodule_providers",{"_index":1500,"title":{},"body":{"modules/SubcribersModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1623,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1624,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1625,"title":{},"body":{"modules/UsersModule.html":{}}}],["comapnyid",{"_index":655,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{}}}],["companies",{"_index":369,"title":{},"body":{"controllers/CompaniesController.html":{},"miscellaneous/variables.html":{}}}],["companies.controller",{"_index":435,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["companies.service",{"_index":402,"title":{},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{}}}],["companies/companies.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["companies/dto/update",{"_index":1231,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{}}}],["companiescontroller",{"_index":367,"title":{"controllers/CompaniesController.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"coverage.html":{}}}],["companiesmodule",{"_index":27,"title":{"modules/CompaniesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"modules.html":{},"overview.html":{}}}],["companiesservice",{"_index":401,"title":{"injectables/CompaniesService.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"coverage.html":{},"overview.html":{}}}],["company",{"_index":383,"title":{"classes/Company.html":{},"classes/Company-1.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/Jobs.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subcriber.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["company.dto",{"_index":404,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts",{"_index":564,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["company.dto.ts:11",{"_index":566,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:14",{"_index":567,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:17",{"_index":568,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:8",{"_index":569,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.name",{"_index":438,"title":{},"body":{"modules/CompaniesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Resume.html":{}}}],["companydocument",{"_index":448,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["companyid",{"_index":624,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"injectables/ResumesService.html":{}}}],["companymodel",{"_index":442,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["companyschema",{"_index":436,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comparesync",{"_index":1655,"title":{},"body":{"injectables/UsersService.html":{}}}],["comparesync(password",{"_index":1688,"title":{},"body":{"injectables/UsersService.html":{}}}],["completed",{"_index":1224,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["configmodule",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/MailModule.html":{}}}],["configmodule.forroot",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"modules/FileModule.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{}}}],["configservice.get('email_auth_pass",{"_index":1126,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('email_auth_user",{"_index":1125,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('email_preview",{"_index":1136,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('jwt_access_token_secret",{"_index":258,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('mongo_url",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('sender_email",{"_index":1121,"title":{},"body":{"modules/MailModule.html":{}}}],["congfiservice",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["connection",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.plugin(softdeleteplugin",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["connectionfactory",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log",{"_index":259,"title":{},"body":{"modules/AuthModule.html":{},"controllers/CompaniesController.html":{},"controllers/MailController.html":{}}}],["console.log('final",{"_index":462,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["console.log('password",{"_index":1686,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(`created",{"_index":1166,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["const",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"injectables/DatabasesService.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subcriber.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/HealthController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":1037,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(companymodel",{"_index":440,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["constructor(configservice",{"_index":1010,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(jobmodel",{"_index":925,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(permissionmodel",{"_index":1249,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["constructor(private",{"_index":409,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FileController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":956,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["constructor(resumemodel",{"_index":1359,"title":{},"body":{"injectables/ResumesService.html":{}}}],["constructor(rolemodel",{"_index":1430,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(subcribermodel",{"_index":1506,"title":{},"body":{"injectables/SubcribersService.html":{}}}],["constructor(usermodel",{"_index":711,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MailService.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["context",{"_index":962,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.getclass",{"_index":975,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":974,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":977,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getrequest().reqid",{"_index":1294,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.switchtohttp().getresponse().statuscode",{"_index":1292,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FileController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FileController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('companies",{"_index":408,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["controller('databases",{"_index":697,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["controller('files",{"_index":804,"title":{},"body":{"controllers/FileController.html":{}}}],["controller('health",{"_index":855,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('jobs",{"_index":908,"title":{},"body":{"controllers/JobsController.html":{}}}],["controller('mail",{"_index":1065,"title":{},"body":{"controllers/MailController.html":{}}}],["controller('permissions",{"_index":1236,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["controller('resumes",{"_index":1344,"title":{},"body":{"controllers/ResumesController.html":{}}}],["controller('roles",{"_index":1416,"title":{},"body":{"controllers/RolesController.html":{}}}],["controller('subcribers",{"_index":1487,"title":{},"body":{"controllers/SubcribersController.html":{}}}],["controller('users",{"_index":1616,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"controllers/SubcribersController.html":{},"modules/SubcribersModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["count",{"_index":741,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countpermission",{"_index":734,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countrole",{"_index":736,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countuser",{"_index":732,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["coverage",{"_index":1689,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creatat",{"_index":1262,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["create",{"_index":370,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FileService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubcriberDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":411,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{},"controllers/UsersController.html":{}}}],["create(createcompanydto",{"_index":374,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{}}}],["create(createdto",{"_index":1603,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(createfiledto",{"_index":834,"title":{},"body":{"injectables/FileService.html":{}}}],["create(createjobdto",{"_index":892,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["create(createmaildto",{"_index":1139,"title":{},"body":{"injectables/MailService.html":{}}}],["create(createpermissiondto",{"_index":1218,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{}}}],["create(createresumecvdto",{"_index":1362,"title":{},"body":{"injectables/ResumesService.html":{}}}],["create(createresumedto",{"_index":1331,"title":{},"body":{"controllers/ResumesController.html":{}}}],["create(createroledto",{"_index":1406,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["create(createsubcriberdto",{"_index":1468,"title":{},"body":{"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{}}}],["create(creatuserdto",{"_index":1638,"title":{},"body":{"injectables/UsersService.html":{}}}],["createat",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{}}}],["createby",{"_index":456,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subcriber.html":{},"injectables/SubcribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["createcompanydto",{"_index":375,"title":{"classes/CreateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["createdat",{"_index":500,"title":{},"body":{"classes/Company.html":{},"classes/Jobs.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subcriber.html":{},"injectables/SubcribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["createdby",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdto",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["createfiledto",{"_index":570,"title":{"classes/CreateFileDto.html":{}},"body":{"classes/CreateFileDto.html":{},"injectables/FileService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["createjobdto",{"_index":573,"title":{"classes/CreateJobDto.html":{}},"body":{"classes/CreateJobDto.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["createmaildto",{"_index":607,"title":{"classes/CreateMailDto.html":{}},"body":{"classes/CreateMailDto.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"classes/UpdateMailDto.html":{},"coverage.html":{}}}],["createmulteroptions",{"_index":1146,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createparamdecorator",{"_index":1878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpermissiondto",{"_index":610,"title":{"classes/CreatePermissionDto.html":{}},"body":{"classes/CreatePermissionDto.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["createrefreshtoken",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["createresume",{"_index":1371,"title":{},"body":{"injectables/ResumesService.html":{}}}],["createresume.createdat",{"_index":1375,"title":{},"body":{"injectables/ResumesService.html":{}}}],["createresume.id",{"_index":1374,"title":{},"body":{"injectables/ResumesService.html":{}}}],["createresumecvdto",{"_index":1364,"title":{},"body":{"injectables/ResumesService.html":{}}}],["createresumedto",{"_index":621,"title":{"classes/CreateResumeDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"coverage.html":{}}}],["createroledto",{"_index":656,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["createsubcriberdto",{"_index":667,"title":{"classes/CreateSubcriberDto.html":{}},"body":{"classes/CreateSubcriberDto.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"classes/UpdateSubcriberDto.html":{},"coverage.html":{}}}],["createusercvdto",{"_index":653,"title":{"classes/CreateUserCvDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"coverage.html":{}}}],["createuserdto",{"_index":546,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["creatuserdto",{"_index":1640,"title":{},"body":{"injectables/UsersService.html":{}}}],["creatuserdto.email",{"_index":1668,"title":{},"body":{"injectables/UsersService.html":{}}}],["cron",{"_index":1062,"title":{},"body":{"controllers/MailController.html":{}}}],["cronexpression",{"_index":1063,"title":{},"body":{"controllers/MailController.html":{}}}],["ctx",{"_index":1879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":386,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["cài",{"_index":1770,"title":{},"body":{"index.html":{}}}],["các",{"_index":1078,"title":{},"body":{"controllers/MailController.html":{},"index.html":{}}}],["cái",{"_index":1574,"title":{},"body":{"classes/UpdateUserDto.html":{},"modules/UsersModule.html":{}}}],["câu",{"_index":1771,"title":{},"body":{"index.html":{}}}],["công",{"_index":486,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["cấp",{"_index":992,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["cần",{"_index":642,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateUserDto.html":{},"index.html":{}}}],["cập",{"_index":1007,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["của",{"_index":994,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["d",{"_index":984,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{},"index.html":{}}}],["danh",{"_index":990,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"modules/UsersModule.html":{}}}],["dashboard",{"_index":1870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":777,"title":{},"body":{"injectables/DatabasesService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["databases",{"_index":694,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["databases.controller",{"_index":702,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["databases.service",{"_index":696,"title":{},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{}}}],["databases/databases.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["databasescontroller",{"_index":692,"title":{"controllers/DatabasesController.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"coverage.html":{}}}],["databasesmodule",{"_index":28,"title":{"modules/DatabasesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabasesModule.html":{},"modules.html":{},"overview.html":{}}}],["databasesservice",{"_index":695,"title":{"injectables/DatabasesService.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":512,"title":{},"body":{"classes/Company.html":{},"classes/CreateJobDto.html":{},"classes/Jobs.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subcriber.html":{},"injectables/SubcribersService.html":{},"classes/UpdateResumeDto.html":{},"classes/User.html":{}}}],["date.now",{"_index":1187,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["declarations",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FileModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubcribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decode",{"_index":1029,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["decorator/customize",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SubcribersController.html":{}}}],["decorators",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FileController.html":{},"controllers/HealthController.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"controllers/ResumesController.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"classes/Subcriber.html":{},"controllers/SubcribersController.html":{},"classes/UpdateResumeDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defaultpagesize",{"_index":466,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["defaults",{"_index":1127,"title":{},"body":{"modules/MailModule.html":{}}}],["defined",{"_index":116,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"controllers/HealthController.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/MyThrottlerGuard.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subcriber.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["defualtpagesize",{"_index":940,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FileController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":392,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FileController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{},"controllers/UsersController.html":{}}}],["delete(':id')@responsemessage('delete",{"_index":1226,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["deleteat",{"_index":501,"title":{},"body":{"classes/Company.html":{},"classes/Jobs.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"classes/Role.html":{},"classes/Subcriber.html":{},"classes/UpdateResumeDto.html":{},"classes/User.html":{}}}],["deleteby",{"_index":491,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"classes/Role.html":{},"classes/Subcriber.html":{},"classes/UpdateResumeDto.html":{},"classes/User.html":{}}}],["deletedat",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletedby",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deleterole",{"_index":1451,"title":{},"body":{"injectables/RolesService.html":{}}}],["deletesubcriber",{"_index":1529,"title":{},"body":{"injectables/SubcribersService.html":{}}}],["dependencies",{"_index":17,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FileModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubcribersModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":502,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/Jobs.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/UserLoginDto.html":{},"properties.html":{}}}],["destination",{"_index":1169,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dev",{"_index":1775,"title":{},"body":{"index.html":{}}}],["devops",{"_index":857,"title":{},"body":{"controllers/HealthController.html":{}}}],["dir",{"_index":1129,"title":{},"body":{"modules/MailModule.html":{}}}],["directory",{"_index":1167,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["disable",{"_index":1570,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["diskstorage",{"_index":1157,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["document",{"_index":1079,"title":{},"body":{"controllers/MailController.html":{}}}],["documentation",{"_index":1690,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":1738,"title":{},"body":{"dependencies.html":{}}}],["dto/create",{"_index":403,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/FileService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":405,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dung",{"_index":1025,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["dân",{"_index":1804,"title":{},"body":{"properties.html":{}}}],["dùng",{"_index":748,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{}}}],["dạng",{"_index":551,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["dạng'})@isstring({each",{"_index":598,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["dụng",{"_index":750,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["e",{"_index":493,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["each",{"_index":606,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/ResumeHistoryDto.html":{},"classes/UpdateResumeDto.html":{}}}],["edit",{"_index":1856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ege",{"_index":556,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["ejs",{"_index":1740,"title":{},"body":{"dependencies.html":{}}}],["email",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subcriber.html":{},"injectables/SubcribersService.html":{},"classes/UpdateResumeDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["email')@cron",{"_index":1050,"title":{},"body":{"controllers/MailController.html":{}}}],["email'})@isnotempty({message",{"_index":685,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["enddate",{"_index":576,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/Jobs.html":{}}}],["ensureexists",{"_index":1147,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists(targetdirectory",{"_index":1151,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["env",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":965,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["error",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["errorhttpstatuscode",{"_index":816,"title":{},"body":{"controllers/FileController.html":{}}}],["eslint",{"_index":1569,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["example",{"_index":560,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["exclude/include",{"_index":1678,"title":{},"body":{"injectables/UsersService.html":{}}}],["exec",{"_index":478,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["executioncontext",{"_index":960,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["existing",{"_index":1256,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["exit",{"_index":1656,"title":{},"body":{"injectables/UsersService.html":{}}}],["exitname",{"_index":1438,"title":{},"body":{"injectables/RolesService.html":{}}}],["exituser",{"_index":1667,"title":{},"body":{"injectables/UsersService.html":{}}}],["exituser).email",{"_index":1669,"title":{},"body":{"injectables/UsersService.html":{}}}],["expiresin",{"_index":262,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMailDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/MyThrottlerGuard.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subcriber.html":{},"controllers/SubcribersController.html":{},"modules/SubcribersModule.html":{},"injectables/SubcribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubcriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FileModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubcribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":789,"title":{},"body":{"controllers/FileController.html":{}}}],["extends",{"_index":952,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MyThrottlerGuard.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubcriberDto.html":{},"classes/UpdateUserDto.html":{}}}],["extname",{"_index":1182,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extractjwt",{"_index":1014,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1019,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":1021,"title":{},"body":{"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["field",{"_index":1081,"title":{},"body":{"controllers/MailController.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMailDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/MyThrottlerGuard.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subcriber.html":{},"controllers/SubcribersController.html":{},"modules/SubcribersModule.html":{},"injectables/SubcribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubcriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["file')@useinterceptors(undefined",{"_index":792,"title":{},"body":{"controllers/FileController.html":{}}}],["file.controller",{"_index":827,"title":{},"body":{"modules/FileModule.html":{}}}],["file.dto",{"_index":798,"title":{},"body":{"controllers/FileController.html":{},"injectables/FileService.html":{},"classes/UpdateFileDto.html":{}}}],["file.dto.ts",{"_index":572,"title":{},"body":{"classes/CreateFileDto.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["file.filename",{"_index":818,"title":{},"body":{"controllers/FileController.html":{}}}],["file.service",{"_index":800,"title":{},"body":{"controllers/FileController.html":{},"modules/FileModule.html":{}}}],["file/file.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["filecontroller",{"_index":779,"title":{"controllers/FileController.html":{}},"body":{"controllers/FileController.html":{},"modules/FileModule.html":{},"coverage.html":{}}}],["fileinterceptor",{"_index":801,"title":{},"body":{"controllers/FileController.html":{}}}],["filemodule",{"_index":29,"title":{"modules/FileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FileModule.html":{},"modules.html":{},"overview.html":{}}}],["filename",{"_index":1181,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["files",{"_index":781,"title":{},"body":{"controllers/FileController.html":{}}}],["fileservice",{"_index":799,"title":{"injectables/FileService.html":{}},"body":{"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"coverage.html":{},"overview.html":{}}}],["filetype",{"_index":809,"title":{},"body":{"controllers/FileController.html":{}}}],["filter",{"_index":458,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["filter.page",{"_index":938,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["filter.pagesize",{"_index":939,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["finalname",{"_index":1188,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["find",{"_index":1383,"title":{},"body":{"injectables/ResumesService.html":{}}}],["find(filter",{"_index":473,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["findall",{"_index":371,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(current",{"_index":377,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":372,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":426,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FileController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":387,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findonebyusername",{"_index":1634,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyusername(username",{"_index":1622,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findsubcriber",{"_index":1522,"title":{},"body":{"injectables/SubcribersService.html":{}}}],["finduserbytoken",{"_index":1635,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbytoken(refreshtoken",{"_index":1644,"title":{},"body":{"injectables/UsersService.html":{}}}],["folder",{"_index":1174,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["folder_type",{"_index":1172,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["forbiddenexception",{"_index":966,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["forbiddenexception('bạn",{"_index":1005,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["found",{"_index":1679,"title":{},"body":{"injectables/UsersService.html":{}}}],["founduser",{"_index":1448,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["founduser.email",{"_index":1684,"title":{},"body":{"injectables/UsersService.html":{}}}],["founduser.name",{"_index":1450,"title":{},"body":{"injectables/RolesService.html":{}}}],["fs",{"_index":1159,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["fs.existssync(fullpath",{"_index":1163,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["fs.mkdirsync(fullpath",{"_index":1164,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["full",{"_index":745,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["fullpath",{"_index":1161,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["function",{"_index":1709,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1762,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":1575,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["gender",{"_index":557,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["gensaltsync",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["gensaltsync(10",{"_index":1664,"title":{},"body":{"injectables/UsersService.html":{}}}],["get('/account",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(':id",{"_index":425,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FileController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@responsemessage('fetch",{"_index":1222,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["get('logout",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('refresh",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('send",{"_index":1068,"title":{},"body":{"controllers/MailController.html":{}}}],["get('send')@public()@responsemessage('send",{"_index":1048,"title":{},"body":{"controllers/MailController.html":{}}}],["get()@public()@healthcheck",{"_index":848,"title":{},"body":{"controllers/HealthController.html":{}}}],["get()@responsemessage('fetch",{"_index":1220,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{}}}],["getcvbyuser",{"_index":1330,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["getcvbyuser(@user",{"_index":1351,"title":{},"body":{"controllers/ResumesController.html":{}}}],["getcvbyuser(user",{"_index":1335,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["gethello",{"_index":115,"title":{},"body":{"injectables/AppService.html":{}}}],["getrootpath",{"_index":1148,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["getskills",{"_index":1505,"title":{},"body":{"injectables/SubcribersService.html":{}}}],["getskills(user",{"_index":1511,"title":{},"body":{"injectables/SubcribersService.html":{}}}],["getting",{"_index":1764,"title":{"index.html":{}},"body":{}}],["getuserskills",{"_index":1467,"title":{},"body":{"controllers/SubcribersController.html":{}}}],["getuserskills(@user",{"_index":1496,"title":{},"body":{"controllers/SubcribersController.html":{}}}],["getuserskills(user",{"_index":1472,"title":{},"body":{"controllers/SubcribersController.html":{}}}],["ghi",{"_index":1527,"title":{},"body":{"injectables/SubcribersService.html":{}}}],["gi",{"_index":1083,"title":{},"body":{"controllers/MailController.html":{}}}],["git+https://github.com/huycoconut/job",{"_index":1800,"title":{},"body":{"properties.html":{}}}],["giải",{"_index":1027,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["giống",{"_index":1629,"title":{},"body":{"modules/UsersModule.html":{}}}],["global",{"_index":256,"title":{},"body":{"modules/AuthModule.html":{}}}],["grafana",{"_index":860,"title":{},"body":{"controllers/HealthController.html":{}}}],["graph",{"_index":1782,"title":{},"body":{"modules.html":{}}}],["gán",{"_index":1030,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["gần",{"_index":1384,"title":{},"body":{"injectables/ResumesService.html":{}}}],["h",{"_index":751,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["handlebars",{"_index":1742,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":1111,"title":{},"body":{"modules/MailModule.html":{}}}],["handlegetaccount",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlegetaccount(@user",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlegetaccount(user",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken(req",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerequest",{"_index":955,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":963,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["hash",{"_index":1647,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword",{"_index":1632,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashsync",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["hashsync(password",{"_index":1665,"title":{},"body":{"injectables/UsersService.html":{}}}],["hbs",{"_index":1744,"title":{},"body":{"dependencies.html":{}}}],["header",{"_index":1173,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["health",{"_index":846,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":864,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":852,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckresult",{"_index":853,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":850,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":844,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":30,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hello",{"_index":120,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":1746,"title":{},"body":{"dependencies.html":{}}}],["history",{"_index":1297,"title":{},"body":{"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/UpdateResumeDto.html":{}}}],["hiện",{"_index":1630,"title":{},"body":{"modules/UsersModule.html":{}}}],["hoang",{"_index":771,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["homepage",{"_index":1792,"title":{},"body":{"properties.html":{}}}],["host",{"_index":1120,"title":{},"body":{"modules/MailModule.html":{}}}],["hoặc",{"_index":981,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{}}}],["httponly",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://github.com/huycoconut/job",{"_index":1793,"title":{},"body":{"properties.html":{}}}],["https://hoidanit.com.vn",{"_index":1790,"title":{},"body":{"properties.html":{}}}],["httpstatus",{"_index":794,"title":{},"body":{"controllers/FileController.html":{}}}],["httpstatus.unprocessable_entity",{"_index":817,"title":{},"body":{"controllers/FileController.html":{}}}],["huy",{"_index":772,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["huyvu@gmail.com",{"_index":773,"title":{},"body":{"injectables/DatabasesService.html":{},"miscellaneous/variables.html":{}}}],["hydrateddocument",{"_index":531,"title":{},"body":{"classes/Company.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Jobs.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subcriber.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["hãy",{"_index":1198,"title":{},"body":{"classes/MyThrottlerGuard.html":{},"injectables/SubcribersService.html":{}}}],["hỏi",{"_index":1803,"title":{},"body":{"properties.html":{}}}],["hợp",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/ResumesService.html":{},"injectables/SubcribersService.html":{}}}],["i'm",{"_index":759,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["id",{"_index":390,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["id'})@isarray({message",{"_index":665,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["id_",{"_index":1681,"title":{},"body":{"injectables/UsersService.html":{}}}],["identifier",{"_index":1691,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":1020,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image\\/jpeg|image\\/jpg|image\\/png|image\\/gif|text\\/plain|application\\/pdf|application\\/msword|application\\/vnd\\.openxmlformats",{"_index":810,"title":{},"body":{"controllers/FileController.html":{}}}],["implements",{"_index":723,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/MyThrottlerGuard.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subcriber.html":{},"controllers/SubcribersController.html":{},"modules/SubcribersModule.html":{},"injectables/SubcribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubcriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FileModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubcribersModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":113,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"controllers/HealthController.html":{},"interfaces/IUser.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/MyThrottlerGuard.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subcriber.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMailDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/MyThrottlerGuard.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subcriber.html":{},"controllers/SubcribersController.html":{},"modules/SubcribersModule.html":{},"injectables/SubcribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubcriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["infomation",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["infomation')@get('/account",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["init",{"_index":776,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["init_permission",{"_index":719,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["injectable",{"_index":110,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FileService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FileService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":111,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FileService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(company.name",{"_index":454,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["injectmodel(jobs.name",{"_index":934,"title":{},"body":{"injectables/JobsService.html":{},"controllers/MailController.html":{}}}],["injectmodel(permission.name",{"_index":727,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["injectmodel(resume.name",{"_index":1370,"title":{},"body":{"injectables/ResumesService.html":{}}}],["injectmodel(role.name",{"_index":728,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(subcriber.name",{"_index":1066,"title":{},"body":{"controllers/MailController.html":{},"injectables/SubcribersService.html":{}}}],["injectmodel(user.name",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/MailService.html":{},"injectables/UsersService.html":{}}}],["insert",{"_index":1528,"title":{},"body":{"injectables/SubcribersService.html":{}}}],["intercept",{"_index":1288,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":1532,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["interface",{"_index":866,"title":{"interfaces/IUser.html":{},"interfaces/Response.html":{}},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":867,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"overview.html":{}}}],["is_public_key",{"_index":969,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["is_public_permission",{"_index":970,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isactive",{"_index":577,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"classes/Jobs.html":{},"classes/Role.html":{},"injectables/RolesService.html":{}}}],["isarray",{"_index":602,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/ResumeHistoryDto.html":{},"classes/UpdateResumeDto.html":{}}}],["isarray({message",{"_index":596,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["isboolean",{"_index":603,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/ResumeHistoryDto.html":{},"classes/UpdateResumeDto.html":{}}}],["isboolean()@isoptional",{"_index":588,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["isdate",{"_index":526,"title":{},"body":{"classes/Company.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Jobs.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"classes/Role.html":{},"classes/Subcriber.html":{},"classes/UpdateResumeDto.html":{},"classes/User.html":{}}}],["isdate()@type(undefined",{"_index":1321,"title":{},"body":{"classes/ResumeHistoryDto.html":{}}}],["isdate()@type(undefined)@isoptional",{"_index":586,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["isdelete",{"_index":503,"title":{},"body":{"classes/Company.html":{},"classes/Jobs.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"classes/Role.html":{},"classes/Subcriber.html":{},"classes/UpdateResumeDto.html":{},"classes/User.html":{}}}],["isdeleted",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isemail",{"_index":527,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/Jobs.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"classes/Role.html":{},"classes/Subcriber.html":{},"classes/UpdateResumeDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["isemail()@isnotempty({message",{"_index":631,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["isexist",{"_index":999,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["isglobal",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["isinit",{"_index":729,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["ismongoid",{"_index":542,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnotempty",{"_index":537,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnotempty({message",{"_index":565,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["isnotemptyobject",{"_index":543,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnumber",{"_index":528,"title":{},"body":{"classes/Company.html":{},"classes/Jobs.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subcriber.html":{},"classes/User.html":{}}}],["isobject",{"_index":544,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isobject()@isnotemptyobject()@validatenested()@type(undefined",{"_index":682,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isoptional",{"_index":604,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/ResumeHistoryDto.html":{},"classes/UpdateResumeDto.html":{}}}],["isoptional()@isarray()@validatenested({each",{"_index":1552,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["isoptional()@isboolean",{"_index":1554,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["isoptional()@isdate()@type(undefined",{"_index":1546,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["isoptional()@isemail",{"_index":1550,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["isoptional()@isstring",{"_index":1556,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["isoptional()@validatenested()@type(undefined",{"_index":1548,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["ispermission",{"_index":1875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ispublic",{"_index":972,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["iss",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["isskippermission",{"_index":978,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["isstring",{"_index":529,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/Jobs.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"classes/Role.html":{},"classes/Subcriber.html":{},"classes/UpdateResumeDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["isstring()@isnotempty",{"_index":592,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["isstring()@isnotempty()@apiproperty({example",{"_index":1598,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["isstring()@isnotempty({message",{"_index":615,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["isstring()@isoptional",{"_index":584,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["isvalid",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["isvalidobjectid",{"_index":933,"title":{},"body":{"injectables/JobsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["isvalidobjectid(id",{"_index":944,"title":{},"body":{"injectables/JobsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["isvalidpassword",{"_index":1636,"title":{},"body":{"injectables/UsersService.html":{}}}],["isvalidpassword(password",{"_index":1646,"title":{},"body":{"injectables/UsersService.html":{}}}],["item.company?.name",{"_index":1091,"title":{},"body":{"controllers/MailController.html":{}}}],["item.name",{"_index":1090,"title":{},"body":{"controllers/MailController.html":{}}}],["item.skills",{"_index":1094,"title":{},"body":{"controllers/MailController.html":{}}}],["iuser",{"_index":132,"title":{"interfaces/IUser.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["job",{"_index":894,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["job._id",{"_index":936,"title":{},"body":{"injectables/JobsService.html":{}}}],["job.createdat",{"_index":937,"title":{},"body":{"injectables/JobsService.html":{}}}],["job.dto",{"_index":906,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{}}}],["job.dto.ts",{"_index":575,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["job.dto.ts:16",{"_index":593,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:21",{"_index":600,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:25",{"_index":594,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:29",{"_index":585,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:33",{"_index":590,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:37",{"_index":591,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:41",{"_index":595,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:46",{"_index":601,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:51",{"_index":587,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:55",{"_index":589,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["jobid",{"_index":625,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["jobmodel",{"_index":927,"title":{},"body":{"injectables/JobsService.html":{},"controllers/MailController.html":{}}}],["jobs",{"_index":637,"title":{"classes/Jobs.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"classes/Subcriber.html":{},"controllers/SubcribersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jobs.controller",{"_index":921,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.name",{"_index":923,"title":{},"body":{"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Resume.html":{}}}],["jobs.service",{"_index":905,"title":{},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobs/jobs.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["jobscontroller",{"_index":890,"title":{"controllers/JobsController.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"coverage.html":{}}}],["jobsdocument",{"_index":887,"title":{},"body":{"classes/Jobs.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["jobsmodule",{"_index":31,"title":{"modules/JobsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["jobsschema",{"_index":888,"title":{},"body":{"classes/Jobs.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jobsservice",{"_index":904,"title":{"injectables/JobsService.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"coverage.html":{},"overview.html":{}}}],["jobupdate",{"_index":947,"title":{},"body":{"injectables/JobsService.html":{}}}],["jobwithmathchingskills",{"_index":1086,"title":{},"body":{"controllers/MailController.html":{}}}],["jobwithmathchingskills.map((item",{"_index":1089,"title":{},"body":{"controllers/MailController.html":{}}}],["jobwithmathchingskills?.length",{"_index":1088,"title":{},"body":{"controllers/MailController.html":{}}}],["join",{"_index":1113,"title":{},"body":{"modules/MailModule.html":{},"injectables/PermissionsService.html":{}}}],["join(__dirname",{"_index":1130,"title":{},"body":{"modules/MailModule.html":{}}}],["jwt",{"_index":1016,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt_refresh_expire",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtauthguard",{"_index":57,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":1018,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":248,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":255,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":238,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["keywords",{"_index":1791,"title":{},"body":{"properties.html":{}}}],["kh",{"_index":1576,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["khai",{"_index":1661,"title":{},"body":{"injectables/UsersService.html":{}}}],["khi",{"_index":641,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"injectables/JwtStrategy.html":{}}}],["khác",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["không",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["khớp",{"_index":997,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{}}}],["kiểu",{"_index":725,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["l",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/ResumesService.html":{},"injectables/SubcribersService.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["legend",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FileModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubcribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["level",{"_index":578,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/Jobs.html":{}}}],["license",{"_index":1797,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["limit(defaultpagesize",{"_index":475,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["limit(defualtpagesize",{"_index":943,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["line",{"_index":1571,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["list",{"_index":382,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{}}}],["literal",{"_index":508,"title":{},"body":{"classes/Company.html":{},"interfaces/IUser.html":{},"classes/Jobs.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"classes/Role.html":{},"classes/Subcriber.html":{},"classes/UpdateResumeDto.html":{},"classes/User.html":{}}}],["local",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":175,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":239,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["location",{"_index":579,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/Jobs.html":{}}}],["logger",{"_index":701,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"modules/MailModule.html":{}}}],["logger(databasesservice.name",{"_index":716,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["login",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login')@post('login')@apibody({type",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(@req",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["logo",{"_index":504,"title":{},"body":{"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/Jobs.html":{}}}],["logout",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logout(response",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["lpt",{"_index":1777,"title":{},"body":{"index.html":{}}}],["lpt#readme",{"_index":1794,"title":{},"body":{"properties.html":{}}}],["lpt.git",{"_index":1801,"title":{},"body":{"properties.html":{}}}],["lpt/issues",{"_index":1796,"title":{},"body":{"properties.html":{}}}],["làm",{"_index":1767,"title":{},"body":{"index.html":{}}}],["lòng",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["lại",{"_index":1521,"title":{},"body":{"injectables/SubcribersService.html":{}}}],["lấy",{"_index":1171,"title":{},"body":{"injectables/MulterConfigService.html":{},"injectables/ResumesService.html":{}}}],["lệnh",{"_index":1772,"title":{},"body":{"index.html":{}}}],["lỗi",{"_index":496,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{}}}],["m",{"_index":1028,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/MailController.html":{}}}],["mail",{"_index":1043,"title":{"classes/Mail.html":{}},"body":{"classes/Mail.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"coverage.html":{}}}],["mail.controller",{"_index":1110,"title":{},"body":{"modules/MailModule.html":{}}}],["mail.dto",{"_index":1055,"title":{},"body":{"controllers/MailController.html":{},"injectables/MailService.html":{},"classes/UpdateMailDto.html":{}}}],["mail.dto.ts",{"_index":609,"title":{},"body":{"classes/CreateMailDto.html":{},"classes/UpdateMailDto.html":{},"coverage.html":{}}}],["mail.service",{"_index":1058,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["mailcontroller",{"_index":1045,"title":{"controllers/MailController.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"coverage.html":{}}}],["mailermodule",{"_index":1101,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":1118,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":1052,"title":{},"body":{"controllers/MailController.html":{},"injectables/MailService.html":{}}}],["mailmodule",{"_index":32,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":1057,"title":{"injectables/MailService.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["male",{"_index":764,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["map",{"_index":1284,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["map((data",{"_index":1291,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["matching",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMailDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/MyThrottlerGuard.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subcriber.html":{},"controllers/SubcribersController.html":{},"modules/SubcribersModule.html":{},"injectables/SubcribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubcriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(totalitems",{"_index":470,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["maxage",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["maxsize",{"_index":813,"title":{},"body":{"controllers/FileController.html":{}}}],["message",{"_index":547,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UserLoginDto.html":{},"miscellaneous/variables.html":{}}}],["meta",{"_index":479,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["metadata",{"_index":1757,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":614,"title":{},"body":{"classes/CreatePermissionDto.html":{},"injectables/JwtAuthGuard.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":114,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/MyThrottlerGuard.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":1761,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":724,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":14,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FileModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubcribersModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"modules/DatabasesModule.html":{},"modules/FileModule.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SubcribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":16,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FileModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubcribersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":1054,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":1112,"title":{},"body":{"modules/MailModule.html":{}}}],["mogoid",{"_index":559,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["mongo",{"_index":654,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{}}}],["mongodb",{"_index":463,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["mongoose",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/Jobs.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subcriber.html":{},"injectables/SubcribersService.html":{},"classes/UpdateResumeDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.isvalidobjectid(id",{"_index":1267,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["mongoose.schema.types.array",{"_index":1314,"title":{},"body":{"classes/Resume.html":{},"classes/Role.html":{}}}],["mongoose.schema.types.objectid",{"_index":534,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/Jobs.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subcriber.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["mongoose.types.objectid",{"_index":1325,"title":{},"body":{"classes/ResumeHistoryDto.html":{},"classes/UpdateResumeDto.html":{}}}],["mongoose.types.objectid.isvalid(id",{"_index":1677,"title":{},"body":{"injectables/UsersService.html":{}}}],["mongoosehealth",{"_index":856,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosehealthindicator",{"_index":851,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosemodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubcribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubcribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["ms",{"_index":250,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["ms(configservice.get('jwt_access_expire",{"_index":263,"title":{},"body":{"modules/AuthModule.html":{}}}],["ms(refreshexpire",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["ms(this.congfiservice.get('jwt_refresh_expire",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["ms.stringvalue",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["multer",{"_index":1158,"title":{},"body":{"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["multer.config",{"_index":830,"title":{},"body":{"modules/FileModule.html":{}}}],["multerconfigservice",{"_index":829,"title":{"injectables/MulterConfigService.html":{}},"body":{"modules/FileModule.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["multermodule",{"_index":828,"title":{},"body":{"modules/FileModule.html":{}}}],["multermodule.registerasync",{"_index":831,"title":{},"body":{"modules/FileModule.html":{}}}],["multermoduleoptions",{"_index":1150,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multeroptionsfactory",{"_index":1156,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["muốn",{"_index":650,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"injectables/RolesService.html":{}}}],["mythrottlerguard",{"_index":185,"title":{"classes/MyThrottlerGuard.html":{}},"body":{"controllers/AuthController.html":{},"classes/MyThrottlerGuard.html":{},"coverage.html":{}}}],["mảng",{"_index":1085,"title":{},"body":{"controllers/MailController.html":{}}}],["một",{"_index":418,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["n",{"_index":1769,"title":{},"body":{"index.html":{}}}],["name",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"interfaces/IUser.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subcriber.html":{},"controllers/SubcribersController.html":{},"modules/SubcribersModule.html":{},"injectables/SubcribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":1100,"title":{},"body":{"controllers/MailController.html":{}}}],["nestinterceptor",{"_index":1281,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs",{"_index":1053,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"controllers/SubcribersController.html":{},"modules/SubcribersModule.html":{},"injectables/SubcribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"modules/FileModule.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1537,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubcriberDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Jobs.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subcriber.html":{},"modules/SubcribersModule.html":{},"injectables/SubcribersService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":246,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":802,"title":{},"body":{"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"controllers/MailController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"controllers/FileController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":854,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/MyThrottlerGuard.html":{},"dependencies.html":{}}}],["new",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/MyThrottlerGuard.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["newrole",{"_index":1440,"title":{},"body":{"injectables/RolesService.html":{}}}],["newrole.id",{"_index":1442,"title":{},"body":{"injectables/RolesService.html":{}}}],["newsubcriber",{"_index":1516,"title":{},"body":{"injectables/SubcribersService.html":{}}}],["newsubcriber._id",{"_index":1518,"title":{},"body":{"injectables/SubcribersService.html":{}}}],["newuser",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["newuser.createdat",{"_index":1672,"title":{},"body":{"injectables/UsersService.html":{}}}],["newuser.id",{"_index":1671,"title":{},"body":{"injectables/UsersService.html":{}}}],["newuser?._id",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser?.createdat",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["next",{"_index":1289,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{}}}],["next.handle().pipe",{"_index":1290,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["ng",{"_index":549,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["nghĩa",{"_index":1573,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["người",{"_index":747,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["nh",{"_index":550,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserDto.html":{},"classes/MyThrottlerGuard.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"modules/UsersModule.html":{}}}],["nhanh",{"_index":1197,"title":{},"body":{"classes/MyThrottlerGuard.html":{}}}],["nhất",{"_index":1082,"title":{},"body":{"controllers/MailController.html":{},"injectables/ResumesService.html":{}}}],["nhập",{"_index":1687,"title":{},"body":{"injectables/UsersService.html":{}}}],["nodemailer",{"_index":1751,"title":{},"body":{"dependencies.html":{}}}],["nomal",{"_index":767,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["noreply@nestjs.com",{"_index":1097,"title":{},"body":{"controllers/MailController.html":{}}}],["normal",{"_index":1874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":1773,"title":{},"body":{"index.html":{}}}],["null",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":378,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/FileService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["này",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["ném",{"_index":998,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["nếu",{"_index":648,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["nội",{"_index":1024,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["object",{"_index":510,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"classes/Role.html":{},"classes/Subcriber.html":{},"classes/UpdateResumeDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["objuser",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["observable",{"_index":1283,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["officedocument\\.wordprocessingml\\.document)$/i",{"_index":811,"title":{},"body":{"controllers/FileController.html":{}}}],["offset",{"_index":464,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["ok",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["omittype",{"_index":1568,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["omittype(createuserdto",{"_index":1566,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["one",{"_index":1223,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["onmoduleinit",{"_index":710,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["optional",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateResumeDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":1133,"title":{},"body":{"modules/MailModule.html":{}}}],["out",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FileModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubcribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":1784,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1001,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["p.apipath.replace",{"_index":1003,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["p.method",{"_index":1002,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["package",{"_index":1717,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pages",{"_index":480,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["pagesize",{"_index":379,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["paginate",{"_index":384,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{}}}],["param",{"_index":399,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FileController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":428,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["parameters",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":452,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["parsefilepipebuilder",{"_index":795,"title":{},"body":{"controllers/FileController.html":{}}}],["parser",{"_index":1735,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":1536,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubcriberDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createcompanydto",{"_index":1535,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["partialtype(createfiledto",{"_index":1539,"title":{},"body":{"classes/UpdateFileDto.html":{}}}],["partialtype(createjobdto",{"_index":1541,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["partialtype(createmaildto",{"_index":1543,"title":{},"body":{"classes/UpdateMailDto.html":{}}}],["partialtype(createpermissiondto",{"_index":1545,"title":{},"body":{"classes/UpdatePermissionDto.html":{}}}],["partialtype(createroledto",{"_index":1561,"title":{},"body":{"classes/UpdateRoleDto.html":{}}}],["partialtype(createsubcriberdto",{"_index":1563,"title":{},"body":{"classes/UpdateSubcriberDto.html":{}}}],["pass",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"modules/MailModule.html":{}}}],["passport",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passport/jwt.strategy",{"_index":249,"title":{},"body":{"modules/AuthModule.html":{}}}],["passport/local.strategy",{"_index":247,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule",{"_index":245,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1017,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1009,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passthrough",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":554,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["patch",{"_index":398,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FileController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["patch(':id",{"_index":396,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FileController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["patch(':id')@responsemessage('update",{"_index":1229,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["patch(':id')@useguards()@responsemessage('update",{"_index":902,"title":{},"body":{"controllers/JobsController.html":{}}}],["path",{"_index":616,"title":{},"body":{"classes/CreatePermissionDto.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["path.basename(file.originalname",{"_index":1185,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["path.extname(file.originalname",{"_index":1183,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["path.join(this.getrootpath",{"_index":1180,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["path.resolve(this.getrootpath",{"_index":1162,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["payload",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["pending",{"_index":1373,"title":{},"body":{"injectables/ResumesService.html":{}}}],["permission",{"_index":316,"title":{"classes/Permission.html":{}},"body":{"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission.dto",{"_index":1234,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{}}}],["permission.dto.ts",{"_index":612,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["permission.dto.ts:10",{"_index":617,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:14",{"_index":618,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:18",{"_index":619,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:6",{"_index":620,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.name",{"_index":707,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/PermissionsModule.html":{},"classes/Role.html":{}}}],["permissiondocument",{"_index":717,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["permissionmodel",{"_index":712,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["permissions",{"_index":664,"title":{},"body":{"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"controllers/PermissionsController.html":{},"miscellaneous/variables.html":{}}}],["permissions.controller",{"_index":1246,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["permissions.find",{"_index":1000,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permissions.service",{"_index":1233,"title":{},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{}}}],["permissions/permissions.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["permissionschema",{"_index":703,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissionscontroller",{"_index":1216,"title":{"controllers/PermissionsController.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"coverage.html":{}}}],["permissionsmodule",{"_index":33,"title":{"modules/PermissionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PermissionsModule.html":{},"modules.html":{},"overview.html":{}}}],["permissionsservice",{"_index":1232,"title":{"injectables/PermissionsService.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"coverage.html":{},"overview.html":{}}}],["permissión",{"_index":1031,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["permisson",{"_index":738,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["phone",{"_index":558,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["phát",{"_index":494,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{}}}],["phải",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["phần",{"_index":1084,"title":{},"body":{"controllers/MailController.html":{}}}],["plugin",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["populate",{"_index":1385,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["populate(population",{"_index":477,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["population",{"_index":460,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["port",{"_index":1122,"title":{},"body":{"modules/MailModule.html":{}}}],["portal",{"_index":1776,"title":{},"body":{"index.html":{},"properties.html":{}}}],["post",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FileController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["post('by",{"_index":1336,"title":{},"body":{"controllers/ResumesController.html":{}}}],["post('login",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('skills",{"_index":1494,"title":{},"body":{"controllers/SubcribersController.html":{}}}],["post('skills')@responsemessage('get",{"_index":1473,"title":{},"body":{"controllers/SubcribersController.html":{}}}],["post('upload",{"_index":805,"title":{},"body":{"controllers/FileController.html":{}}}],["post()@useguards()@responsemessage('create",{"_index":893,"title":{},"body":{"controllers/JobsController.html":{}}}],["prefix",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FileController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{},"controllers/UsersController.html":{}}}],["prettier/prettier",{"_index":1572,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["preview",{"_index":1135,"title":{},"body":{"modules/MailModule.html":{}}}],["private",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/HealthController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["process",{"_index":1657,"title":{},"body":{"injectables/UsersService.html":{}}}],["process.cwd",{"_index":1160,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["process.env.jwt_access_token_secret",{"_index":260,"title":{},"body":{"modules/AuthModule.html":{}}}],["processnewtoken",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["projection",{"_index":1263,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{}}}],["promise",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"controllers/HealthController.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"classes/MyThrottlerGuard.html":{}}}],["promtheus",{"_index":858,"title":{},"body":{"controllers/HealthController.html":{}}}],["prop",{"_index":513,"title":{},"body":{"classes/Company.html":{},"classes/Jobs.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subcriber.html":{},"classes/User.html":{}}}],["prop({ref",{"_index":1298,"title":{},"body":{"classes/Resume.html":{},"classes/User.html":{}}}],["prop({required",{"_index":506,"title":{},"body":{"classes/Company.html":{},"classes/Jobs.html":{},"classes/User.html":{}}}],["prop({type",{"_index":509,"title":{},"body":{"classes/Company.html":{},"classes/Jobs.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subcriber.html":{},"classes/User.html":{}}}],["properties",{"_index":265,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"classes/Jobs.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"classes/Role.html":{},"classes/Subcriber.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["protected",{"_index":1191,"title":{},"body":{"classes/MyThrottlerGuard.html":{}}}],["providers",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FileModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubcribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FileController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/SubcribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get(':id",{"_index":388,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/UsersController.html":{}}}],["public()@get(':id')@responsemessage('fetch",{"_index":898,"title":{},"body":{"controllers/JobsController.html":{}}}],["public()@get()@responsemessage('fetch",{"_index":381,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{}}}],["public()@post('upload')@responsemessage('upload",{"_index":790,"title":{},"body":{"controllers/FileController.html":{}}}],["public()@responsemessage('get",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@responsemessage('register",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@useguards(localauthguard)@throttle({default",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["public/images/${folder",{"_index":1177,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["push",{"_index":1380,"title":{},"body":{"injectables/ResumesService.html":{}}}],["put",{"_index":1613,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["qs",{"_index":380,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["qu",{"_index":1196,"title":{},"body":{"classes/MyThrottlerGuard.html":{}}}],["qua",{"_index":1577,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["quantity",{"_index":580,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/Jobs.html":{}}}],["query",{"_index":400,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["query('current",{"_index":414,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{},"controllers/UsersController.html":{}}}],["query('pagesize",{"_index":415,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{},"controllers/UsersController.html":{}}}],["queryparamsforaqp",{"_index":416,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{},"controllers/UsersController.html":{}}}],["queryparamsforaqp.current",{"_index":421,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{},"controllers/UsersController.html":{}}}],["queryparamsforaqp.pagesize",{"_index":423,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{},"controllers/UsersController.html":{}}}],["quyền",{"_index":746,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{}}}],["ra",{"_index":646,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{}}}],["rate",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["readonly",{"_index":410,"title":{},"body":{"controllers/CompaniesController.html":{},"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"injectables/DatabasesService.html":{},"controllers/FileController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{}}}],["recursive",{"_index":1165,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ref",{"_index":871,"title":{},"body":{"classes/Jobs.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["reflect",{"_index":1756,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":957,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["refresh",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refresh_token",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshexpire",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["register",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/MailController.html":{},"injectables/UsersService.html":{}}}],["register(@body",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(createdto",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(user",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["registeruserdto",{"_index":160,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["remove",{"_index":373,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":430,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FileController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{},"controllers/UsersController.html":{}}}],["remove(id",{"_index":391,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":843,"title":{},"body":{"injectables/FileService.html":{},"injectables/MailService.html":{}}}],["render",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["reply",{"_index":1128,"title":{},"body":{"modules/MailModule.html":{}}}],["reponse",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["reponse.clearcookie('refresh_token",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["repository",{"_index":1799,"title":{},"body":{"properties.html":{}}}],["req",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MulterConfigService.html":{}}}],["req.cookies['refresh_token",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user",{"_index":1032,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req?.headers?.['folder_type']?.tostring",{"_index":1175,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["reqid",{"_index":1293,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["request",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["request.baseurl",{"_index":986,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.method",{"_index":983,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.route.path",{"_index":987,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.user",{"_index":1881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":533,"title":{},"body":{"classes/Company.html":{},"classes/Jobs.html":{},"classes/User.html":{}}}],["res",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["reset",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FileModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubcribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":144,"title":{"interfaces/Response.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["response.clearcookie('refresh_token",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.cookie('refresh_token",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["response_massage",{"_index":1286,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FileController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage(\"get",{"_index":1495,"title":{},"body":{"controllers/SubcribersController.html":{}}}],["responsemessage('create",{"_index":909,"title":{},"body":{"controllers/JobsController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('delete",{"_index":1241,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('fetch",{"_index":413,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{}}}],["responsemessage('get",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('register",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('send",{"_index":1069,"title":{},"body":{"controllers/MailController.html":{}}}],["responsemessage('update",{"_index":913,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('upload",{"_index":806,"title":{},"body":{"controllers/FileController.html":{}}}],["responsemessage('user",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["result",{"_index":471,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["results",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMailDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/MyThrottlerGuard.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subcriber.html":{},"controllers/SubcribersController.html":{},"modules/SubcribersModule.html":{},"injectables/SubcribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubcriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":639,"title":{"classes/Resume.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"modules/RolesModule.html":{},"coverage.html":{}}}],["resume.dto",{"_index":1342,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["resume.dto.ts",{"_index":623,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/ResumeHistoryDto.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["resume.dto.ts:15",{"_index":1320,"title":{},"body":{"classes/ResumeHistoryDto.html":{}}}],["resume.dto.ts:19",{"_index":1322,"title":{},"body":{"classes/ResumeHistoryDto.html":{}}}],["resume.dto.ts:21",{"_index":636,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:23",{"_index":1324,"title":{},"body":{"classes/ResumeHistoryDto.html":{}}}],["resume.dto.ts:25",{"_index":632,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:28",{"_index":635,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:31",{"_index":634,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:32",{"_index":1560,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["resume.dto.ts:34",{"_index":633,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:36",{"_index":1551,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["resume.dto.ts:37",{"_index":630,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:40",{"_index":1559,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["resume.dto.ts:42",{"_index":680,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:44",{"_index":1557,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["resume.dto.ts:46",{"_index":678,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:50",{"_index":679,"title":{},"body":{"classes/CreateUserCvDto.html":{},"classes/UpdateResumeDto.html":{}}}],["resume.dto.ts:55",{"_index":1558,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["resume.dto.ts:63",{"_index":1549,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["resume.dto.ts:70",{"_index":1555,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["resume.dto.ts:75",{"_index":1547,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["resume.name",{"_index":1357,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumedocument",{"_index":1313,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["resumehistorydto",{"_index":1318,"title":{"classes/ResumeHistoryDto.html":{}},"body":{"classes/ResumeHistoryDto.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["resumemodel",{"_index":1361,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resumes",{"_index":1329,"title":{},"body":{"controllers/ResumesController.html":{}}}],["resumes.controller",{"_index":1356,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumes.service",{"_index":1341,"title":{},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{}}}],["resumes/resumes.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["resumeschema",{"_index":1316,"title":{},"body":{"classes/Resume.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resumescontroller",{"_index":1327,"title":{"controllers/ResumesController.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"coverage.html":{}}}],["resumesmodule",{"_index":34,"title":{"modules/ResumesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResumesModule.html":{},"modules.html":{},"overview.html":{}}}],["resumesservice",{"_index":1340,"title":{"injectables/ResumesService.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"overview.html":{}}}],["return",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":118,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/MyThrottlerGuard.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":315,"title":{"classes/Role.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role.dto",{"_index":1414,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubcribersController.html":{},"classes/UpdateRoleDto.html":{}}}],["role.dto.ts",{"_index":658,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:11",{"_index":660,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:15",{"_index":661,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:20",{"_index":666,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:7",{"_index":662,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.name",{"_index":708,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/RolesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["roleclean",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["roledocument",{"_index":718,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rolemodel",{"_index":713,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["roles",{"_index":1405,"title":{},"body":{"controllers/RolesController.html":{},"miscellaneous/variables.html":{}}}],["roles.controller",{"_index":1426,"title":{},"body":{"modules/RolesModule.html":{}}}],["roles.service",{"_index":1413,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["roles/roles.module",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["roleschema",{"_index":705,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolescontroller",{"_index":1403,"title":{"controllers/RolesController.html":{}},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"coverage.html":{}}}],["roleservice",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["rolesmodule",{"_index":35,"title":{"modules/RolesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RolesModule.html":{},"modules.html":{},"overview.html":{}}}],["rolesservice",{"_index":182,"title":{"injectables/RolesService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["run",{"_index":1774,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":453,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1285,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["s",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["sai",{"_index":597,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["salary",{"_index":581,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/Jobs.html":{},"controllers/MailController.html":{}}}],["saltrounds",{"_index":1663,"title":{},"body":{"injectables/UsersService.html":{}}}],["sample",{"_index":722,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["sang",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["sao",{"_index":420,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{},"controllers/UsersController.html":{}}}],["sau",{"_index":1026,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/ResumesService.html":{}}}],["schedulemodule",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["schema",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"classes/Jobs.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/Subcriber.html":{},"modules/SubcribersModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schema/job.schema",{"_index":920,"title":{},"body":{"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["schema/permission.schema",{"_index":1247,"title":{},"body":{"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{}}}],["schema/resume.schema",{"_index":640,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{}}}],["schema/role.schema",{"_index":1428,"title":{},"body":{"modules/RolesModule.html":{},"injectables/RolesService.html":{}}}],["schema/subcriber.schema",{"_index":1503,"title":{},"body":{"modules/SubcribersModule.html":{},"injectables/SubcribersService.html":{}}}],["schemafactory",{"_index":525,"title":{},"body":{"classes/Company.html":{},"classes/Jobs.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subcriber.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(company",{"_index":535,"title":{},"body":{"classes/Company.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(jobs",{"_index":889,"title":{},"body":{"classes/Jobs.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(permission",{"_index":1215,"title":{},"body":{"classes/Permission.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(resume",{"_index":1317,"title":{},"body":{"classes/Resume.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(role",{"_index":1402,"title":{},"body":{"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(subcriber",{"_index":1464,"title":{},"body":{"classes/Subcriber.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1597,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/company.schema",{"_index":437,"title":{},"body":{"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{}}}],["schemas/user.schema",{"_index":1628,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["secret",{"_index":257,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":1022,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":1124,"title":{},"body":{"modules/MailModule.html":{}}}],["select",{"_index":1386,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["select(projection",{"_index":1266,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{}}}],["sendmail",{"_index":1047,"title":{},"body":{"controllers/MailController.html":{}}}],["server",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["service",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["set",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["setmetadata(is_public_key",{"_index":1876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(response_massage",{"_index":1877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signle",{"_index":791,"title":{},"body":{"controllers/FileController.html":{}}}],["signoptions",{"_index":261,"title":{},"body":{"modules/AuthModule.html":{}}}],["sinh",{"_index":495,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{}}}],["skill",{"_index":673,"title":{},"body":{"classes/CreateSubcriberDto.html":{},"injectables/SubcribersService.html":{}}}],["skills",{"_index":582,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/Jobs.html":{},"controllers/MailController.html":{},"classes/Subcriber.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{}}}],["skills')@skipcheckpermission",{"_index":1475,"title":{},"body":{"controllers/SubcribersController.html":{}}}],["skip(offset",{"_index":474,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["skipcheckpermission",{"_index":1480,"title":{},"body":{"controllers/SubcribersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["soft",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["softdeletemodel",{"_index":241,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["softdeleteplugin",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["sort",{"_index":459,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["sort(sort",{"_index":476,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMailDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/MyThrottlerGuard.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subcriber.html":{},"controllers/SubcribersController.html":{},"modules/SubcribersModule.html":{},"injectables/SubcribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubcriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/.../company.schema.ts",{"_index":1807,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../customize.ts",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../job.schema.ts",{"_index":1808,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1763,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../permission.schema.ts",{"_index":1809,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../resume.schema.ts",{"_index":1810,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../role.schema.ts",{"_index":1811,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../sample.ts",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../subcriber.schema.ts",{"_index":1812,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":1813,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/app.service.ts",{"_index":112,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":117,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:42",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:48",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:57",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:64",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:75",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":240,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:109",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:16",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:167",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:26",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:55",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:89",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:98",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt",{"_index":950,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/local",{"_index":1034,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts",{"_index":1008,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts:21",{"_index":1013,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/jwt.strategy.ts:9",{"_index":1011,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/local.strategy.ts",{"_index":1036,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/local.strategy.ts:12",{"_index":1040,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/passport/local.strategy.ts:7",{"_index":1038,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/throttle/throttle.mess.ts",{"_index":1190,"title":{},"body":{"classes/MyThrottlerGuard.html":{},"coverage.html":{}}}],["src/auth/throttle/throttle.mess.ts:4",{"_index":1193,"title":{},"body":{"classes/MyThrottlerGuard.html":{}}}],["src/companies/companies.controller.ts",{"_index":368,"title":{},"body":{"controllers/CompaniesController.html":{},"coverage.html":{}}}],["src/companies/companies.controller.ts:24",{"_index":376,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:32",{"_index":385,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:46",{"_index":389,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:51",{"_index":397,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:60",{"_index":393,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.module.ts",{"_index":434,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["src/companies/companies.service.ts",{"_index":439,"title":{},"body":{"injectables/CompaniesService.html":{},"coverage.html":{}}}],["src/companies/companies.service.ts:13",{"_index":441,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:18",{"_index":443,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:28",{"_index":444,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:58",{"_index":445,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:66",{"_index":447,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:80",{"_index":446,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/dto/create",{"_index":563,"title":{},"body":{"classes/CreateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/dto/update",{"_index":1534,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/schemas/company.schema",{"_index":922,"title":{},"body":{"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subcriber.html":{}}}],["src/companies/schemas/company.schema.ts",{"_index":498,"title":{},"body":{"classes/Company.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/companies/schemas/company.schema.ts:10",{"_index":522,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:13",{"_index":507,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:16",{"_index":517,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:20",{"_index":521,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:23",{"_index":514,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:26",{"_index":524,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:29",{"_index":519,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:32",{"_index":515,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:35",{"_index":511,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:40",{"_index":523,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:45",{"_index":516,"title":{},"body":{"classes/Company.html":{}}}],["src/core/transfomr.interceptor.ts",{"_index":1279,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/core/transfomr.interceptor.ts:21",{"_index":1531,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/core/transfomr.interceptor.ts:23",{"_index":1533,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/databases/databases.controller.ts",{"_index":693,"title":{},"body":{"controllers/DatabasesController.html":{},"coverage.html":{}}}],["src/databases/databases.module.ts",{"_index":700,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["src/databases/databases.service.ts",{"_index":709,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{}}}],["src/databases/databases.service.ts:16",{"_index":714,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/databases.service.ts:30",{"_index":715,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/sample",{"_index":1437,"title":{},"body":{"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["src/databases/sample.ts",{"_index":1704,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorator/customize",{"_index":406,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FileController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["src/decorator/customize.ts",{"_index":1705,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/file/dto/create",{"_index":571,"title":{},"body":{"classes/CreateFileDto.html":{},"coverage.html":{}}}],["src/file/dto/update",{"_index":1538,"title":{},"body":{"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["src/file/entities/file.entity.ts",{"_index":778,"title":{},"body":{"classes/File.html":{},"coverage.html":{}}}],["src/file/file.controller.ts",{"_index":780,"title":{},"body":{"controllers/FileController.html":{},"coverage.html":{}}}],["src/file/file.controller.ts:29",{"_index":793,"title":{},"body":{"controllers/FileController.html":{}}}],["src/file/file.controller.ts:49",{"_index":783,"title":{},"body":{"controllers/FileController.html":{}}}],["src/file/file.controller.ts:54",{"_index":784,"title":{},"body":{"controllers/FileController.html":{}}}],["src/file/file.controller.ts:59",{"_index":787,"title":{},"body":{"controllers/FileController.html":{}}}],["src/file/file.controller.ts:64",{"_index":785,"title":{},"body":{"controllers/FileController.html":{}}}],["src/file/file.module.ts",{"_index":826,"title":{},"body":{"modules/FileModule.html":{}}}],["src/file/file.service.ts",{"_index":833,"title":{},"body":{"injectables/FileService.html":{},"coverage.html":{}}}],["src/file/file.service.ts:11",{"_index":836,"title":{},"body":{"injectables/FileService.html":{}}}],["src/file/file.service.ts:15",{"_index":837,"title":{},"body":{"injectables/FileService.html":{}}}],["src/file/file.service.ts:19",{"_index":839,"title":{},"body":{"injectables/FileService.html":{}}}],["src/file/file.service.ts:23",{"_index":838,"title":{},"body":{"injectables/FileService.html":{}}}],["src/file/file.service.ts:7",{"_index":835,"title":{},"body":{"injectables/FileService.html":{}}}],["src/file/multer.config.ts",{"_index":1145,"title":{},"body":{"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["src/file/multer.config.ts:12",{"_index":1155,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/file/multer.config.ts:16",{"_index":1152,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/file/multer.config.ts:24",{"_index":1149,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/health/health.controller.ts",{"_index":845,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:21",{"_index":849,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":863,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/jobs/dto/create",{"_index":574,"title":{},"body":{"classes/CreateJobDto.html":{},"coverage.html":{}}}],["src/jobs/dto/update",{"_index":1540,"title":{},"body":{"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts",{"_index":891,"title":{},"body":{"controllers/JobsController.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts:28",{"_index":896,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:35",{"_index":897,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:50",{"_index":899,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:57",{"_index":903,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:66",{"_index":900,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.module",{"_index":1115,"title":{},"body":{"modules/MailModule.html":{}}}],["src/jobs/jobs.module.ts",{"_index":919,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/jobs/jobs.service.ts",{"_index":924,"title":{},"body":{"injectables/JobsService.html":{},"coverage.html":{}}}],["src/jobs/jobs.service.ts:12",{"_index":926,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:17",{"_index":928,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:31",{"_index":929,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:61",{"_index":930,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:73",{"_index":932,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:87",{"_index":931,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/schema/job.schema",{"_index":638,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subcriber.html":{}}}],["src/jobs/schema/job.schema.ts",{"_index":869,"title":{},"body":{"classes/Jobs.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/jobs/schema/job.schema.ts:10",{"_index":881,"title":{},"body":{"classes/Jobs.html":{}}}],["src/jobs/schema/job.schema.ts:13",{"_index":884,"title":{},"body":{"classes/Jobs.html":{}}}],["src/jobs/schema/job.schema.ts:16",{"_index":882,"title":{},"body":{"classes/Jobs.html":{}}}],["src/jobs/schema/job.schema.ts:19",{"_index":875,"title":{},"body":{"classes/Jobs.html":{}}}],["src/jobs/schema/job.schema.ts:22",{"_index":879,"title":{},"body":{"classes/Jobs.html":{}}}],["src/jobs/schema/job.schema.ts:25",{"_index":880,"title":{},"body":{"classes/Jobs.html":{}}}],["src/jobs/schema/job.schema.ts:28",{"_index":883,"title":{},"body":{"classes/Jobs.html":{}}}],["src/jobs/schema/job.schema.ts:31",{"_index":885,"title":{},"body":{"classes/Jobs.html":{}}}],["src/jobs/schema/job.schema.ts:34",{"_index":876,"title":{},"body":{"classes/Jobs.html":{}}}],["src/jobs/schema/job.schema.ts:37",{"_index":877,"title":{},"body":{"classes/Jobs.html":{}}}],["src/jobs/schema/job.schema.ts:40",{"_index":872,"title":{},"body":{"classes/Jobs.html":{}}}],["src/jobs/schema/job.schema.ts:47",{"_index":873,"title":{},"body":{"classes/Jobs.html":{}}}],["src/jobs/schema/job.schema.ts:50",{"_index":886,"title":{},"body":{"classes/Jobs.html":{}}}],["src/jobs/schema/job.schema.ts:53",{"_index":878,"title":{},"body":{"classes/Jobs.html":{}}}],["src/jobs/schema/job.schema.ts:56",{"_index":874,"title":{},"body":{"classes/Jobs.html":{}}}],["src/mail/dto/create",{"_index":608,"title":{},"body":{"classes/CreateMailDto.html":{},"coverage.html":{}}}],["src/mail/dto/update",{"_index":1542,"title":{},"body":{"classes/UpdateMailDto.html":{},"coverage.html":{}}}],["src/mail/entities/mail.entity.ts",{"_index":1044,"title":{},"body":{"classes/Mail.html":{},"coverage.html":{}}}],["src/mail/mail.controller.ts",{"_index":1046,"title":{},"body":{"controllers/MailController.html":{},"coverage.html":{}}}],["src/mail/mail.controller.ts:41",{"_index":1051,"title":{},"body":{"controllers/MailController.html":{}}}],["src/mail/mail.module.ts",{"_index":1109,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":1137,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/mail/mail.service.ts:11",{"_index":1138,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:16",{"_index":1140,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:20",{"_index":1141,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:24",{"_index":1142,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:28",{"_index":1144,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:32",{"_index":1143,"title":{},"body":{"injectables/MailService.html":{}}}],["src/main.ts",{"_index":1708,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/permissions/dto/create",{"_index":611,"title":{},"body":{"classes/CreatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/dto/update",{"_index":1544,"title":{},"body":{"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts",{"_index":1217,"title":{},"body":{"controllers/PermissionsController.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts:25",{"_index":1219,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:34",{"_index":1221,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:52",{"_index":1225,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:58",{"_index":1230,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:68",{"_index":1227,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.module.ts",{"_index":1245,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["src/permissions/permissions.service.ts",{"_index":1248,"title":{},"body":{"injectables/PermissionsService.html":{},"coverage.html":{}}}],["src/permissions/permissions.service.ts:102",{"_index":1254,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:14",{"_index":1250,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:19",{"_index":1251,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:40",{"_index":1252,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:71",{"_index":1253,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:78",{"_index":1255,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/schema/permission.schema",{"_index":704,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Role.html":{}}}],["src/permissions/schema/permission.schema.ts",{"_index":1203,"title":{},"body":{"classes/Permission.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/permissions/schema/permission.schema.ts:12",{"_index":1212,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:15",{"_index":1204,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:18",{"_index":1210,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:21",{"_index":1211,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:24",{"_index":1205,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:30",{"_index":1213,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:36",{"_index":1208,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:41",{"_index":1206,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:44",{"_index":1214,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:47",{"_index":1209,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:50",{"_index":1207,"title":{},"body":{"classes/Permission.html":{}}}],["src/resumes/dto/create",{"_index":622,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"coverage.html":{}}}],["src/resumes/dto/update",{"_index":1319,"title":{},"body":{"classes/ResumeHistoryDto.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts",{"_index":1328,"title":{},"body":{"controllers/ResumesController.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts:24",{"_index":1332,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:30",{"_index":1333,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:43",{"_index":1334,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:48",{"_index":1339,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:57",{"_index":1338,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:62",{"_index":1337,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.module.ts",{"_index":1355,"title":{},"body":{"modules/ResumesModule.html":{}}}],["src/resumes/resumes.service.ts",{"_index":1358,"title":{},"body":{"injectables/ResumesService.html":{},"coverage.html":{}}}],["src/resumes/resumes.service.ts:108",{"_index":1368,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:12",{"_index":1360,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:125",{"_index":1367,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:17",{"_index":1363,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:38",{"_index":1365,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:69",{"_index":1366,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:81",{"_index":1369,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/schema/resume.schema",{"_index":1427,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/resumes/schema/resume.schema.ts",{"_index":1296,"title":{},"body":{"classes/Resume.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/resumes/schema/resume.schema.ts:12",{"_index":1312,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:15",{"_index":1307,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:18",{"_index":1299,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:21",{"_index":1304,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:24",{"_index":1311,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:27",{"_index":1308,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:30",{"_index":1305,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:37",{"_index":1300,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:43",{"_index":1309,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:49",{"_index":1303,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:54",{"_index":1301,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:57",{"_index":1310,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:60",{"_index":1306,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:63",{"_index":1302,"title":{},"body":{"classes/Resume.html":{}}}],["src/roles/dto/create",{"_index":657,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/roles/dto/update",{"_index":1485,"title":{},"body":{"controllers/SubcribersController.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts",{"_index":1404,"title":{},"body":{"controllers/RolesController.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts:24",{"_index":1407,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:30",{"_index":1408,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:43",{"_index":1409,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:48",{"_index":1412,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:57",{"_index":1410,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.module",{"_index":254,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/roles/roles.module.ts",{"_index":1425,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/roles/roles.service",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{}}}],["src/roles/roles.service.ts",{"_index":1429,"title":{},"body":{"injectables/RolesService.html":{},"coverage.html":{}}}],["src/roles/roles.service.ts:14",{"_index":1431,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:19",{"_index":1432,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:33",{"_index":1433,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:64",{"_index":1434,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:75",{"_index":1436,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:95",{"_index":1435,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/schema/role.schema",{"_index":706,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/roles/schema/role.schema.ts",{"_index":1387,"title":{},"body":{"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/roles/schema/role.schema.ts:13",{"_index":1396,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:16",{"_index":1392,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:19",{"_index":1394,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:22",{"_index":1397,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:25",{"_index":1401,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:28",{"_index":1398,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:31",{"_index":1393,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:38",{"_index":1388,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:44",{"_index":1399,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:50",{"_index":1391,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:55",{"_index":1389,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:58",{"_index":1400,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:61",{"_index":1395,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:64",{"_index":1390,"title":{},"body":{"classes/Role.html":{}}}],["src/subcribers/dto/create",{"_index":668,"title":{},"body":{"classes/CreateSubcriberDto.html":{},"coverage.html":{}}}],["src/subcribers/dto/update",{"_index":1562,"title":{},"body":{"classes/UpdateSubcriberDto.html":{},"coverage.html":{}}}],["src/subcribers/schema/subcriber.schema",{"_index":1061,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["src/subcribers/schema/subcriber.schema.ts",{"_index":1453,"title":{},"body":{"classes/Subcriber.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/subcribers/schema/subcriber.schema.ts:12",{"_index":1458,"title":{},"body":{"classes/Subcriber.html":{}}}],["src/subcribers/schema/subcriber.schema.ts:15",{"_index":1460,"title":{},"body":{"classes/Subcriber.html":{}}}],["src/subcribers/schema/subcriber.schema.ts:18",{"_index":1461,"title":{},"body":{"classes/Subcriber.html":{}}}],["src/subcribers/schema/subcriber.schema.ts:21",{"_index":1454,"title":{},"body":{"classes/Subcriber.html":{}}}],["src/subcribers/schema/subcriber.schema.ts:27",{"_index":1462,"title":{},"body":{"classes/Subcriber.html":{}}}],["src/subcribers/schema/subcriber.schema.ts:33",{"_index":1457,"title":{},"body":{"classes/Subcriber.html":{}}}],["src/subcribers/schema/subcriber.schema.ts:38",{"_index":1455,"title":{},"body":{"classes/Subcriber.html":{}}}],["src/subcribers/schema/subcriber.schema.ts:41",{"_index":1463,"title":{},"body":{"classes/Subcriber.html":{}}}],["src/subcribers/schema/subcriber.schema.ts:44",{"_index":1459,"title":{},"body":{"classes/Subcriber.html":{}}}],["src/subcribers/schema/subcriber.schema.ts:47",{"_index":1456,"title":{},"body":{"classes/Subcriber.html":{}}}],["src/subcribers/subcribers.controller.ts",{"_index":1466,"title":{},"body":{"controllers/SubcribersController.html":{},"coverage.html":{}}}],["src/subcribers/subcribers.controller.ts:26",{"_index":1469,"title":{},"body":{"controllers/SubcribersController.html":{}}}],["src/subcribers/subcribers.controller.ts:32",{"_index":1470,"title":{},"body":{"controllers/SubcribersController.html":{}}}],["src/subcribers/subcribers.controller.ts:45",{"_index":1471,"title":{},"body":{"controllers/SubcribersController.html":{}}}],["src/subcribers/subcribers.controller.ts:50",{"_index":1479,"title":{},"body":{"controllers/SubcribersController.html":{}}}],["src/subcribers/subcribers.controller.ts:55",{"_index":1477,"title":{},"body":{"controllers/SubcribersController.html":{}}}],["src/subcribers/subcribers.controller.ts:62",{"_index":1476,"title":{},"body":{"controllers/SubcribersController.html":{}}}],["src/subcribers/subcribers.module",{"_index":1116,"title":{},"body":{"modules/MailModule.html":{}}}],["src/subcribers/subcribers.module.ts",{"_index":1501,"title":{},"body":{"modules/SubcribersModule.html":{}}}],["src/subcribers/subcribers.service.ts",{"_index":1504,"title":{},"body":{"injectables/SubcribersService.html":{},"coverage.html":{}}}],["src/subcribers/subcribers.service.ts:13",{"_index":1507,"title":{},"body":{"injectables/SubcribersService.html":{}}}],["src/subcribers/subcribers.service.ts:18",{"_index":1508,"title":{},"body":{"injectables/SubcribersService.html":{}}}],["src/subcribers/subcribers.service.ts:29",{"_index":1509,"title":{},"body":{"injectables/SubcribersService.html":{}}}],["src/subcribers/subcribers.service.ts:60",{"_index":1510,"title":{},"body":{"injectables/SubcribersService.html":{}}}],["src/subcribers/subcribers.service.ts:69",{"_index":1515,"title":{},"body":{"injectables/SubcribersService.html":{}}}],["src/subcribers/subcribers.service.ts:82",{"_index":1513,"title":{},"body":{"injectables/SubcribersService.html":{}}}],["src/subcribers/subcribers.service.ts:91",{"_index":1512,"title":{},"body":{"injectables/SubcribersService.html":{}}}],["src/users/dto/create",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":1565,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema",{"_index":253,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":1578,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/schemas/user.schema.ts:11",{"_index":1587,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:14",{"_index":1591,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:17",{"_index":1590,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:20",{"_index":1581,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:23",{"_index":1592,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:26",{"_index":1588,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:29",{"_index":1580,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:32",{"_index":1582,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:38",{"_index":1594,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:41",{"_index":1593,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:44",{"_index":1584,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:47",{"_index":1596,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:50",{"_index":1589,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:53",{"_index":1585,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:56",{"_index":1583,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:61",{"_index":1595,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:66",{"_index":1586,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.interface",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"controllers/UsersController.html":{}}}],["src/users/user.interface.ts",{"_index":868,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/users/users.controller.ts",{"_index":1602,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:26",{"_index":1605,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:31",{"_index":1606,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:45",{"_index":1607,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:51",{"_index":1612,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:57",{"_index":1609,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":244,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":1626,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":243,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/MailService.html":{}}}],["src/users/users.service.ts",{"_index":1631,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:109",{"_index":1642,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:122",{"_index":1651,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:133",{"_index":1650,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:161",{"_index":1643,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:167",{"_index":1648,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:173",{"_index":1653,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:177",{"_index":1645,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:18",{"_index":1637,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:29",{"_index":1652,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:35",{"_index":1639,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:56",{"_index":1649,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:78",{"_index":1641,"title":{},"body":{"injectables/UsersService.html":{}}}],["startdate",{"_index":583,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/Jobs.html":{}}}],["started",{"_index":1765,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1692,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":626,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/UpdateResumeDto.html":{}}}],["statuscode",{"_index":1280,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["storage",{"_index":1168,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["strategy",{"_index":1015,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strict",{"_index":1134,"title":{},"body":{"modules/MailModule.html":{}}}],["string",{"_index":119,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"interfaces/IUser.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subcriber.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["string(item.salary).replace",{"_index":1092,"title":{},"body":{"controllers/MailController.html":{}}}],["sub",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["subcriber",{"_index":1059,"title":{"classes/Subcriber.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Subcriber.html":{},"modules/SubcribersModule.html":{},"injectables/SubcribersService.html":{},"coverage.html":{}}}],["subcriber's",{"_index":1474,"title":{},"body":{"controllers/SubcribersController.html":{}}}],["subcriber.dto",{"_index":1483,"title":{},"body":{"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"classes/UpdateSubcriberDto.html":{}}}],["subcriber.dto.ts",{"_index":669,"title":{},"body":{"classes/CreateSubcriberDto.html":{},"classes/UpdateSubcriberDto.html":{},"coverage.html":{}}}],["subcriber.dto.ts:14",{"_index":671,"title":{},"body":{"classes/CreateSubcriberDto.html":{}}}],["subcriber.dto.ts:18",{"_index":672,"title":{},"body":{"classes/CreateSubcriberDto.html":{}}}],["subcriber.dto.ts:23",{"_index":676,"title":{},"body":{"classes/CreateSubcriberDto.html":{}}}],["subcriber.name",{"_index":1117,"title":{},"body":{"modules/MailModule.html":{},"modules/SubcribersModule.html":{}}}],["subcriberdocument",{"_index":1060,"title":{},"body":{"controllers/MailController.html":{},"classes/Subcriber.html":{},"injectables/SubcribersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["subcribermodel",{"_index":1067,"title":{},"body":{"controllers/MailController.html":{},"injectables/SubcribersService.html":{}}}],["subcribers",{"_index":1072,"title":{},"body":{"controllers/MailController.html":{},"controllers/SubcribersController.html":{}}}],["subcribers.controller",{"_index":1502,"title":{},"body":{"modules/SubcribersModule.html":{}}}],["subcribers.service",{"_index":1482,"title":{},"body":{"controllers/SubcribersController.html":{},"modules/SubcribersModule.html":{}}}],["subcribers/subcribers.module",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["subcriberschema",{"_index":1114,"title":{},"body":{"modules/MailModule.html":{},"classes/Subcriber.html":{},"modules/SubcribersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["subcriberscontroller",{"_index":1465,"title":{"controllers/SubcribersController.html":{}},"body":{"controllers/SubcribersController.html":{},"modules/SubcribersModule.html":{},"coverage.html":{}}}],["subcribersmodule",{"_index":36,"title":{"modules/SubcribersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules/SubcribersModule.html":{},"modules.html":{},"overview.html":{}}}],["subcribersservice",{"_index":1481,"title":{"injectables/SubcribersService.html":{}},"body":{"controllers/SubcribersController.html":{},"modules/SubcribersModule.html":{},"injectables/SubcribersService.html":{},"coverage.html":{},"overview.html":{}}}],["subject",{"_index":1098,"title":{},"body":{"controllers/MailController.html":{}}}],["subs",{"_index":1074,"title":{},"body":{"controllers/MailController.html":{}}}],["subs.name",{"_index":1105,"title":{},"body":{"controllers/MailController.html":{}}}],["subs.skills",{"_index":1076,"title":{},"body":{"controllers/MailController.html":{}}}],["subsskills",{"_index":1075,"title":{},"body":{"controllers/MailController.html":{}}}],["success",{"_index":895,"title":{},"body":{"controllers/JobsController.html":{}}}],["sunday",{"_index":1071,"title":{},"body":{"controllers/MailController.html":{}}}],["super",{"_index":971,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["super.canactivate(context",{"_index":976,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":1779,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1780,"title":{},"body":{"modules.html":{}}}],["sách",{"_index":991,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["sánh",{"_index":993,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["t",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["table",{"_index":1716,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1715,"title":{},"body":{"coverage.html":{}}}],["targetdirectory",{"_index":1153,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["targetendpoint",{"_index":985,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetendpoint.startswith('/api/v1/auth",{"_index":1004,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetmethod",{"_index":982,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["temp",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["temp._id",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["temp.name",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["temp.permission",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{}}}],["temp?.permission",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["template",{"_index":1104,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["templates",{"_index":1131,"title":{},"body":{"modules/MailModule.html":{}}}],["terminusmodule",{"_index":865,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":1049,"title":{},"body":{"controllers/MailController.html":{}}}],["testing",{"_index":1099,"title":{},"body":{"controllers/MailController.html":{}}}],["text",{"_index":1102,"title":{},"body":{"controllers/MailController.html":{}}}],["th",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"index.html":{}}}],["tham",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.login(req.user",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(response",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.processnewtoken(refreshtoken",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(createdto",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":1041,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.companiesservice.create(createcompanydto",{"_index":412,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findall(current",{"_index":424,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findone(id",{"_index":427,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.remove(id",{"_index":431,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.update(id",{"_index":429,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companymodel",{"_index":472,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.countdocuments(filter",{"_index":468,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.create",{"_index":455,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.findone",{"_index":482,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.softdelete",{"_index":492,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.updateone",{"_index":489,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.configservice.get('init_password",{"_index":762,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.configservice.get('should_init",{"_index":730,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.congfiservice.get",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.congfiservice.get('jwt_refresh_token_secret",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.createrefreshtoken(payload",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.ensureexists(uploadpath",{"_index":1178,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["this.fileservice.findall",{"_index":819,"title":{},"body":{"controllers/FileController.html":{}}}],["this.fileservice.findone(+id",{"_index":820,"title":{},"body":{"controllers/FileController.html":{}}}],["this.fileservice.remove(+id",{"_index":823,"title":{},"body":{"controllers/FileController.html":{}}}],["this.fileservice.update(+id",{"_index":822,"title":{},"body":{"controllers/FileController.html":{}}}],["this.hashpassword(creatuserdto.password",{"_index":1666,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.hashpassword(user.password",{"_index":1673,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.healthcheck.check",{"_index":861,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.jobmodel",{"_index":942,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.create",{"_index":935,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.find",{"_index":1087,"title":{},"body":{"controllers/MailController.html":{}}}],["this.jobmodel.find(filter)).length",{"_index":941,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.findone",{"_index":946,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.softdelete",{"_index":949,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.updateone",{"_index":948,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobsservice.create(createjobdto",{"_index":910,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findall(current",{"_index":911,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findone(id",{"_index":912,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.remove(id",{"_index":915,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.update(id",{"_index":914,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jwtservice.sign(payload",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(refreshtoken",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log",{"_index":774,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.mailerservice.sendmail",{"_index":1095,"title":{},"body":{"controllers/MailController.html":{}}}],["this.mongoosehealth.pingcheck('mongodb",{"_index":862,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.permissionmodel",{"_index":1265,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.countdocuments",{"_index":735,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.create",{"_index":1261,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find(filter)).length",{"_index":1264,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find({}).select('_id",{"_index":742,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.findone",{"_index":1257,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.insertmany(init_permission",{"_index":740,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.softdelete",{"_index":1270,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.updateone",{"_index":1269,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionsservice.create(createpermissiondto",{"_index":1237,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findall",{"_index":1238,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findone(id",{"_index":1239,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.remove(id",{"_index":1242,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.update(id",{"_index":1240,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.reflector.get(response_massage",{"_index":1295,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["this.reflector.getallandoverride",{"_index":979,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":973,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.resumemodel",{"_index":1377,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.create",{"_index":1372,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find(filter)).length",{"_index":1376,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.findone",{"_index":1378,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.softdelete",{"_index":1382,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.updateone",{"_index":1379,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumesservice.create(createresumedto",{"_index":1345,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findall(current",{"_index":1346,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findone(id",{"_index":1347,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.getcvbyuser(user",{"_index":1352,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.remove(id",{"_index":1350,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.update(id",{"_index":1349,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.rolemodel",{"_index":1444,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.countdocuments",{"_index":737,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.create",{"_index":1441,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.find(filter)).length",{"_index":1443,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findbyid(id",{"_index":1449,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findone",{"_index":756,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["this.rolemodel.insertmany",{"_index":743,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.softdelete",{"_index":1452,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.updateone",{"_index":1447,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.roleservice.findone(user.role._id",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.roleservice.findone(userrole._id",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.roleservice.findone(userrole._id)).toobject",{"_index":1033,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.rolesservice.create(createroledto",{"_index":1417,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findall(current",{"_index":1418,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findone(id",{"_index":1419,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.remove(id",{"_index":1421,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.update(id",{"_index":1420,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.subcribermodel",{"_index":1520,"title":{},"body":{"injectables/SubcribersService.html":{}}}],["this.subcribermodel.create",{"_index":1517,"title":{},"body":{"injectables/SubcribersService.html":{}}}],["this.subcribermodel.find",{"_index":1073,"title":{},"body":{"controllers/MailController.html":{}}}],["this.subcribermodel.find(filter)).length",{"_index":1519,"title":{},"body":{"injectables/SubcribersService.html":{}}}],["this.subcribermodel.findone",{"_index":1523,"title":{},"body":{"injectables/SubcribersService.html":{}}}],["this.subcribermodel.softdelete",{"_index":1530,"title":{},"body":{"injectables/SubcribersService.html":{}}}],["this.subcribermodel.updateone",{"_index":1525,"title":{},"body":{"injectables/SubcribersService.html":{}}}],["this.subcribersservice.create(createsubcriberdto",{"_index":1488,"title":{},"body":{"controllers/SubcribersController.html":{}}}],["this.subcribersservice.findall(current",{"_index":1489,"title":{},"body":{"controllers/SubcribersController.html":{}}}],["this.subcribersservice.findone(id",{"_index":1490,"title":{},"body":{"controllers/SubcribersController.html":{}}}],["this.subcribersservice.getskills(user",{"_index":1497,"title":{},"body":{"controllers/SubcribersController.html":{}}}],["this.subcribersservice.remove(id",{"_index":1493,"title":{},"body":{"controllers/SubcribersController.html":{}}}],["this.subcribersservice.update(updateroledto",{"_index":1492,"title":{},"body":{"controllers/SubcribersController.html":{}}}],["this.usermodel",{"_index":1676,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.countdocuments",{"_index":733,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.create",{"_index":1670,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find(filter)).length",{"_index":1675,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(id",{"_index":1683,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":757,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["this.usermodel.insertmany",{"_index":758,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.softdelete",{"_index":1685,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.updateone",{"_index":1680,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createdto",{"_index":1617,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(current",{"_index":1618,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":1619,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyusername(username",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["this.usersservice.finduserbytoken(refreshtoken",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.hashpassword",{"_index":761,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usersservice.isvalidpassword",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.register(user",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.remove(id",{"_index":1621,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(updateuserdto",{"_index":1620,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateusertoken",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updateusertoken(refresh_token",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["throttle",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttle/throttle.mess",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttlerexception",{"_index":1194,"title":{},"body":{"classes/MyThrottlerGuard.html":{}}}],["throttlerguard",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/MyThrottlerGuard.html":{}}}],["throttlermodule",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MyThrottlerGuard.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["throwthrottlingexception",{"_index":1192,"title":{},"body":{"classes/MyThrottlerGuard.html":{}}}],["thêm",{"_index":647,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"injectables/JwtStrategy.html":{},"injectables/ResumesService.html":{}}}],["thông",{"_index":1659,"title":{},"body":{"injectables/UsersService.html":{}}}],["thấy",{"_index":485,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["thống",{"_index":752,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["timestamp",{"_index":1186,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["timestamps",{"_index":532,"title":{},"body":{"classes/Company.html":{},"classes/Jobs.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subcriber.html":{},"classes/User.html":{}}}],["timestamp}${extname",{"_index":1189,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["tiếp",{"_index":651,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{}}}],["todo",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["token",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["token')@get('refresh",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["total",{"_index":481,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["totalitems",{"_index":467,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["totalpages",{"_index":469,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["toán",{"_index":1077,"title":{},"body":{"controllers/MailController.html":{}}}],["tr",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"controllers/MailController.html":{}}}],["trang",{"_index":1199,"title":{},"body":{"classes/MyThrottlerGuard.html":{}}}],["transformer",{"_index":541,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/ResumeHistoryDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":1287,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["transport",{"_index":1119,"title":{},"body":{"modules/MailModule.html":{}}}],["trong",{"_index":649,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"controllers/MailController.html":{}}}],["true",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"classes/Jobs.html":{},"injectables/JwtAuthGuard.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"classes/Role.html":{},"classes/Subcriber.html":{},"injectables/SubcribersService.html":{},"classes/UpdateResumeDto.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["true})@isoptional",{"_index":599,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["true})@prop",{"_index":520,"title":{},"body":{"classes/Company.html":{}}}],["true})@type(undefined",{"_index":1553,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["truy",{"_index":1006,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["try",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["trước",{"_index":1202,"title":{},"body":{"classes/MyThrottlerGuard.html":{}}}],["trường",{"_index":1080,"title":{},"body":{"controllers/MailController.html":{},"classes/UpdateUserDto.html":{}}}],["trống",{"_index":553,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["trống'})@isarray({message",{"_index":674,"title":{},"body":{"classes/CreateSubcriberDto.html":{}}}],["trống'})@ismongoid({each",{"_index":663,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["trống'})@ismongoid({message",{"_index":677,"title":{},"body":{"classes/CreateUserCvDto.html":{},"classes/RegisterUserDto.html":{}}}],["trống'})@isstring",{"_index":659,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{}}}],["trống'})@isstring()@isemail",{"_index":670,"title":{},"body":{"classes/CreateSubcriberDto.html":{}}}],["ttl",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["ty",{"_index":487,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["type",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"interfaces/IUser.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subcriber.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1805,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":605,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubcriberDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["tách",{"_index":645,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{}}}],["tìm",{"_index":484,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["tại",{"_index":1260,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["tạo",{"_index":417,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubcribersController.html":{},"controllers/UsersController.html":{}}}],["tải",{"_index":1200,"title":{},"body":{"classes/MyThrottlerGuard.html":{}}}],["tốc",{"_index":1195,"title":{},"body":{"classes/MyThrottlerGuard.html":{}}}],["tồn",{"_index":1259,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["tục",{"_index":652,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{}}}],["từng",{"_index":996,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["unauthorizedexception",{"_index":967,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('token",{"_index":980,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["unauthorizedexception('username/password",{"_index":1042,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":870,"title":{},"body":{"classes/Jobs.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["undefined})@useguards(mythrottlerguard)@responsemessage('user",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["unknown",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":1798,"title":{},"body":{"properties.html":{}}}],["update",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["update(@body",{"_index":1491,"title":{},"body":{"controllers/SubcribersController.html":{},"controllers/UsersController.html":{}}}],["update(@param('id",{"_index":821,"title":{},"body":{"controllers/FileController.html":{}}}],["update(id",{"_index":394,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["update(updateroledto",{"_index":1478,"title":{},"body":{"controllers/SubcribersController.html":{}}}],["update(updatesubcriberdto",{"_index":1514,"title":{},"body":{"injectables/SubcribersService.html":{}}}],["update(updateuserdto",{"_index":1610,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateat",{"_index":1315,"title":{},"body":{"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/UpdateResumeDto.html":{}}}],["updateby",{"_index":490,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subcriber.html":{},"injectables/SubcribersService.html":{},"classes/UpdateResumeDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["updatecompanydto",{"_index":395,"title":{"classes/UpdateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["updated",{"_index":505,"title":{},"body":{"classes/Company.html":{},"classes/Jobs.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subcriber.html":{}}}],["updatedat",{"_index":1579,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["updatedby",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatefiledto",{"_index":786,"title":{"classes/UpdateFileDto.html":{}},"body":{"controllers/FileController.html":{},"injectables/FileService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["updatejobdto",{"_index":901,"title":{"classes/UpdateJobDto.html":{}},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["updatemaildto",{"_index":1056,"title":{"classes/UpdateMailDto.html":{}},"body":{"controllers/MailController.html":{},"injectables/MailService.html":{},"classes/UpdateMailDto.html":{},"coverage.html":{}}}],["updatepermissiondto",{"_index":1228,"title":{"classes/UpdatePermissionDto.html":{}},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["updateresumedto",{"_index":1326,"title":{"classes/UpdateResumeDto.html":{}},"body":{"classes/ResumeHistoryDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["updaterole",{"_index":1446,"title":{},"body":{"injectables/RolesService.html":{}}}],["updateroledto",{"_index":1411,"title":{"classes/UpdateRoleDto.html":{}},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubcribersController.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["updates",{"_index":842,"title":{},"body":{"injectables/FileService.html":{},"injectables/MailService.html":{}}}],["updatestatus",{"_index":1268,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{}}}],["updatesubcriber",{"_index":1524,"title":{},"body":{"injectables/SubcribersService.html":{}}}],["updatesubcriberdto",{"_index":1484,"title":{"classes/UpdateSubcriberDto.html":{}},"body":{"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"classes/UpdateSubcriberDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":1564,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserdto._id",{"_index":1682,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateusertoken",{"_index":1633,"title":{},"body":{"injectables/UsersService.html":{}}}],["uploadedfile",{"_index":796,"title":{},"body":{"controllers/FileController.html":{}}}],["uploadfile",{"_index":782,"title":{},"body":{"controllers/FileController.html":{}}}],["uploadfile(file",{"_index":788,"title":{},"body":{"controllers/FileController.html":{}}}],["uploadpath",{"_index":1176,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["upsert",{"_index":1526,"title":{},"body":{"injectables/SubcribersService.html":{}}}],["uri",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":627,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"classes/Role.html":{},"classes/UpdateResumeDto.html":{}}}],["use",{"_index":449,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["useclass",{"_index":832,"title":{},"body":{"modules/FileModule.html":{}}}],["usefactory",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["useguards",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{},"controllers/JobsController.html":{}}}],["useguards(localauthguard",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard)@get('logout",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(mythrottlerguard",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":797,"title":{},"body":{"controllers/FileController.html":{},"controllers/JobsController.html":{}}}],["useinterceptors(fileinterceptor('fileupload",{"_index":807,"title":{},"body":{"controllers/FileController.html":{}}}],["user",{"_index":68,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubcribersController.html":{},"injectables/SubcribersService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user')@delete(':id",{"_index":1608,"title":{},"body":{"controllers/UsersController.html":{}}}],["user')@patch",{"_index":1611,"title":{},"body":{"controllers/UsersController.html":{}}}],["user')@post",{"_index":1604,"title":{},"body":{"controllers/UsersController.html":{}}}],["user')@post('register",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{}}}],["user._id",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["user.dto",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":536,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":1567,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:18",{"_index":538,"title":{},"body":{"classes/Company-1.html":{}}}],["user.dto.ts:21",{"_index":539,"title":{},"body":{"classes/Company-1.html":{}}}],["user.dto.ts:28",{"_index":686,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:31",{"_index":689,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:34",{"_index":688,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:37",{"_index":681,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:40",{"_index":684,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:43",{"_index":687,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:46",{"_index":691,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:49",{"_index":690,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:55",{"_index":683,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:61",{"_index":1273,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:64",{"_index":1276,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:67",{"_index":1275,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:70",{"_index":1271,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:73",{"_index":1272,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:76",{"_index":1274,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:79",{"_index":1277,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:83",{"_index":1278,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:90",{"_index":1600,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["user.dto.ts:95",{"_index":1599,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["user.email",{"_index":457,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubcribersService.html":{},"injectables/UsersService.html":{}}}],["user.interface",{"_index":1658,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.module",{"_index":1662,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.name",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabasesModule.html":{},"injectables/JobsService.html":{},"modules/MailModule.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.password",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.permission",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.role",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.toobject",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.permission",{"_index":989,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["user@gmail.com",{"_index":768,"title":{},"body":{"injectables/DatabasesService.html":{},"miscellaneous/variables.html":{}}}],["user_role",{"_index":721,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userdocument",{"_index":252,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/MailService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":628,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{}}}],["userlogindto",{"_index":154,"title":{"classes/UserLoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["usermodel",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/MailService.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["username@gmail.com",{"_index":561,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["userrole",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["userrole?._id",{"_index":769,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["users",{"_index":988,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["users.controller",{"_index":1627,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1614,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/schemas/user.schema",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["users/users.module",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabasesModule.html":{},"modules/MailModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":1601,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":37,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":242,"title":{"injectables/UsersService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/MailService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userupdate",{"_index":488,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["v",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"classes/UpdateUserDto.html":{}}}],["va",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":643,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":1012,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":1039,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validatenested",{"_index":545,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/ResumeHistoryDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UserLoginDto.html":{}}}],["validatenested()@type(undefined",{"_index":1323,"title":{},"body":{"classes/ResumeHistoryDto.html":{}}}],["validateuser",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":530,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubcriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/Jobs.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/ResumeHistoryDto.html":{},"classes/Role.html":{},"classes/Subcriber.html":{},"classes/UpdateResumeDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1702,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1814,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1788,"title":{},"body":{"properties.html":{}}}],["vietnam",{"_index":765,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["view",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["viên",{"_index":749,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["viện",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["void",{"_index":1154,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["vs",{"_index":859,"title":{},"body":{"controllers/HealthController.html":{}}}],["vu",{"_index":770,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["vuhuy1262@gmail.com",{"_index":1096,"title":{},"body":{"controllers/MailController.html":{}}}],["vui",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["vào",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["với",{"_index":995,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"index.html":{}}}],["welcome",{"_index":1103,"title":{},"body":{"controllers/MailController.html":{}}}],["world",{"_index":121,"title":{},"body":{"injectables/AppService.html":{}}}],["xong",{"_index":1201,"title":{},"body":{"classes/MyThrottlerGuard.html":{}}}],["xóa",{"_index":422,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubcribersController.html":{},"controllers/UsersController.html":{}}}],["y",{"_index":1381,"title":{},"body":{"injectables/ResumesService.html":{},"classes/UpdateUserDto.html":{}}}],["zoom",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FileModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubcribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller()\nexport class AppController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFileModule\n\nFileModule\n\nAppModule -->\n\nFileModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nSubcribersModule\n\nSubcribersModule\n\nAppModule -->\n\nSubcribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CompaniesModule\n                        \n                        \n                            DatabasesModule\n                        \n                        \n                            FileModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            PermissionsModule\n                        \n                        \n                            ResumesModule\n                        \n                        \n                            RolesModule\n                        \n                        \n                            SubcribersModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { AuthService } from './auth/auth.service';\nimport { AuthModule } from './auth/auth.module';\nimport { JwtService } from '@nestjs/jwt';\nimport { JwtAuthGuard } from './auth/jwt-auth.guard';\nimport { APP_GUARD } from '@nestjs/core';\nimport { softDeletePlugin } from 'soft-delete-plugin-mongoose';\nimport { CompaniesModule } from './companies/companies.module';\nimport { User, UserSchema } from './users/schemas/user.schema';\nimport { JobsModule } from './jobs/jobs.module';\nimport { FileModule } from './file/file.module';\nimport { ResumesModule } from './resumes/resumes.module';\nimport { PermissionsModule } from './permissions/permissions.module';\nimport { RolesModule } from './roles/roles.module';\nimport { DatabasesModule } from './databases/databases.module';\nimport { SubcribersModule } from './subcribers/subcribers.module';\nimport { MailModule } from './mail/mail.module';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { ThrottlerGuard, ThrottlerModule } from '@nestjs/throttler';\nimport { HealthModule } from './health/health.module';\n\n@Module({\n  imports: [\n    ScheduleModule.forRoot(),\n\n    ThrottlerModule.forRoot([\n      {\n        ttl: 60,\n        limit: 10,\n      },\n    ]),\n\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: '.env',\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGO_URL'),\n        connectionFactory: (connection) => {\n          connection.plugin(softDeletePlugin);\n          return connection;\n        },\n      }),\n      inject: [ConfigService],\n    }),\n\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n\n    UsersModule,\n    AuthModule,\n    CompaniesModule,\n    JobsModule,\n    FileModule,\n    ResumesModule,\n    PermissionsModule,\n    RolesModule,\n    DatabasesModule,\n    SubcribersModule,\n    MailModule,\n    HealthModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService, AuthService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                handleGetAccount\n                            \n                            \n                                    \n                                    \n                                    \n                                handleRefreshToken\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    Async\n                                logOut\n                            \n                            \n                                    \n                                    \n                                    \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        handleGetAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleGetAccount(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Get account infomation')@Get('/account')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        handleRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRefreshToken(req: Request, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('Get User by refresh token')@Get('refresh')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(req, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@UseGuards(LocalAuthGuard)@Throttle({default: undefined})@UseGuards(MyThrottlerGuard)@ResponseMessage('User Login')@Post('login')@ApiBody({type: UserLoginDto})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        logOut\n                        \n                    \n                \n            \n            \n                \n                        \n                    logOut(response: Response, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Get('logout')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(createDTO: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('Register a new user')@Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDTO\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Public, ResponseMessage, User } from './../decorator/customize';\nimport { ConfigService } from '@nestjs/config';\nimport {\n  Controller,\n  Get,\n  Post,\n  Render,\n  UseGuards,\n  Body,\n  Res,\n  Req,\n} from '@nestjs/common';\nimport { AppService } from 'src/app.service';\nimport { LocalAuthGuard } from './local-auth.guard';\nimport { AuthService } from './auth.service';\nimport { RegisterUserDto, UserLoginDto } from 'src/users/dto/create-user.dto';\nimport { Request, Response } from 'express';\nimport { IUser } from 'src/users/user.interface';\nimport { RolesService } from 'src/roles/roles.service';\nimport { Throttle, ThrottlerGuard } from '@nestjs/throttler';\nimport { MyThrottlerGuard } from './throttle/throttle.mess';\nimport { ApiBody, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    //inject từ service này sang service khác phải import module vào service đó\n\n    private authService: AuthService,\n    private roleService: RolesService,\n  ) {}\n\n  @Public()\n  @UseGuards(LocalAuthGuard)\n  //rate limit 3 in 60s\n  @Throttle({ default: { limit: 3, ttl: 30000 } })\n  @UseGuards(MyThrottlerGuard)\n  @ResponseMessage('User Login')\n  @Post('login')\n  @ApiBody({ type: UserLoginDto })\n  async login(@Req() req, @Res({ passthrough: true }) response: Response) {\n    return this.authService.login(req.user, response);\n  }\n\n  @ResponseMessage('Get account infomation')\n  @Get('/account')\n  async handleGetAccount(@User() user: IUser) {\n    const temp = (await this.roleService.findOne(user.role._id)) as any;\n    user.permission = temp.permission;\n    return { user };\n  }\n\n  @Public()\n  @ResponseMessage('Register a new user')\n  @Post('register')\n  register(@Body() createDTO: RegisterUserDto) {\n    return this.authService.register(createDTO);\n  }\n\n  @Public()\n  @ResponseMessage('Get User by refresh token')\n  @Get('refresh')\n  handleRefreshToken(\n    @Req() req: Request,\n    @Res({ passthrough: true }) response: Response,\n  ) {\n    const refreshToken = req.cookies['refresh_token'];\n\n    return this.authService.processNewToken(refreshToken, response);\n  }\n\n  @UseGuards(LocalAuthGuard)\n  @Get('logout')\n  async logOut(\n    @Res({ passthrough: true }) response: Response,\n    @User() user: IUser,\n  ) {\n    return this.authService.logout(response, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nRolesModule\n\nRolesModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RolesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersService } from 'src/users/users.service';\nimport { UsersModule } from 'src/users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './passport/local.strategy';\nimport { JwtModule, JwtService } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtStrategy } from './passport/jwt.strategy';\nimport ms from 'ms';\nimport { AuthController } from './auth.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserDocument, UserSchema } from 'src/users/schemas/user.schema';\nimport { RolesService } from 'src/roles/roles.service';\nimport { RolesModule } from 'src/roles/roles.module';\nimport { APP_GUARD } from '@nestjs/core';\n\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule,\n    ConfigModule,\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n\n    JwtModule.registerAsync({\n      global: true,\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => {\n        const secret = configService.get('JWT_ACCESS_TOKEN_SECRET');\n        console.log(\n          'process.env.JWT_ACCESS_TOKEN_SECRET:',\n          process.env.JWT_ACCESS_TOKEN_SECRET,\n        );\n\n        return {\n          secret,\n          signOptions: {\n            expiresIn: ms(configService.get('JWT_ACCESS_EXPIRE')),\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n    RolesModule,\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createRefreshToken\n                            \n                            \n                                logout\n                            \n                            \n                                processNewToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService, userModel: SoftDeleteModel, congfiService: ConfigService, roleService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        congfiService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: IUser, response: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(user: RegisterUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:167\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processNewToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:109\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Res } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { genSaltSync, hashSync } from 'bcryptjs';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { RegisterUserDto } from 'src/users/dto/create-user.dto';\nimport { User, UserDocument } from 'src/users/schemas/user.schema';\nimport { IUser } from 'src/users/user.interface';\nimport { UsersService } from 'src/users/users.service';\nimport ms from 'ms';\nimport { Response } from 'express';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n    @InjectModel(User.name) private userModel: SoftDeleteModel,\n    private congfiService: ConfigService,\n\n    private roleService: RolesService,\n  ) {}\n  //username va pass là 2 tham số thư viện passport trả về\n  async validateUser(username: string, pass: string): Promise {\n    const user = await this.usersService.findOneByUsername(username);\n    if (user) {\n      const isValid = await this.usersService.isValidPassword(\n        pass,\n        user.password,\n      );\n\n      if (isValid === true) {\n        const userRole = user.role as unknown as { _id: string; name: string };\n        const temp = await this.roleService.findOne(userRole._id);\n\n        const roleClean = {\n          _id: temp._id,\n          name: temp.name,\n        };\n\n        const objUser = {\n          ...user.toObject(),\n          role: roleClean,\n          permission: temp?.permission ?? [],\n        };\n\n        return objUser;\n      }\n    }\n    return null;\n  }\n\n  async login(user: IUser, response: Response) {\n    const { _id, name, email, role, permission } = user;\n    const payload = {\n      sub: 'token login',\n      iss: 'from server',\n      _id,\n      name,\n      email,\n      role,\n    };\n    const refresh_token = this.createRefreshToken(payload);\n    //update user with refresh token\n    await this.usersService.updateUserToken(refresh_token, _id);\n    //set refresh_token as cookie\n    const refreshExpire = this.congfiService.get(\n      'JWT_REFRESH_EXPIRE',\n    ) as ms.StringValue;\n\n    response.cookie('refresh_token', refresh_token, {\n      httpOnly: true,\n      maxAge: ms(refreshExpire),\n    });\n    return {\n      access_token: this.jwtService.sign(payload),\n      user: {\n        _id,\n        name,\n        email,\n        role,\n        permission,\n      },\n    };\n  }\n\n  async register(user: RegisterUserDto) {\n    let newUser = await this.usersService.register(user);\n    newUser = null;\n    return {\n      _id: newUser?._id,\n      createAt: newUser?.createdAt,\n    };\n  }\n\n  createRefreshToken = (payload) => {\n    const refresh_token = this.jwtService.sign(payload, {\n      secret: this.congfiService.get('JWT_REFRESH_TOKEN_SECRET'),\n      expiresIn:\n        ms(this.congfiService.get('JWT_REFRESH_EXPIRE') as ms.StringValue) /\n        1000,\n    });\n\n    return refresh_token;\n  };\n\n  processNewToken = async (refreshToken: string, response: Response) => {\n    try {\n      this.jwtService.verify(refreshToken, {\n        secret: this.congfiService.get('JWT_REFRESH_TOKEN_SECRET'),\n      });\n\n      //todo\n      const user = await this.usersService.findUserByToken(refreshToken);\n      if (user) {\n        //update refresh_token\n        const { _id, name, email, role } = user;\n        const payload = {\n          sub: 'token login',\n          iss: 'from server',\n          _id,\n          name,\n          email,\n          role,\n        };\n        const refresh_token = this.createRefreshToken(payload);\n\n        response.clearCookie('refresh_token');\n        //update user with refresh token\n        await this.usersService.updateUserToken(refresh_token, _id.toString());\n        //set refresh_token as cookie\n        const refreshExpire = this.congfiService.get(\n          'JWT_REFRESH_EXPIRE',\n        ) as ms.StringValue;\n        //fetch user role\n        const userRole = user.role as unknown as { _id: string; name: string };\n        const temp = await this.roleService.findOne(userRole._id);\n\n        response.cookie('refresh_token', refresh_token, {\n          httpOnly: true,\n          maxAge: ms(refreshExpire),\n        });\n        return {\n          access_token: this.jwtService.sign(payload),\n          user: {\n            _id,\n            name,\n            email,\n            role,\n            permission: temp?.permission ?? [],\n          },\n        };\n      } else {\n        throw new BadRequestException(\n          `Refresh token không hợp lệ, vui lòng login!`,\n        );\n      }\n    } catch (error) {\n      throw new BadRequestException(\n        `Refresh token không hợp lệ, vui lòng login `,\n      );\n    }\n  };\n\n  logout = async (reponse: Response, user: IUser) => {\n    await this.usersService.updateUserToken('', user._id);\n    reponse.clearCookie('refresh_token');\n    return 'ok';\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CompaniesController.html":{"url":"controllers/CompaniesController.html","title":"controller - CompaniesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CompaniesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                companies\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get()@ResponseMessage('Fetch List Company paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { IUser } from 'src/users/user.interface';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('companies')\n@Controller('companies')\nexport class CompaniesController {\n  constructor(private readonly companiesService: CompaniesService) {}\n\n  @Post()\n  create(@Body() createCompanyDto: CreateCompanyDto, @User() user: IUser) {\n    console.log('.... user info:', user);\n    return this.companiesService.create(createCompanyDto, user);\n  }\n\n  @Public()\n  @Get()\n  @ResponseMessage('Fetch List Company paginate')\n  findAll(\n    @Query('current') current: number,\n    @Query('pageSize') pageSize: number,\n    @Query() qs: any,\n  ) {\n    const queryParamsForAqp = { ...qs }; // Tạo một bản sao\n    delete queryParamsForAqp.current; // Xóa current\n    delete queryParamsForAqp.pageSize; // Xóa pageSize\n\n    return this.companiesService.findAll(current, pageSize, queryParamsForAqp);\n  }\n\n  @Public()\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.companiesService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateCompanyDto: UpdateCompanyDto,\n    @User() user: IUser,\n  ) {\n    return this.companiesService.update(id, updateCompanyDto, user);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.companiesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompaniesModule.html":{"url":"modules/CompaniesModule.html","title":"module - CompaniesModule","body":"\n                   \n\n\n\n\n    Modules\n    CompaniesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\n\nCompaniesService\n\nCompaniesService\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/companies/companies.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompaniesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CompaniesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { MongooseModule } from '@nestjs/mongoose';\nimport { Module } from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CompaniesController } from './companies.controller';\nimport { Company, CompanySchema } from './schemas/company.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Company.name, schema: CompanySchema }]),\n  ],\n  controllers: [CompaniesController],\n  providers: [CompaniesService],\n})\nexport class CompaniesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompaniesService.html":{"url":"injectables/CompaniesService.html","title":"injectable - CompaniesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompaniesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(companyModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/companies/companies.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        companyModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectModel } from '@nestjs/mongoose';\nimport { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Company, CompanyDocument } from './schemas/company.schema';\nimport { IUser } from 'src/users/user.interface';\nimport { use } from 'passport';\nimport aqp from 'api-query-params';\nimport { of } from 'rxjs';\n\n@Injectable()\nexport class CompaniesService {\n  constructor(\n    @InjectModel(Company.name)\n    private companyModel: SoftDeleteModel,\n  ) {}\n  create(createCompanyDto: CreateCompanyDto, user: IUser) {\n    return this.companyModel.create({\n      ...createCompanyDto,\n      createBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n  }\n\n  async findAll(current: number, pageSize: number, qs: any) {\n    const { filter, sort, population } = aqp(qs);\n\n    console.log('Final filter for MongoDB:', filter);\n\n    const offset = (+current - 1) * +pageSize;\n    const defaultPageSize = +pageSize || 10;\n\n    const totalItems = await this.companyModel.countDocuments(filter);\n    const totalPages = Math.ceil(totalItems / defaultPageSize);\n\n    const result = await this.companyModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultPageSize)\n      .sort(sort as any)\n      .populate(population)\n      .exec();\n\n    return {\n      meta: {\n        current,\n        pageSize,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  findOne(id: string) {\n    const company = this.companyModel.findOne({ _id: id });\n    if (!company) {\n      throw new BadRequestException('không tìm thấy công ty!');\n    }\n    return company;\n  }\n\n  update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser) {\n    const userUpdate = this.companyModel.updateOne(\n      { _id: id },\n      {\n        ...updateCompanyDto,\n        updateBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return userUpdate;\n  }\n\n  async remove(id: string, user: IUser) {\n    try {\n      await this.companyModel.updateOne(\n        { _id: id },\n        {\n          $set: {\n            deleteBy: {\n              _id: user._id,\n              email: user.email,\n            },\n          },\n        },\n      );\n\n      return await this.companyModel.softDelete({ _id: id });\n    } catch (e) {\n      return `Phát sinh lỗi ${e}`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company.html":{"url":"classes/Company.html","title":"class - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/schemas/company.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                createBy\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deleteAt\n                            \n                            \n                                    \n                                deleteBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isDelete\n                            \n                            \n                                    \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updateBy\n                            \n                            \n                                    \n                                updated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { IsDate, IsEmail, IsNumber, IsString } from 'class-validator';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type CompanyDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Company {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop({ required: true })\n  address: string;\n\n  @Prop()\n  description: string;\n\n  @Prop({ required: true })\n  @Prop()\n  logo: string;\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updated: Date;\n\n  @Prop()\n  isDelete: boolean;\n\n  @Prop()\n  deleteAt: Date;\n\n  @Prop({ type: Object })\n  createBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  updateBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  deleteBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n}\n\nexport const CompanySchema = SchemaFactory.createForClass(Company);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-1.html":{"url":"classes/Company-1.html","title":"class - Company-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n}\n\n//class = object\nexport class CreateUserDto {\n  @IsEmail({}, { message: 'Chưa đúng định dạng Email' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Password không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsNotEmpty({ message: 'Address không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'age không được để trống' })\n  ege: string;\n\n  @IsNotEmpty({ message: 'Gender không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Role không được để trống' })\n  role: string;\n\n  @IsNotEmpty({ message: 'Phone không được để trống' })\n  phone: string;\n\n  @IsObject()\n  @IsNotEmptyObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: string;\n}\n\nexport class RegisterUserDto {\n  @IsEmail({}, { message: 'Chưa đúng định dạng Email' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Password không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsNotEmpty({ message: 'Address không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'age không được để trống' })\n  age: string;\n\n  @IsNotEmpty({ message: 'Gender không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Phone không được để trống' })\n  phone: string;\n\n  @IsNotEmpty({ message: 'Gender không được để trống' })\n  @IsMongoId({ message: 'Role có định dạng MogoId' })\n  role: mongoose.Schema.Types.ObjectId;\n}\n\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'username@gmail.com', description: 'username' })\n  readonly username: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: '123456', description: 'password' })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCompanyDto.html":{"url":"classes/CreateCompanyDto.html","title":"class - CreateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/create-company.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Description không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Logo không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\n\n//class = object\nexport class CreateCompanyDto {\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsNotEmpty({ message: 'Address không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'Description không được để trống' })\n  description: string;\n\n  @IsNotEmpty({ message: 'Logo không được để trống' })\n  logo: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFileDto.html":{"url":"classes/CreateFileDto.html","title":"class - CreateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/file/dto/create-file.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateFileDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateJobDto.html":{"url":"classes/CreateJobDto.html","title":"class - CreateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                endDate\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                isActive\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                level\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                location\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                quantity\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                salary\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                skills\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@Type(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray({message: 'Sai định dạng'})@IsString({each: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@Type(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsBoolean,\n  IsDate,\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { Types } from 'mongoose';\n\nexport class CreateJobDto {\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @IsArray({ message: 'Sai định dạng' })\n  @IsString({ each: true })\n  @IsOptional()\n  skills?: string[];\n\n  @IsString()\n  @IsOptional()\n  quantity?: string;\n\n  @IsString()\n  @IsOptional()\n  description?: string;\n\n  @IsString()\n  @IsOptional()\n  level?: string;\n\n  @IsString()\n  @IsOptional()\n  location?: string;\n\n  @IsString()\n  @IsOptional()\n  salary?: string;\n\n  @IsDate()\n  @Type(() => Date)\n  @IsOptional()\n  startDate?: Date;\n\n  @IsDate()\n  @Type(() => Date)\n  @IsOptional()\n  endDate?: Date;\n\n  @IsBoolean()\n  @IsOptional()\n  isActive?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMailDto.html":{"url":"classes/CreateMailDto.html","title":"class - CreateMailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/dto/create-mail.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateMailDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePermissionDto.html":{"url":"classes/CreatePermissionDto.html","title":"class - CreatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/create-permission.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                    \n                                method\n                            \n                            \n                                    \n                                    \n                                module\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty({message: 'Api path không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty({message: 'method không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty({message: 'Module không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty({message: 'Name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreatePermissionDto {\n  @IsString()\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsString()\n  @IsNotEmpty({ message: 'Api path không được để trống' })\n  apiPath: string;\n\n  @IsString()\n  @IsNotEmpty({ message: 'method không được để trống' })\n  method: string;\n\n  @IsString()\n  @IsNotEmpty({ message: 'Module không được để trống' })\n  module: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateResumeDto.html":{"url":"classes/CreateResumeDto.html","title":"class - CreateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'companyId không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty({message: 'userId không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'jobId không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'status không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'URL không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'userId không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsEmail,\n  IsOptional,\n  IsBoolean,\n  IsArray,\n  ValidateNested,\n  IsDate,\n  IsNotEmpty,\n  IsMongoId,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Jobs } from 'src/jobs/schema/job.schema';\nimport { Resume } from '../schema/resume.schema';\n\n//Khi cần validate 1 array thì tách ra thêm 1 class, nếu trong class có object và muốn validate object đó thì tiếp tục\n//tách object đó ra và validate\nexport class CreateResumeDto {\n  @IsNotEmpty({ message: 'userId không được bỏ trống' })\n  userId: mongoose.Schema.Types.ObjectId;\n\n  @IsEmail()\n  @IsNotEmpty({ message: 'userId không được bỏ trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'URL không được bỏ trống' })\n  url: string;\n\n  @IsNotEmpty({ message: 'status không được bỏ trống' })\n  status: string;\n\n  @IsNotEmpty({ message: 'jobId không được bỏ trống' })\n  jobId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'companyId không được bỏ trống' })\n  companyId: mongoose.Schema.Types.ObjectId;\n}\n\nexport class CreateUserCvDto {\n  @IsNotEmpty({ message: 'URL không được bỏ trống' })\n  url: string;\n\n  @IsNotEmpty({ message: 'status không được bỏ trống' })\n  @IsMongoId({ message: 'companyId is a mongo id' })\n  comapnyId: string;\n\n  @IsNotEmpty({ message: 'jobId không được bỏ trống' })\n  @IsMongoId({ message: 'jobId is a mongo id' })\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                permission\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'description không được để trống'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'isActive không được để trống'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Module không được để trống'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        permission\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'permission không được để trống'})@IsMongoId({each: true, message: 'each permissions là mongo object id'})@IsArray({message: 'permission có định dạng là array'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsMongoId, IsNotEmpty, IsString } from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class CreateRoleDto {\n  @IsNotEmpty({ message: 'Module không được để trống' })\n  @IsString()\n  name: string;\n\n  @IsNotEmpty({ message: 'description không được để trống' })\n  @IsString()\n  description: string;\n\n  @IsNotEmpty({ message: 'isActive không được để trống' })\n  @IsString()\n  isActive: string;\n\n  @IsNotEmpty({ message: 'permission không được để trống' })\n  @IsMongoId({ each: true, message: 'each permissions là mongo object id' })\n  @IsArray({ message: 'permission có định dạng là array' })\n  permission: mongoose.Schema.Types.ObjectId[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSubcriberDto.html":{"url":"classes/CreateSubcriberDto.html","title":"class - CreateSubcriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubcriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subcribers/dto/create-subcriber.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                skills\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'email không được để trống'})@IsString()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subcribers/dto/create-subcriber.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name không được để trống'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subcribers/dto/create-subcriber.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Skill không được để trống'})@IsArray({message: 'permission có định dạng là array'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subcribers/dto/create-subcriber.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsString,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class CreateSubcriberDto {\n  @IsNotEmpty({ message: 'email không được để trống' })\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty({ message: 'name không được để trống' })\n  @IsString()\n  name: string;\n\n  @IsNotEmpty({ message: 'Skill không được để trống' })\n  @IsArray({ message: 'permission có định dạng là array' })\n  @IsString()\n  skills: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCvDto.html":{"url":"classes/CreateUserCvDto.html","title":"class - CreateUserCvDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCvDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                comapnyId\n                            \n                            \n                                    \n                                    \n                                jobId\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        comapnyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'status không được bỏ trống'})@IsMongoId({message: 'companyId is a mongo id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'jobId không được bỏ trống'})@IsMongoId({message: 'jobId is a mongo id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'URL không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsEmail,\n  IsOptional,\n  IsBoolean,\n  IsArray,\n  ValidateNested,\n  IsDate,\n  IsNotEmpty,\n  IsMongoId,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Jobs } from 'src/jobs/schema/job.schema';\nimport { Resume } from '../schema/resume.schema';\n\n//Khi cần validate 1 array thì tách ra thêm 1 class, nếu trong class có object và muốn validate object đó thì tiếp tục\n//tách object đó ra và validate\nexport class CreateResumeDto {\n  @IsNotEmpty({ message: 'userId không được bỏ trống' })\n  userId: mongoose.Schema.Types.ObjectId;\n\n  @IsEmail()\n  @IsNotEmpty({ message: 'userId không được bỏ trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'URL không được bỏ trống' })\n  url: string;\n\n  @IsNotEmpty({ message: 'status không được bỏ trống' })\n  status: string;\n\n  @IsNotEmpty({ message: 'jobId không được bỏ trống' })\n  jobId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'companyId không được bỏ trống' })\n  companyId: mongoose.Schema.Types.ObjectId;\n}\n\nexport class CreateUserCvDto {\n  @IsNotEmpty({ message: 'URL không được bỏ trống' })\n  url: string;\n\n  @IsNotEmpty({ message: 'status không được bỏ trống' })\n  @IsMongoId({ message: 'companyId is a mongo id' })\n  comapnyId: string;\n\n  @IsNotEmpty({ message: 'jobId không được bỏ trống' })\n  @IsMongoId({ message: 'jobId is a mongo id' })\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                ege\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsNotEmptyObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ege\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'age không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Chưa đúng định dạng Email'})@IsNotEmpty({message: 'Email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Gender không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Password không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Phone không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Role không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n}\n\n//class = object\nexport class CreateUserDto {\n  @IsEmail({}, { message: 'Chưa đúng định dạng Email' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Password không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsNotEmpty({ message: 'Address không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'age không được để trống' })\n  ege: string;\n\n  @IsNotEmpty({ message: 'Gender không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Role không được để trống' })\n  role: string;\n\n  @IsNotEmpty({ message: 'Phone không được để trống' })\n  phone: string;\n\n  @IsObject()\n  @IsNotEmptyObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: string;\n}\n\nexport class RegisterUserDto {\n  @IsEmail({}, { message: 'Chưa đúng định dạng Email' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Password không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsNotEmpty({ message: 'Address không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'age không được để trống' })\n  age: string;\n\n  @IsNotEmpty({ message: 'Gender không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Phone không được để trống' })\n  phone: string;\n\n  @IsNotEmpty({ message: 'Gender không được để trống' })\n  @IsMongoId({ message: 'Role có định dạng MogoId' })\n  role: mongoose.Schema.Types.ObjectId;\n}\n\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'username@gmail.com', description: 'username' })\n  readonly username: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: '123456', description: 'password' })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatabasesController.html":{"url":"controllers/DatabasesController.html","title":"controller - DatabasesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatabasesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                databases\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\n\n@Controller('databases')\nexport class DatabasesController {\n  constructor(private readonly databasesService: DatabasesService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabasesModule.html":{"url":"modules/DatabasesModule.html","title":"module - DatabasesModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabasesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\n\nDatabasesService\n\nDatabasesService\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/databases/databases.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabasesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatabasesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Logger, Module } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\nimport { DatabasesController } from './databases.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from 'src/users/schemas/user.schema';\nimport {\n  Permission,\n  PermissionSchema,\n} from 'src/permissions/schema/permission.schema';\nimport { Role, RoleSchema } from 'src/roles/schema/role.schema';\nimport { UsersService } from 'src/users/users.service';\n\n@Module({\n  controllers: [DatabasesController],\n  providers: [DatabasesService, UsersService],\n  imports: [\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n      { name: Permission.name, schema: PermissionSchema },\n      { name: Role.name, schema: RoleSchema },\n    ]),\n  ],\n})\nexport class DatabasesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabasesService.html":{"url":"injectables/DatabasesService.html","title":"injectable - DatabasesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabasesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, permissionModel: SoftDeleteModel, roleModel: SoftDeleteModel, configService: ConfigService, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/databases/databases.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/databases/databases.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DatabasesService.name)\n                    \n                \n                    \n                        \n                                Defined in src/databases/databases.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { UsersService } from 'src/users/users.service';\nimport { ConfigService } from '@nestjs/config';\nimport { Injectable, Logger, OnModuleInit } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport {\n  Permission,\n  PermissionDocument,\n} from 'src/permissions/schema/permission.schema';\nimport { Role, RoleDocument } from 'src/roles/schema/role.schema';\nimport { User, UserDocument } from 'src/users/schemas/user.schema';\nimport { INIT_PERMISSION, ADMIN_ROLE, USER_ROLE } from './sample';\n\n@Injectable()\nexport class DatabasesService implements OnModuleInit {\n  private readonly logger = new Logger(DatabasesService.name);\n\n  constructor(\n    // Model là kiểu cho usermodel\n    @InjectModel(User.name)\n    private userModel: SoftDeleteModel,\n    @InjectModel(Permission.name)\n    private permissionModel: SoftDeleteModel,\n    @InjectModel(Role.name)\n    private roleModel: SoftDeleteModel,\n\n    private configService: ConfigService,\n    private usersService: UsersService,\n  ) {}\n  async onModuleInit() {\n    const isInit = this.configService.get('SHOULD_INIT');\n    if (Boolean(isInit)) {\n      const countUser = await this.userModel.countDocuments({});\n      const countPermission = await this.permissionModel.countDocuments({});\n      const countRole = await this.roleModel.countDocuments({});\n\n      //create permisson\n      if (countPermission === 0) {\n        await this.permissionModel.insertMany(INIT_PERMISSION);\n      }\n\n      //create count\n      if (countUser === 0) {\n        const permission = await this.permissionModel.find({}).select('_id');\n        await this.roleModel.insertMany([\n          {\n            name: ADMIN_ROLE,\n            description: 'Admin full quyền',\n            isActive: true,\n            permissions: permission,\n          },\n          {\n            name: USER_ROLE,\n            description: 'Người dùng/ ứng viên sử dụng hệ thống',\n            isActive: true,\n            permissions: [], //không set quyền, chỉ cần add ROLE,\n          },\n        ]);\n      }\n\n      if (countUser === 0) {\n        const adminRole = await this.roleModel.findOne({ name: ADMIN_ROLE });\n        const userRole = await this.userModel.findOne({ name: USER_ROLE });\n\n        await this.userModel.insertMany([\n          {\n            name: \"I'm admin\",\n            email: 'admin@gmail.com',\n            password: this.usersService.hashPassword(\n              this.configService.get('INIT_PASSWORD'),\n            ),\n            age: 69,\n            gender: 'MALE',\n            address: 'VietNam',\n            role: adminRole?._id,\n          },\n          {\n            name: \"I'm nomal user\",\n            email: 'user@gmail.com',\n            password: this.usersService.hashPassword(\n              this.configService.get('INIT_PASSWORD'),\n            ),\n            age: 69,\n            gender: 'MALE',\n            address: 'VietNam',\n            role: userRole?._id,\n          },\n          {\n            name: \"I'm Vu Hoang Huy\",\n            email: 'huyvu@gmail.com',\n            password: this.usersService.hashPassword(\n              this.configService.get('INIT_PASSWORD'),\n            ),\n            age: 69,\n            gender: 'MALE',\n            address: 'VietNam',\n            role: adminRole?._id,\n          },\n        ]);\n\n        if (countPermission > 0 && countRole > 0 && countUser > 0) {\n          this.logger.log('>>>>> ALREADY INIT SAMPLE DATA ....');\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/file/entities/file.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class File {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FileController.html":{"url":"controllers/FileController.html","title":"controller - FileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/file/file.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/file/file.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/file/file.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/file/file.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateFileDto: UpdateFileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/file/file.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('upload')@ResponseMessage('Upload signle file')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/file/file.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { file: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpStatus,\n  Param,\n  ParseFilePipeBuilder,\n  Patch,\n  Post,\n  UploadedFile,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { UpdateFileDto } from './dto/update-file.dto';\nimport { FileService } from './file.service';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { Public, ResponseMessage } from 'src/decorator/customize';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('files')\n@Controller('files')\nexport class FileController {\n  constructor(private readonly fileService: FileService) {}\n\n  @Public()\n  @Post('upload')\n  @ResponseMessage('Upload signle file')\n  @UseInterceptors(FileInterceptor('fileUpload'))\n  uploadFile(\n    @UploadedFile(\n      new ParseFilePipeBuilder()\n        .addFileTypeValidator({\n          fileType:\n            /^(image\\/jpeg|image\\/jpg|image\\/png|image\\/gif|text\\/plain|application\\/pdf|application\\/msword|application\\/vnd\\.openxmlformats-officedocument\\.wordprocessingml\\.document)$/i,\n        })\n        .addMaxSizeValidator({\n          maxSize: 1 * 1024 * 1024,\n        })\n        .build({\n          errorHttpStatusCode: HttpStatus.UNPROCESSABLE_ENTITY,\n        }),\n    )\n    file: Express.Multer.File,\n  ) {\n    return { file: file.filename };\n  }\n\n  @Get()\n  findAll() {\n    return this.fileService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.fileService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateFileDto: UpdateFileDto) {\n    return this.fileService.update(+id, updateFileDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.fileService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileModule.html":{"url":"modules/FileModule.html","title":"module - FileModule","body":"\n                   \n\n\n\n\n    Modules\n    FileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FileModule\n\n\n\ncluster_FileModule_providers\n\n\n\n\nFileService\n\nFileService\n\n\n\nFileModule\n\nFileModule\n\nFileModule -->\n\nFileService->FileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/file/file.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FileService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FileController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FileService } from './file.service';\nimport { FileController } from './file.controller';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { MulterConfigService } from './multer.config';\n\n@Module({\n  controllers: [FileController],\n  providers: [FileService],\n  imports: [\n    MulterModule.registerAsync({\n      imports: [ConfigModule],\n      useClass: MulterConfigService,\n    }),\n  ],\n})\nexport class FileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/file/file.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createFileDto: CreateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/file/file.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createFileDto\n                                            \n                                                            CreateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/file/file.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/file/file.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/file/file.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateFileDto: UpdateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/file/file.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\n\n@Injectable()\nexport class FileService {\n  create(createFileDto: CreateFileDto) {\n    return 'This action adds a new file';\n  }\n\n  findAll() {\n    return `This action returns all file`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} file`;\n  }\n\n  update(id: number, updateFileDto: UpdateFileDto) {\n    return `This action updates a #${id} file`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} file`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in src/health/health.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport {\n  HealthCheckService,\n  MongooseHealthIndicator,\n  HealthCheck,\n  HealthCheckResult,\n} from '@nestjs/terminus';\nimport { Public } from 'src/decorator/customize';\n\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private healthCheck: HealthCheckService,\n    private mongooseHealth: MongooseHealthIndicator,\n  ) {}\n\n  //Devops Promtheus vs grafana\n  @Get()\n  @Public()\n  @HealthCheck()\n  async check(): Promise {\n    return this.healthCheck.check([\n      () => this.mongooseHealth.pingCheck('mongoDB'),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HealthController } from './health.controller';\nimport { TerminusModule } from '@nestjs/terminus';\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permission\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permission\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permission:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n  _id: string;\n  name: string;\n  email: string;\n  role: { _id: string; name: string };\n  permission?: { _id: string; name: string; apiPath: string; module: string }[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Jobs.html":{"url":"classes/Jobs.html","title":"class - Jobs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Jobs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/schema/job.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deleteAt\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                endDate\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDelete\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                startDate\n                            \n                            \n                                    \n                                updated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Company'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { IsDate, IsEmail, IsNumber, IsString } from 'class-validator';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type JobsDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Jobs {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop()\n  skills: string[];\n\n  @Prop()\n  quantity: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  level: string;\n\n  @Prop()\n  location: string;\n\n  @Prop()\n  salary: string;\n\n  @Prop()\n  startDate: Date;\n\n  @Prop()\n  endDate: Date;\n\n  @Prop()\n  isActive: boolean;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'Company' })\n  company: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    logo: string;\n  };\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updated: Date;\n\n  @Prop()\n  isDelete: boolean;\n\n  @Prop()\n  deleteAt: Date;\n}\n\nexport const JobsSchema = SchemaFactory.createForClass(Jobs);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JobsController.html":{"url":"controllers/JobsController.html","title":"controller - JobsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JobsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                jobs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards()@ResponseMessage('Create Job Success')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get()@ResponseMessage('Fetch List Jobs paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':id')@ResponseMessage('Fetch List a Jobs')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@UseGuards()@ResponseMessage('Update Job Success')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseInterceptors,\n  UseGuards,\n  Query,\n} from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { ResponseMessage, User, Public } from 'src/decorator/customize';\nimport { IUser } from 'src/users/user.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('jobs')\n@Controller('jobs')\nexport class JobsController {\n  constructor(private readonly jobsService: JobsService) {}\n\n  @Post()\n  @UseGuards()\n  @ResponseMessage('Create Job Success')\n  create(@Body() createJobDto: CreateJobDto, @User() user: IUser) {\n    return this.jobsService.create(createJobDto, user);\n  }\n\n  @Public()\n  @Get()\n  @ResponseMessage('Fetch List Jobs paginate')\n  findAll(\n    @Query('current') current: number,\n    @Query('pageSize') pageSize: number,\n    @Query() qs: any,\n  ) {\n    const queryParamsForAqp = { ...qs }; // Tạo một bản sao\n    delete queryParamsForAqp.current; // Xóa current\n    delete queryParamsForAqp.pageSize; // Xóa pageSize\n\n    return this.jobsService.findAll(current, pageSize, queryParamsForAqp);\n  }\n\n  @Public()\n  @Get(':id')\n  @ResponseMessage('Fetch List a Jobs')\n  findOne(@Param('id') id: string) {\n    return this.jobsService.findOne(id);\n  }\n\n  @Patch(':id')\n  @UseGuards()\n  @ResponseMessage('Update Job Success')\n  update(\n    @Param('id') id: string,\n    @Body() updateJobDto: UpdateJobDto,\n    @User() user: IUser,\n  ) {\n    return this.jobsService.update(id, updateJobDto, user);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.jobsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobsModule.html":{"url":"modules/JobsModule.html","title":"module - JobsModule","body":"\n                   \n\n\n\n\n    Modules\n    JobsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_exports\n\n\n\ncluster_JobsModule_providers\n\n\n\n\nJobsService \n\nJobsService \n\n\n\nJobsModule\n\nJobsModule\n\nJobsService  -->\n\nJobsModule->JobsService \n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/jobs/jobs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JobsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JobsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Jobs } from './schema/job.schema';\nimport { Module } from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { JobsController } from './jobs.controller';\nimport { JobsSchema } from './schema/job.schema';\nimport { MongooseModule, Schema } from '@nestjs/mongoose';\nimport { Company, CompanySchema } from 'src/companies/schemas/company.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Company.name, schema: CompanySchema },\n      { name: Jobs.name, schema: JobsSchema },\n    ]),\n  ],\n  controllers: [JobsController],\n  providers: [JobsService],\n  exports: [JobsService],\n})\nexport class JobsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jobModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/jobs/jobs.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jobModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Jobs, JobsDocument } from './schema/job.schema';\nimport { IUser } from 'src/users/user.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport aqp from 'api-query-params';\nimport { isValidObjectId } from 'mongoose';\n\n@Injectable()\nexport class JobsService {\n  constructor(\n    @InjectModel(Jobs.name)\n    private jobModel: SoftDeleteModel,\n  ) {}\n  async create(createJobDto: CreateJobDto, user: IUser) {\n    const job = await this.jobModel.create({\n      ...createJobDto,\n      company: {\n        _id: user._id,\n        name: user.name,\n      },\n    });\n    return {\n      _id: job._id,\n      createdAt: job.createdAt,\n    };\n  }\n\n  async findAll(current: number, pageSize: number, qs: string) {\n    const { filter, sort, population } = aqp(qs);\n\n    delete filter.page;\n    delete filter.pageSize;\n\n    const offset = (+current - 1) * +pageSize;\n    const defualtpageSize = +pageSize ? +pageSize : 10;\n\n    const totalItems = (await this.jobModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defualtpageSize);\n\n    const result = await this.jobModel\n      .find(filter)\n      .skip(offset)\n      .limit(defualtpageSize)\n      .sort(sort as any)\n      .populate(population)\n      .exec();\n    return {\n      meta: {\n        current: current,\n        pageSize: pageSize,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    if (!isValidObjectId(id)) {\n      throw new BadRequestException('ID không hợp lệ');\n    }\n\n    const job = await this.jobModel.findOne({ _id: id });\n    if (!job) {\n      throw new BadRequestException('Không tìm thấy');\n    }\n    return job;\n  }\n\n  update(id: string, updateJobDto: UpdateJobDto, user: IUser) {\n    const jobUpdate = this.jobModel.updateOne(\n      { _id: id },\n      {\n        ...updateJobDto,\n        updateBy: {\n          _id: user._id,\n          name: user.name,\n        },\n      },\n    );\n    return jobUpdate;\n  }\n\n  async remove(id: string, user: IUser) {\n    try {\n      await this.jobModel.updateOne(\n        { _id: id },\n        {\n          $set: {\n            _id: user._id,\n            name: user.name,\n          },\n        },\n      );\n      return this.jobModel.softDelete({ _id: id });\n    } catch (error) {\n      return `phát sinh lỗi ${error}`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-auth.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth.guard.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info, context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth.guard.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Request } from 'express';\nimport {\n  ExecutionContext,\n  ForbiddenException,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { IS_PUBLIC_KEY, IS_PUBLIC_PERMISSION } from 'src/decorator/customize';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n\n  //check permissions\n  handleRequest(err, user, info, context: ExecutionContext) {\n    const request: Request = context.switchToHttp().getRequest();\n\n    const isSkipPermission = this.reflector.getAllAndOverride(\n      IS_PUBLIC_PERMISSION,\n      [context.getHandler(), context.getClass()],\n    );\n\n    if (err || !user) {\n      throw (\n        err ||\n        new UnauthorizedException('Token không hợp lệ hoặc không có token')\n      );\n    }\n\n    const targetMethod = request.method; // ví dụ: GET, POST\n    const targetEndpoint = request.baseUrl + request.route.path; // ví dụ: /users\n\n    const permissions = user?.permission ?? []; // danh sách quyền được cấp\n    // So sánh method và apipath của request với từng permission\n    // Nếu không có permission khớp → ném lỗi ForbiddenException\n    const isExist = permissions.find(\n      (p) =>\n        p.method === targetMethod &&\n        '/' + p.apiPath.replace(/^\\/+/, '') === targetEndpoint,\n    );\n\n    if (\n      !isExist &&\n      !targetEndpoint.startsWith('/api/v1/auth') &&\n      !isSkipPermission\n    ) {\n      throw new ForbiddenException('Bạn không có quyền để truy cập API này');\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, roleService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/jwt.strategy.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConfigService } from '@nestjs/config';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { IUser } from 'src/users/user.interface';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private configService: ConfigService,\n    private roleService: RolesService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n    });\n  }\n\n  async validate(payload: IUser) {\n    //payload chính là nội dung JWT sau khi giải mã (decode)\n    const { _id, name, email, role } = payload;\n    //cần gán thêm permissión vào req.user\n    const userRole = role as unknown as { _id: string; name: string };\n    const temp = (await this.roleService.findOne(userRole._id)).toObject();\n\n    //req.user\n    return {\n      _id,\n      name,\n      email,\n      role,\n      permission: temp?.permission ?? [],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/local.strategy.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException('Username/password không hợp lệ');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Mail.html":{"url":"classes/Mail.html","title":"class - Mail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Mail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/entities/mail.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Mail {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MailController.html":{"url":"controllers/MailController.html","title":"controller - MailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                mail\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        sendMail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMail()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('send')@Public()@ResponseMessage('Send test email')@Cron('* 0 0 * * 0')\n                \n            \n\n                    \n                        \n                            Defined in src/mail/mail.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport { CreateMailDto } from './dto/create-mail.dto';\nimport { UpdateMailDto } from './dto/update-mail.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { MailService } from './mail.service';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Jobs, JobsDocument } from 'src/jobs/schema/job.schema';\nimport {\n  Subcriber,\n  SubcriberDocument,\n} from 'src/subcribers/schema/subcriber.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('mail')\n@Controller('mail')\nexport class MailController {\n  constructor(\n    private readonly mailService: MailService,\n    private readonly mailerService: MailerService,\n    @InjectModel(Subcriber.name)\n    private readonly subcriberModel: SoftDeleteModel,\n    @InjectModel(Jobs.name)\n    private readonly jobModel: SoftDeleteModel,\n  ) {}\n\n  @Get('send')\n  @Public()\n  @ResponseMessage('Send test email')\n  @Cron('* 0 0 * * 0') // 0h00 am every sunday\n  public async sendMail(): Promise {\n    const subcribers = await this.subcriberModel.find({});\n    for (const subs of subcribers) {\n      const subsSkills = subs.skills;\n      //  Toán tử $in trả về các document mà trường (field) có ít nhất một giá trị khớp với một phần tử trong mảng\n      const jobWithMathchingSkills = await this.jobModel.find({\n        skills: { $in: subsSkills },\n      });\n\n      if (jobWithMathchingSkills?.length) {\n        const jobs = jobWithMathchingSkills.map((item) => {\n          return {\n            name: item.name || 'No name',\n            company: item.company?.name || 'Unknown',\n            salary: `${String(item.salary).replace(\n              /\\B(?=(\\d{3})+(?!\\d))/g,\n              ',',\n            )} đ`,\n            skills: item.skills || [],\n          };\n        });\n\n        console.log('>>>> Jobs for email:', jobs);\n\n        await this.mailerService.sendMail({\n          to: 'vuhuy1262@gmail.com',\n          from: 'noreply@nestjs.com',\n          subject: 'Testing Nest MailerModule ✔',\n          text: 'welcome',\n          template: 'register',\n          context: {\n            name: subs.name,\n            jobs,\n          },\n        });\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_imports\n\n\n\ncluster_MailModule_providers\n\n\n\n\nJobsModule\n\nJobsModule\n\n\n\nMailModule\n\nMailModule\n\nMailModule -->\n\nJobsModule->MailModule\n\n\n\n\n\nSubcribersModule\n\nSubcribersModule\n\nMailModule -->\n\nSubcribersModule->MailModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MailController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            JobsModule\n                        \n                        \n                            SubcribersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { MailController } from './mail.controller';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from 'src/users/schemas/user.schema';\nimport { join } from 'path';\nimport {\n  Subcriber,\n  SubcriberSchema,\n} from 'src/subcribers/schema/subcriber.schema';\nimport { Jobs, JobsSchema } from 'src/jobs/schema/job.schema';\nimport { JobsModule } from 'src/jobs/jobs.module';\nimport { SubcribersModule } from 'src/subcribers/subcribers.module';\nimport { Company, CompanySchema } from 'src/companies/schemas/company.schema';\n\n@Module({\n  controllers: [MailController],\n  providers: [MailService],\n  imports: [\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n    MongooseModule.forFeature([\n      { name: Subcriber.name, schema: SubcriberSchema },\n      { name: Jobs.name, schema: JobsSchema },\n      { name: Company.name, schema: CompanySchema },\n    ]),\n    JobsModule,\n    SubcribersModule,\n\n    MailerModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        transport: {\n          host: configService.get('SENDER_EMAIL'),\n          port: 587,\n          secure: false,\n          logger: true,\n          auth: {\n            user: configService.get('EMAIL_AUTH_USER'),\n            pass: configService.get('EMAIL_AUTH_PASS'),\n          },\n        },\n        defaults: {\n          from: '\"No Reply\" ',\n        },\n        template: {\n          dir: join(__dirname, 'templates'),\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true,\n          },\n        },\n        preview: configService.get('EMAIL_PREVIEW'),\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, mailService: MailerService)\n                    \n                \n                        \n                            \n                                Defined in src/mail/mail.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createMailDto: CreateMailDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createMailDto\n                                            \n                                                            CreateMailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateMailDto: UpdateMailDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateMailDto\n                                            \n                                                            UpdateMailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateMailDto } from './dto/create-mail.dto';\nimport { UpdateMailDto } from './dto/update-mail.dto';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { User, UserDocument } from 'src/users/schemas/user.schema';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { UsersService } from 'src/users/users.service';\n\n@Injectable()\nexport class MailService {\n  constructor(\n    @InjectModel(User.name) private userModel: SoftDeleteModel,\n    private mailService: MailerService,\n  ) {}\n  create(createMailDto: CreateMailDto) {\n    return 'This action adds a new mail';\n  }\n\n  findAll() {\n    return `This action returns all mail`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} mail`;\n  }\n\n  update(id: number, updateMailDto: UpdateMailDto) {\n    return `This action updates a #${id} mail`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} mail`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterConfigService.html":{"url":"injectables/MulterConfigService.html","title":"injectable - MulterConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MulterConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/file/multer.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMulterOptions\n                            \n                            \n                                ensureExists\n                            \n                            \n                                getRootPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMulterOptions\n                        \n                    \n                \n            \n            \n                \ncreateMulterOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/file/multer.config.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     MulterModuleOptions\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ensureExists\n                        \n                    \n                \n            \n            \n                \nensureExists(targetDirectory: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/file/multer.config.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                targetDirectory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRootPath\n                        \n                    \n                \n            \n            \n                \ngetRootPath()\n                \n            \n\n\n                    \n                        \n                            Defined in src/file/multer.config.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {\n  MulterOptionsFactory,\n  MulterModuleOptions,\n} from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n  getRootPath(): string {\n    return process.cwd();\n  }\n\n  ensureExists(targetDirectory: string) {\n    const fullPath = path.resolve(this.getRootPath(), targetDirectory);\n    if (!fs.existsSync(fullPath)) {\n      fs.mkdirSync(fullPath, { recursive: true });\n      console.log(`Created directory: ${fullPath}`);\n    }\n  }\n\n  createMulterOptions(): MulterModuleOptions {\n    return {\n      storage: diskStorage({\n        destination: (req, file, cb) => {\n          // Lấy folder_type từ header hoặc dùng \"default\"\n          const folder = req?.headers?.['folder_type']?.toString() ?? 'default';\n          const uploadPath = `public/images/${folder}`;\n          this.ensureExists(uploadPath);\n          cb(null, path.join(this.getRootPath(), uploadPath));\n        },\n        filename: (req, file, cb) => {\n          const extName = path.extname(file.originalname);\n          const baseName = path.basename(file.originalname, extName);\n          const timestamp = Date.now();\n          const finalName = `${baseName}-${timestamp}${extName}`;\n          cb(null, finalName);\n        },\n      }),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyThrottlerGuard.html":{"url":"classes/MyThrottlerGuard.html","title":"class - MyThrottlerGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyThrottlerGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/throttle/throttle.mess.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ThrottlerGuard\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                throwThrottlingException\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        throwThrottlingException\n                        \n                    \n                \n            \n            \n                \n                        \n                    throwThrottlingException()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/throttle/throttle.mess.ts:4\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ThrottlerException, ThrottlerGuard } from '@nestjs/throttler';\n\nexport class MyThrottlerGuard extends ThrottlerGuard {\n  protected throwThrottlingException(): Promise {\n    throw new ThrottlerException(\n      'Tốc độ quá nhanh! Hãy để trang tải xong trước nhé.',\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Permission.html":{"url":"classes/Permission.html","title":"class - Permission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/schema/permission.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                createBy\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deleteAt\n                            \n                            \n                                    \n                                deleteBy\n                            \n                            \n                                    \n                                isDelete\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updateBy\n                            \n                            \n                                    \n                                updated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { IsDate, IsEmail, IsNumber, IsString } from 'class-validator';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Company } from 'src/companies/schemas/company.schema';\nimport { Jobs } from 'src/jobs/schema/job.schema';\n\nexport type PermissionDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Permission {\n  @Prop()\n  name: string;\n\n  @Prop()\n  apiPath: string;\n\n  @Prop()\n  method: string;\n\n  @Prop()\n  module: string;\n\n  @Prop({ type: Object })\n  createBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updateBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deleteBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updated: Date;\n\n  @Prop()\n  isDelete: boolean;\n\n  @Prop()\n  deleteAt: Date;\n}\n\nexport const PermissionSchema = SchemaFactory.createForClass(Permission);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PermissionsController.html":{"url":"controllers/PermissionsController.html","title":"controller - PermissionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PermissionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                permissions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch List Permission paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch one Permission completed')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete Permission completed')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, user: IUser, updatePermissionDto: UpdateCompanyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update Permission completed')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { UpdateCompanyDto } from './../companies/dto/update-company.dto';\nimport {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { IUser } from 'src/users/user.interface';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('permissions')\n@Controller('permissions')\nexport class PermissionsController {\n  constructor(private readonly permissionsService: PermissionsService) {}\n\n  @Post()\n  create(\n    @Body() createPermissionDto: CreatePermissionDto,\n    @User() user: IUser,\n  ) {\n    return this.permissionsService.create(createPermissionDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch List Permission paginate')\n  findAll(\n    @Query('current') current: number,\n    @Query('pageSize') pageSize: number,\n    @Query() qs: any,\n  ) {\n    const queryParamsForAqp = { ...qs }; // Tạo một bản sao\n    delete queryParamsForAqp.current; // Xóa current\n    delete queryParamsForAqp.pageSize; // Xóa pageSize\n\n    return this.permissionsService.findAll(\n      current,\n      pageSize,\n      queryParamsForAqp,\n    );\n  }\n\n  @Get(':id')\n  @ResponseMessage('Fetch one Permission completed')\n  findOne(@Param('id') id: string) {\n    return this.permissionsService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update Permission completed')\n  update(\n    @Param('id') id: string,\n    @User() user: IUser,\n    updatePermissionDto: UpdateCompanyDto,\n  ) {\n    return this.permissionsService.update(id, user, updatePermissionDto);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete Permission completed')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.permissionsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PermissionsModule.html":{"url":"modules/PermissionsModule.html","title":"module - PermissionsModule","body":"\n                   \n\n\n\n\n    Modules\n    PermissionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\n\nPermissionsService\n\nPermissionsService\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/permissions/permissions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PermissionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PermissionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { PermissionsController } from './permissions.controller';\nimport { Permission, PermissionSchema } from './schema/permission.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Permission.name, schema: PermissionSchema },\n    ]),\n  ],\n  controllers: [PermissionsController],\n  providers: [PermissionsService],\n})\nexport class PermissionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionsService.html":{"url":"injectables/PermissionsService.html","title":"injectable - PermissionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(permissionModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/permissions/permissions.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, user: IUser, updatePermissionDto: UpdatePermissionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UpdateCompanyDto } from './../companies/dto/update-company.dto';\nimport { join } from 'path';\nimport { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Permission, PermissionDocument } from './schema/permission.schema';\nimport { IUser } from 'src/users/user.interface';\nimport mongoose from 'mongoose';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class PermissionsService {\n  constructor(\n    @InjectModel(Permission.name)\n    private permissionModel: SoftDeleteModel,\n  ) {}\n  async create(createPermissionDto: CreatePermissionDto, user: IUser) {\n    const { apiPath, name, method, module } = createPermissionDto;\n\n    const existing = await this.permissionModel.findOne({\n      apiPath,\n      method,\n    });\n\n    if (existing) {\n      throw new BadRequestException('Quyền đã tồn tại');\n    }\n\n    await this.permissionModel.create({\n      ...createPermissionDto,\n      createBy: { _id: user._id, email: user.email },\n      createdAt: new Date(),\n    });\n\n    return { _id: user._id, creatAt: new Date() };\n  }\n\n  async findAll(current: number, pageSize: number, qs: string) {\n    const { filter, sort, population, projection } = aqp(qs);\n\n    delete filter.page;\n    delete filter.pageSize;\n\n    const offset = (+current - 1) * +pageSize;\n    const defualtpageSize = +pageSize ? +pageSize : 10;\n\n    const totalItems = (await this.permissionModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defualtpageSize);\n\n    const result = await this.permissionModel\n      .find(filter)\n      .skip(offset)\n      .limit(defualtpageSize)\n      .sort(sort as any)\n      .select(projection as any)\n      .populate(population)\n      .exec();\n    return {\n      meta: {\n        current: current,\n        pageSize: pageSize,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.isValidObjectId(id)) {\n      throw new BadRequestException('Id không tồn tại');\n    }\n    return await this.permissionModel.findOne({ _id: id });\n  }\n\n  update(id: string, user: IUser, updatePermissionDto: UpdatePermissionDto) {\n    const { apiPath, name, method, module } = updatePermissionDto;\n\n    if (!mongoose.isValidObjectId(id)) {\n      throw new BadRequestException('Id không tồn tại');\n    }\n    const updateStatus = this.permissionModel.updateOne(\n      { _id: id },\n      {\n        $set: {\n          apiPath,\n          name,\n          method,\n          module,\n          updateBy: {\n            _id: user._id,\n            email: user.email,\n          },\n        },\n      },\n    );\n    return updateStatus;\n  }\n\n  async remove(id: string, user: IUser) {\n    try {\n      await this.permissionModel.updateOne(\n        { _id: id },\n        {\n          $set: {\n            _id: user._id,\n            name: user.name,\n          },\n        },\n      );\n      return this.permissionModel.softDelete({ _id: id });\n    } catch (error) {\n      return `phát sinh lỗi ${error}`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'age không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Chưa đúng định dạng Email'})@IsNotEmpty({message: 'Email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Gender không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Password không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Phone không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Gender không được để trống'})@IsMongoId({message: 'Role có định dạng MogoId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:83\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n}\n\n//class = object\nexport class CreateUserDto {\n  @IsEmail({}, { message: 'Chưa đúng định dạng Email' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Password không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsNotEmpty({ message: 'Address không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'age không được để trống' })\n  ege: string;\n\n  @IsNotEmpty({ message: 'Gender không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Role không được để trống' })\n  role: string;\n\n  @IsNotEmpty({ message: 'Phone không được để trống' })\n  phone: string;\n\n  @IsObject()\n  @IsNotEmptyObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: string;\n}\n\nexport class RegisterUserDto {\n  @IsEmail({}, { message: 'Chưa đúng định dạng Email' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Password không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsNotEmpty({ message: 'Address không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'age không được để trống' })\n  age: string;\n\n  @IsNotEmpty({ message: 'Gender không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Phone không được để trống' })\n  phone: string;\n\n  @IsNotEmpty({ message: 'Gender không được để trống' })\n  @IsMongoId({ message: 'Role có định dạng MogoId' })\n  role: mongoose.Schema.Types.ObjectId;\n}\n\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'username@gmail.com', description: 'username' })\n  readonly username: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: '123456', description: 'password' })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transfomr.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MASSAGE } from 'src/decorator/customize';\n\nexport interface Response {\n  statusCode: number;\n  message: string;\n  data: T;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  constructor(private reflector: Reflector) {}\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    return next.handle().pipe(\n      map((data) => ({\n        statusCode: context.switchToHttp().getResponse().statusCode,\n        reqId: context.switchToHttp().getRequest().reqId,\n        message:\n          this.reflector.get(RESPONSE_MASSAGE, context.getHandler()) ||\n          '',\n        data: data,\n      })),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Resume.html":{"url":"classes/Resume.html","title":"class - Resume","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Resume\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/schema/resume.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createBy\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deleteAt\n                            \n                            \n                                    \n                                deleteBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                history\n                            \n                            \n                                    \n                                isDelete\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updateBy\n                            \n                            \n                                    \n                                updated\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({ref: undefined, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({ref: undefined, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { IsDate, IsEmail, IsNumber, IsString } from 'class-validator';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Company } from 'src/companies/schemas/company.schema';\nimport { Jobs } from 'src/jobs/schema/job.schema';\n\nexport type ResumeDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Resume {\n  @Prop()\n  userId: mongoose.Schema.Types.ObjectId;\n\n  @Prop({ ref: Jobs.name, type: mongoose.Schema.Types.ObjectId })\n  jobId: mongoose.Schema.Types.ObjectId;\n\n  @Prop({ ref: Company.name, type: mongoose.Schema.Types.ObjectId })\n  company: mongoose.Schema.Types.ObjectId;\n\n  @Prop()\n  email: string;\n\n  @Prop()\n  url: string;\n\n  @Prop()\n  status: string;\n\n  @Prop({ type: mongoose.Schema.Types.Array })\n  history: {\n    status: string;\n    updateAt: Date;\n    updateBy: { _id: mongoose.Schema.Types.ObjectId; email: string };\n  }[];\n\n  @Prop({ type: Object })\n  createBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updateBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deleteBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updated: Date;\n\n  @Prop()\n  isDelete: boolean;\n\n  @Prop()\n  deleteAt: Date;\n}\n\nexport const ResumeSchema = SchemaFactory.createForClass(Resume);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResumeHistoryDto.html":{"url":"classes/ResumeHistoryDto.html","title":"class - ResumeHistoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResumeHistoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                updateAt\n                            \n                            \n                                    \n                                    \n                                updateBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsEmail,\n  IsOptional,\n  IsBoolean,\n  IsArray,\n  ValidateNested,\n  IsDate,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport mongoose from 'mongoose';\n\nclass ResumeHistoryDto {\n  @IsString()\n  status: string;\n\n  @IsDate()\n  @Type(() => Date)\n  updateAt: Date;\n\n  @ValidateNested()\n  @Type(() => Object)\n  updateBy: {\n    _id: mongoose.Types.ObjectId;\n    email: string;\n  };\n}\n\nexport class UpdateResumeDto {\n  @IsOptional()\n  @IsString()\n  userId?: string;\n\n  @IsOptional()\n  @IsEmail()\n  email?: string;\n\n  @IsOptional()\n  @IsString()\n  url?: string;\n\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => ResumeHistoryDto)\n  history?: ResumeHistoryDto[];\n\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => Object)\n  updateBy?: {\n    _id: mongoose.Types.ObjectId;\n    email: string;\n  };\n\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => Object)\n  deleteBy?: {\n    _id: mongoose.Types.ObjectId;\n    email: string;\n  };\n\n  @IsOptional()\n  @IsBoolean()\n  isDelete?: boolean;\n\n  @IsOptional()\n  @IsDate()\n  @Type(() => Date)\n  deleteAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ResumesController.html":{"url":"controllers/ResumesController.html","title":"controller - ResumesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ResumesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                resumes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                getCvByUser\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createResumeDto: CreateUserCvDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createResumeDto\n                                            \n                                                            CreateUserCvDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch List Jobs paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getCvByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCvByUser(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('by-user')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, status: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { CreateResumeDto, CreateUserCvDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/user.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('resumes')\n@Controller('resumes')\nexport class ResumesController {\n  constructor(private readonly resumesService: ResumesService) {}\n\n  @Post()\n  create(@Body() createResumeDto: CreateUserCvDto, @User() user: IUser) {\n    return this.resumesService.create(createResumeDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch List Jobs paginate')\n  findAll(\n    @Query('current') current: number,\n    @Query('pageSize') pageSize: number,\n    @Query() qs: any,\n  ) {\n    const queryParamsForAqp = { ...qs }; // Tạo một bản sao\n    delete queryParamsForAqp.current; // Xóa current\n    delete queryParamsForAqp.pageSize; // Xóa pageSize\n\n    return this.resumesService.findAll(current, pageSize, queryParamsForAqp);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.resumesService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body('status') status: string,\n    @User() user: IUser,\n  ) {\n    return this.resumesService.update(id, status, user);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.resumesService.remove(id, user);\n  }\n\n  @Post('by-user')\n  getCvByUser(@User() user: IUser) {\n    return this.resumesService.getCvByUser(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResumesModule.html":{"url":"modules/ResumesModule.html","title":"module - ResumesModule","body":"\n                   \n\n\n\n\n    Modules\n    ResumesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\n\nResumesService\n\nResumesService\n\n\n\nResumesModule\n\nResumesModule\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resumes/resumes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResumesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ResumesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { ResumesController } from './resumes.controller';\nimport { Resume, ResumeSchema } from './schema/resume.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Resume.name, schema: ResumeSchema }]),\n  ],\n  controllers: [ResumesController],\n  providers: [ResumesService],\n})\nexport class ResumesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResumesService.html":{"url":"injectables/ResumesService.html","title":"injectable - ResumesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResumesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getCvByUser\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resumeModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/resumes/resumes.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resumeModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createResumeCvDto: CreateUserCvDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createResumeCvDto\n                                            \n                                                            CreateUserCvDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCvByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCvByUser(user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, status: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateResumeDto, CreateUserCvDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Resume, ResumeDocument } from './schema/resume.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { IUser } from 'src/users/user.interface';\nimport aqp from 'api-query-params';\nimport { isValidObjectId } from 'mongoose';\n\n@Injectable()\nexport class ResumesService {\n  constructor(\n    @InjectModel(Resume.name)\n    private resumeModel: SoftDeleteModel,\n  ) {}\n  async create(createResumeCvDto: CreateUserCvDto, user: IUser) {\n    const createResume = await this.resumeModel.create({\n      ...createResumeCvDto,\n      email: user.email,\n      status: 'PENDING',\n      userId: user._id,\n      history: [\n        {\n          status: 'PENDING',\n          updateAt: new Date(),\n          updateBy: {\n            _id: user._id,\n            email: user.email,\n          },\n        },\n      ],\n      createBy: { _id: user._id, email: user.email },\n    });\n    return { _id: createResume.id, createAt: createResume.createdAt };\n  }\n\n  async findAll(current: number, pageSize: number, qs: string) {\n    const { filter, sort, population, projection } = aqp(qs);\n\n    delete filter.page;\n    delete filter.pageSize;\n\n    const offset = (+current - 1) * +pageSize;\n    const defualtpageSize = +pageSize ? +pageSize : 10;\n\n    const totalItems = (await this.resumeModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defualtpageSize);\n\n    const result = await this.resumeModel\n      .find(filter)\n      .skip(offset)\n      .limit(defualtpageSize)\n      .sort(sort as any)\n      .select(projection as any)\n      .populate(population)\n      .exec();\n    return {\n      meta: {\n        current: current,\n        pageSize: pageSize,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    if (!isValidObjectId(id)) {\n      throw new BadRequestException('ID không hợp lệ');\n    }\n\n    const resume = await this.resumeModel.findOne({ _id: id });\n    if (!resume) {\n      throw new BadRequestException('Không tìm thấy');\n    }\n    return resume;\n  }\n\n  async update(id: string, status: string, user: IUser) {\n    const updateStatus = await this.resumeModel.updateOne(\n      { _id: id },\n      {\n        $set: {\n          status,\n          updateBy: {\n            _id: user._id,\n            email: user.email,\n          },\n        },\n        //$push đẩy thêm data vào sau data cũ\n        $push: {\n          history: {\n            status: status,\n            updateAt: new Date(),\n            updateBy: {\n              _id: user._id,\n              email: user.email,\n            },\n          },\n        },\n      },\n    );\n    return updateStatus;\n  }\n\n  async remove(id: string, user: IUser) {\n    try {\n      await this.resumeModel.updateOne(\n        { _id: id },\n        {\n          $set: {\n            _id: user._id,\n            name: user.name,\n          },\n        },\n      );\n      return this.resumeModel.softDelete({ _id: id });\n    } catch (error) {\n      return `phát sinh lỗi ${error}`;\n    }\n  }\n\n  async getCvByUser(user: IUser) {\n    return await this.resumeModel\n      .find({\n        userId: user._id,\n      })\n      //-createdAt: lấy gần nhất\n      .sort('-createdAt')\n      .populate([\n        { path: 'companyId', select: { name: 1 } },\n        { path: 'jobId', select: { name: 1 } },\n      ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/schema/role.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createBy\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deleteAt\n                            \n                            \n                                    \n                                deleteBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                history\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDelete\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permission\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updateBy\n                            \n                            \n                                    \n                                updated\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permission\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { IsDate, IsEmail, IsNumber, IsString } from 'class-validator';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Company } from 'src/companies/schemas/company.schema';\nimport { Jobs } from 'src/jobs/schema/job.schema';\nimport { Permission } from 'src/permissions/schema/permission.schema';\n\nexport type RoleDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Role {\n  @Prop()\n  name: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  isActive: boolean;\n\n  @Prop({ type: [mongoose.Schema.Types.ObjectId], ref: Permission.name })\n  permission: Permission[];\n\n  @Prop()\n  url: string;\n\n  @Prop()\n  status: string;\n\n  @Prop({ type: mongoose.Schema.Types.Array })\n  history: {\n    status: string;\n    updateAt: Date;\n    updateBy: { _id: mongoose.Schema.Types.ObjectId; email: string };\n  }[];\n\n  @Prop({ type: Object })\n  createBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updateBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deleteBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updated: Date;\n\n  @Prop()\n  isDelete: boolean;\n\n  @Prop()\n  deleteAt: Date;\n}\n\nexport const RoleSchema = SchemaFactory.createForClass(Role);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RolesController.html":{"url":"controllers/RolesController.html","title":"controller - RolesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RolesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch List Jobs paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { User, ResponseMessage } from 'src/decorator/customize';\nimport { IUser } from 'src/users/user.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('roles')\n@Controller('roles')\nexport class RolesController {\n  constructor(private readonly rolesService: RolesService) {}\n\n  @Post()\n  create(@Body() createRoleDto: CreateRoleDto, @User() user: IUser) {\n    return this.rolesService.create(createRoleDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch List Jobs paginate')\n  findAll(\n    @Query('current') current: number,\n    @Query('pageSize') pageSize: number,\n    @Query() qs: any,\n  ) {\n    const queryParamsForAqp = { ...qs }; // Tạo một bản sao\n    delete queryParamsForAqp.current; // Xóa current\n    delete queryParamsForAqp.pageSize; // Xóa pageSize\n\n    return this.rolesService.findAll(current, pageSize, queryParamsForAqp);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.rolesService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateRoleDto: UpdateRoleDto,\n    @User() user: IUser,\n  ) {\n    return this.rolesService.update(id, updateRoleDto, user);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.rolesService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RolesModule.html":{"url":"modules/RolesModule.html","title":"module - RolesModule","body":"\n                   \n\n\n\n\n    Modules\n    RolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\n\nRolesService \n\nRolesService \n\n\n\nRolesModule\n\nRolesModule\n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/roles/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RolesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RolesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RolesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { RolesController } from './roles.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Resume, ResumeSchema } from 'src/resumes/schema/resume.schema';\nimport { Role, RoleSchema } from './schema/role.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Role.name, schema: RoleSchema }]),\n  ],\n  controllers: [RolesController],\n  providers: [RolesService],\n  exports: [RolesService],\n})\nexport class RolesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\n\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Role, RoleDocument } from './schema/role.schema';\nimport { IUser } from 'src/users/user.interface';\nimport mongoose, { isValidObjectId } from 'mongoose';\nimport aqp from 'api-query-params';\nimport { ADMIN_ROLE } from 'src/databases/sample';\n\n@Injectable()\nexport class RolesService {\n  constructor(\n    @InjectModel(Role.name)\n    private roleModel: SoftDeleteModel,\n  ) {}\n  async create(createRoleDto: CreateRoleDto, user: IUser) {\n    const { name } = createRoleDto;\n    const exitName = this.roleModel.findOne({ name });\n    if (!exitName) {\n      throw new BadRequestException('Name đã tồn tại');\n    }\n\n    const newRole = await this.roleModel.create({\n      ...createRoleDto,\n      createBy: { _id: user._id, email: user.email },\n    });\n    return { _id: newRole.id, createAt: new Date() };\n  }\n\n  async findAll(current: number, pageSize: number, qs: string) {\n    const { filter, sort, population, projection } = aqp(qs);\n\n    delete filter.page;\n    delete filter.pageSize;\n\n    const offset = (+current - 1) * +pageSize;\n    const defualtpageSize = +pageSize ? +pageSize : 10;\n\n    const totalItems = (await this.roleModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defualtpageSize);\n\n    const result = await this.roleModel\n      .find(filter)\n      .skip(offset)\n      .limit(defualtpageSize)\n      .sort(sort as any)\n      .select(projection as any)\n      .populate(population)\n      .exec();\n    return {\n      meta: {\n        current: current,\n        pageSize: pageSize,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  findOne(id: string) {\n    if (!isValidObjectId(id)) {\n      throw new BadRequestException('Không tìm thấy Id');\n    }\n    //-1 không muốn chọn, 1 muốn chọn\n    return this.roleModel.findOne({ _id: id }).populate({\n      path: 'permission',\n      select: { _id: 1, apiPath: 1, name: 1, method: 1, module: 1 },\n    });\n  }\n\n  update(id: string, updateRoleDto: UpdateRoleDto, user: IUser) {\n    const { name, description, isActive, permission } = updateRoleDto;\n\n    if (!isValidObjectId(id)) {\n      throw new BadRequestException('Không tìm thấy Id');\n    }\n\n    const updateRole = this.roleModel.updateOne(\n      { _id: id },\n      {\n        name,\n        description,\n        isActive,\n        permission,\n        updateBy: { _id: user._id, email: user.email },\n      },\n    );\n    return updateRole;\n  }\n\n  async remove(id: string) {\n    if (!isValidObjectId(id)) {\n      throw new BadRequestException('Không tìm thấy Id');\n    }\n\n    const foundUser = await this.roleModel.findById(id);\n\n    if (foundUser.name === ADMIN_ROLE) {\n      throw new BadRequestException('Không thể xóa role Admin');\n    }\n\n    const deleteRole = this.roleModel.softDelete({ _id: id });\n    return deleteRole;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Subcriber.html":{"url":"classes/Subcriber.html","title":"class - Subcriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Subcriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subcribers/schema/subcriber.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createBy\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deleteAt\n                            \n                            \n                                    \n                                deleteBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                isDelete\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                updateBy\n                            \n                            \n                                    \n                                updated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subcribers/schema/subcriber.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subcribers/schema/subcriber.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subcribers/schema/subcriber.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subcribers/schema/subcriber.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subcribers/schema/subcriber.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subcribers/schema/subcriber.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subcribers/schema/subcriber.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subcribers/schema/subcriber.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subcribers/schema/subcriber.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subcribers/schema/subcriber.schema.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { IsDate, IsEmail, IsNumber, IsString } from 'class-validator';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Company } from 'src/companies/schemas/company.schema';\nimport { Jobs } from 'src/jobs/schema/job.schema';\n\nexport type SubcriberDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Subcriber {\n  @Prop()\n  email: string;\n\n  @Prop()\n  name: string;\n\n  @Prop()\n  skills: string[];\n\n  @Prop({ type: Object })\n  createBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updateBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deleteBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updated: Date;\n\n  @Prop()\n  isDelete: boolean;\n\n  @Prop()\n  deleteAt: Date;\n}\n\nexport const SubcriberSchema = SchemaFactory.createForClass(Subcriber);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SubcribersController.html":{"url":"controllers/SubcribersController.html","title":"controller - SubcribersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SubcribersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subcribers/subcribers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                subcribers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                getUserSkills\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubcriberDto: CreateSubcriberDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/subcribers/subcribers.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubcriberDto\n                                            \n                                                            CreateSubcriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch List Jobs paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/subcribers/subcribers.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/subcribers/subcribers.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getUserSkills\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserSkills(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('skills')@ResponseMessage('Get subcriber's skills')@SkipCheckPermission()\n                \n            \n\n                    \n                        \n                            Defined in src/subcribers/subcribers.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/subcribers/subcribers.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/subcribers/subcribers.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { SkipCheckPermission } from './../decorator/customize';\nimport {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { SubcribersService } from './subcribers.service';\nimport { CreateSubcriberDto } from './dto/create-subcriber.dto';\nimport { UpdateSubcriberDto } from './dto/update-subcriber.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { UpdateRoleDto } from 'src/roles/dto/update-role.dto';\nimport { IUser } from 'src/users/user.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('subcribers')\n@Controller('subcribers')\nexport class SubcribersController {\n  constructor(private readonly subcribersService: SubcribersService) {}\n\n  @Post()\n  create(@Body() createSubcriberDto: CreateSubcriberDto, @User() user: IUser) {\n    return this.subcribersService.create(createSubcriberDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch List Jobs paginate')\n  findAll(\n    @Query('current') current: number,\n    @Query('pageSize') pageSize: number,\n    @Query() qs: any,\n  ) {\n    const queryParamsForAqp = { ...qs }; // Tạo một bản sao\n    delete queryParamsForAqp.current; // Xóa current\n    delete queryParamsForAqp.pageSize; // Xóa pageSize\n\n    return this.subcribersService.findAll(current, pageSize, queryParamsForAqp);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.subcribersService.findOne(id);\n  }\n\n  @Patch()\n  update(@Body() updateRoleDto: UpdateRoleDto, @User() user: IUser) {\n    return this.subcribersService.update(updateRoleDto, user);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.subcribersService.remove(id);\n  }\n\n  @Post('skills')\n  @ResponseMessage(\"Get subcriber's skills\")\n  @SkipCheckPermission()\n  getUserSkills(@User() user: IUser) {\n    return this.subcribersService.getSkills(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubcribersModule.html":{"url":"modules/SubcribersModule.html","title":"module - SubcribersModule","body":"\n                   \n\n\n\n\n    Modules\n    SubcribersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SubcribersModule\n\n\n\ncluster_SubcribersModule_exports\n\n\n\ncluster_SubcribersModule_providers\n\n\n\n\nSubcribersService \n\nSubcribersService \n\n\n\nSubcribersModule\n\nSubcribersModule\n\nSubcribersService  -->\n\nSubcribersModule->SubcribersService \n\n\n\n\n\nSubcribersService\n\nSubcribersService\n\nSubcribersModule -->\n\nSubcribersService->SubcribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/subcribers/subcribers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubcribersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SubcribersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SubcribersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SubcribersService } from './subcribers.service';\nimport { SubcribersController } from './subcribers.controller';\nimport { Subcriber, SubcriberSchema } from './schema/subcriber.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Subcriber.name, schema: SubcriberSchema },\n    ]),\n  ],\n  controllers: [SubcribersController],\n  providers: [SubcribersService],\n  exports: [SubcribersService],\n})\nexport class SubcribersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubcribersService.html":{"url":"injectables/SubcribersService.html","title":"injectable - SubcribersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubcribersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subcribers/subcribers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getSkills\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subcriberModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/subcribers/subcribers.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subcriberModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubcriberDto: CreateSubcriberDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subcribers/subcribers.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubcriberDto\n                                            \n                                                            CreateSubcriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subcribers/subcribers.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subcribers/subcribers.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSkills\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSkills(user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subcribers/subcribers.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subcribers/subcribers.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(updateSubcriberDto: UpdateSubcriberDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subcribers/subcribers.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSubcriberDto\n                                            \n                                                            UpdateSubcriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateSubcriberDto } from './dto/create-subcriber.dto';\nimport { UpdateSubcriberDto } from './dto/update-subcriber.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Subcriber, SubcriberDocument } from './schema/subcriber.schema';\nimport { IUser } from 'src/users/user.interface';\nimport { isValidObjectId } from 'mongoose';\nimport aqp from 'api-query-params';\nimport { ADMIN_ROLE } from 'src/databases/sample';\n\n@Injectable()\nexport class SubcribersService {\n  constructor(\n    @InjectModel(Subcriber.name)\n    private subcriberModel: SoftDeleteModel,\n  ) {}\n  async create(createSubcriberDto: CreateSubcriberDto, user: IUser) {\n    const newSubcriber = await this.subcriberModel.create({\n      ...createSubcriberDto,\n      createBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n    return { _id: newSubcriber._id, createdAt: new Date() };\n  }\n\n  async findAll(current: number, pageSize: number, qs: string) {\n    const { filter, sort, population, projection } = aqp(qs);\n\n    delete filter.page;\n    delete filter.pageSize;\n\n    const offset = (+current - 1) * +pageSize;\n    const defualtpageSize = +pageSize ? +pageSize : 10;\n\n    const totalItems = (await this.subcriberModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defualtpageSize);\n\n    const result = await this.subcriberModel\n      .find(filter)\n      .skip(offset)\n      .limit(defualtpageSize)\n      .sort(sort as any)\n      .select(projection as any)\n      .populate(population)\n      .exec();\n    return {\n      meta: {\n        current: current,\n        pageSize: pageSize,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    if (isValidObjectId(id)) {\n      throw new BadRequestException('Id không hợp lệ, hãy thử lại');\n    }\n\n    const findSubcriber = await this.subcriberModel.findOne({ id });\n    return findSubcriber;\n  }\n\n  update(updateSubcriberDto: UpdateSubcriberDto, user: IUser) {\n    const { email, name, skills } = updateSubcriberDto;\n\n    const updateSubcriber = this.subcriberModel.updateOne(\n      { email: user.email },\n      { ...updateSubcriberDto, updateBy: { _id: user._id, email: user.email } },\n      //upsert: nếu bản ghi đã tồn tại thì update, chưa tồn tại thì insert\n      //upsert = insert + update\n      { upsert: true },\n    );\n    return updateSubcriber;\n  }\n\n  async remove(id: string) {\n    if (!isValidObjectId(id)) {\n      throw new BadRequestException('Không tìm thấy Id');\n    }\n\n    const deleteSubcriber = this.subcriberModel.softDelete({ _id: id });\n    return deleteSubcriber;\n  }\n\n  async getSkills(user: IUser) {\n    const { email } = user;\n    return await this.subcriberModel.findOne({ email }, { skill: 1 });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transfomr.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/core/transfomr.interceptor.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/transfomr.interceptor.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MASSAGE } from 'src/decorator/customize';\n\nexport interface Response {\n  statusCode: number;\n  message: string;\n  data: T;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  constructor(private reflector: Reflector) {}\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    return next.handle().pipe(\n      map((data) => ({\n        statusCode: context.switchToHttp().getResponse().statusCode,\n        reqId: context.switchToHttp().getRequest().reqId,\n        message:\n          this.reflector.get(RESPONSE_MASSAGE, context.getHandler()) ||\n          '',\n        data: data,\n      })),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCompanyDto.html":{"url":"classes/UpdateCompanyDto.html","title":"class - UpdateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/update-company.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCompanyDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateCompanyDto } from './create-company.dto';\n\nexport class UpdateCompanyDto extends PartialType(CreateCompanyDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFileDto.html":{"url":"classes/UpdateFileDto.html","title":"class - UpdateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/file/dto/update-file.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateFileDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateFileDto } from './create-file.dto';\n\nexport class UpdateFileDto extends PartialType(CreateFileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateJobDto.html":{"url":"classes/UpdateJobDto.html","title":"class - UpdateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/update-job.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateJobDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateJobDto } from './create-job.dto';\n\nexport class UpdateJobDto extends PartialType(CreateJobDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMailDto.html":{"url":"classes/UpdateMailDto.html","title":"class - UpdateMailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/dto/update-mail.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateMailDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateMailDto } from './create-mail.dto';\n\nexport class UpdateMailDto extends PartialType(CreateMailDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePermissionDto.html":{"url":"classes/UpdatePermissionDto.html","title":"class - UpdatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/update-permission.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreatePermissionDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePermissionDto } from './create-permission.dto';\n\nexport class UpdatePermissionDto extends PartialType(CreatePermissionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResumeDto.html":{"url":"classes/UpdateResumeDto.html","title":"class - UpdateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                deleteAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                deleteBy\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                history\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                isDelete\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                updateBy\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                url\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        deleteAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDate()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        deleteBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ResumeHistoryDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        isDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        updateBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsEmail,\n  IsOptional,\n  IsBoolean,\n  IsArray,\n  ValidateNested,\n  IsDate,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport mongoose from 'mongoose';\n\nclass ResumeHistoryDto {\n  @IsString()\n  status: string;\n\n  @IsDate()\n  @Type(() => Date)\n  updateAt: Date;\n\n  @ValidateNested()\n  @Type(() => Object)\n  updateBy: {\n    _id: mongoose.Types.ObjectId;\n    email: string;\n  };\n}\n\nexport class UpdateResumeDto {\n  @IsOptional()\n  @IsString()\n  userId?: string;\n\n  @IsOptional()\n  @IsEmail()\n  email?: string;\n\n  @IsOptional()\n  @IsString()\n  url?: string;\n\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => ResumeHistoryDto)\n  history?: ResumeHistoryDto[];\n\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => Object)\n  updateBy?: {\n    _id: mongoose.Types.ObjectId;\n    email: string;\n  };\n\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => Object)\n  deleteBy?: {\n    _id: mongoose.Types.ObjectId;\n    email: string;\n  };\n\n  @IsOptional()\n  @IsBoolean()\n  isDelete?: boolean;\n\n  @IsOptional()\n  @IsDate()\n  @Type(() => Date)\n  deleteAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleDto.html":{"url":"classes/UpdateRoleDto.html","title":"class - UpdateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/update-role.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateRoleDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateRoleDto } from './create-role.dto';\n\nexport class UpdateRoleDto extends PartialType(CreateRoleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSubcriberDto.html":{"url":"classes/UpdateSubcriberDto.html","title":"class - UpdateSubcriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSubcriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subcribers/dto/update-subcriber.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSubcriberDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSubcriberDto } from './create-subcriber.dto';\n\nexport class UpdateSubcriberDto extends PartialType(CreateSubcriberDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OmitType(CreateUserDto, [\n  'password',\n] as const)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType, PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\n// eslint-disable-next-line prettier/prettier\n//OmitType: bỏ đi, có nghĩa là bỏ đi 1 cái gì đó kh cần update\n// ở đây ví dụ bỏ qua trường password\nexport class UpdateUserDto extends OmitType(CreateUserDto, [\n  'password',\n] as const) {\n  _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createBy\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deleteAt\n                            \n                            \n                                    \n                                deleteBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                isDelete\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                updateBy\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({ref: undefined, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { IsDate, IsEmail, IsNumber, IsString } from 'class-validator';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Role, RoleSchema } from 'src/roles/schema/role.schema';\n\nexport type UserDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class User {\n  @Prop({ required: true })\n  email: string;\n\n  @Prop({ required: true })\n  password: string;\n\n  @Prop()\n  name: string;\n\n  @Prop()\n  age: number;\n\n  @Prop()\n  phone: string;\n\n  @Prop()\n  gender: string;\n\n  @Prop()\n  address: string;\n\n  @Prop({ type: Object })\n  company: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n  };\n\n  @Prop({ ref: Role.name, type: mongoose.Schema.Types.ObjectId })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @Prop()\n  refreshToken: string;\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop()\n  isDelete: boolean;\n\n  @Prop()\n  deleteAt: Date;\n\n  @Prop({ type: Object })\n  createBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  updateBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  deleteBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDto.html":{"url":"classes/UserLoginDto.html","title":"class - UserLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: '123456', description: 'password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: 'username@gmail.com', description: 'username'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:90\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n}\n\n//class = object\nexport class CreateUserDto {\n  @IsEmail({}, { message: 'Chưa đúng định dạng Email' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Password không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsNotEmpty({ message: 'Address không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'age không được để trống' })\n  ege: string;\n\n  @IsNotEmpty({ message: 'Gender không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Role không được để trống' })\n  role: string;\n\n  @IsNotEmpty({ message: 'Phone không được để trống' })\n  phone: string;\n\n  @IsObject()\n  @IsNotEmptyObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: string;\n}\n\nexport class RegisterUserDto {\n  @IsEmail({}, { message: 'Chưa đúng định dạng Email' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Password không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsNotEmpty({ message: 'Address không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'age không được để trống' })\n  age: string;\n\n  @IsNotEmpty({ message: 'Gender không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Phone không được để trống' })\n  phone: string;\n\n  @IsNotEmpty({ message: 'Gender không được để trống' })\n  @IsMongoId({ message: 'Role có định dạng MogoId' })\n  role: mongoose.Schema.Types.ObjectId;\n}\n\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'username@gmail.com', description: 'username' })\n  readonly username: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: '123456', description: 'password' })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDTO: CreateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Create a new user')@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDTO\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Delete a new user')@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Update a new user')@Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { IUser } from 'src/users/user.interface';\nimport {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Put,\n  Query,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto, RegisterUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('users')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @ResponseMessage('Create a new user')\n  @Post()\n  create(@Body() createDTO: CreateUserDto, @User() user: IUser) {\n    return this.usersService.create(createDTO, user);\n  }\n\n  @Get()\n  findAll(\n    @Query('current') current: number,\n    @Query('pageSize') pageSize: number,\n    @Query() qs: any,\n  ) {\n    const queryParamsForAqp = { ...qs }; // Tạo một bản sao\n    delete queryParamsForAqp.current; // Xóa current\n    delete queryParamsForAqp.pageSize; // Xóa pageSize\n\n    return this.usersService.findAll(current, pageSize, queryParamsForAqp);\n  }\n\n  @Public()\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(id);\n  }\n\n  @ResponseMessage('Update a new user')\n  @Patch()\n  update(@Body() updateUserDto: UpdateUserDto, @User() user: IUser) {\n    return this.usersService.update(updateUserDto, user);\n  }\n\n  @ResponseMessage('Delete a new user')\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.usersService.remove(id, user);\n  }\n\n  // @Get(':id')\n  // findOneByUsername(username: string) {\n  //   return this.usersService.findOneByUsername(username);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nRolesService\n\nRolesService\n\nUsersModule -->\n\nRolesService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RolesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './schemas/user.schema';\nimport { Role, RoleSchema } from 'src/roles/schema/role.schema';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Module({\n  //name: User.name giống như một cái ID định danh cho module hiện tại\n  imports: [\n    MongooseModule.forFeature([{ name: Role.name, schema: RoleSchema }]),\n\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n  ],\n\n  controllers: [UsersController],\n  providers: [UsersService, RolesService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hashPassword\n                            \n                            \n                                updateUserToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                findOneByUsername\n                            \n                            \n                                findUserByToken\n                            \n                            \n                                isValidPassword\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(creatUserDTO: CreateUserDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                creatUserDTO\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByUsername\n                        \n                    \n                \n            \n            \n                \nfindOneByUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByToken\n                        \n                    \n                \n            \n            \n                \nfindUserByToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:177\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \nisValidPassword(password: string, hash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(user: RegisterUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hashPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:173\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateUserDto, RegisterUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport mongoose, { isValidObjectId, Model } from 'mongoose';\nimport { User, UserDocument } from './schemas/user.schema';\nimport { bcrypt, hashSync } from 'bcrypt';\nimport { compareSync, genSaltSync } from 'bcryptjs';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { exit } from 'process';\nimport { IUser } from './user.interface';\nimport aqp from 'api-query-params';\nimport { Role, RoleDocument } from 'src/roles/schema/role.schema';\nimport { USER_ROLE } from 'src/databases/sample';\n\n@Injectable()\nexport class UsersService {\n  //Thông báo là UsersService sẽ sử dụng model User đã được khai báo từ user.module\n  constructor(\n    // Model là kiểu cho usermodel\n    @InjectModel(User.name)\n    private userModel: SoftDeleteModel,\n\n    @InjectModel(Role.name)\n    private roleModel: SoftDeleteModel,\n  ) {}\n\n  hashPassword = (password: string) => {\n    const saltRounds = genSaltSync(10);\n    const hash = hashSync(password, saltRounds);\n    return hash;\n  };\n\n  async create(creatUserDTO: CreateUserDto, user: IUser) {\n    const hashPassword = await this.hashPassword(creatUserDTO.password); // nếu là async\n    const exitUser = this.userModel.findOne({ email: creatUserDTO.email });\n\n    if (exitUser) {\n      throw new BadRequestException(\n        `email :${(await exitUser).email} đã tồn tại`,\n      );\n    }\n    {\n      const newUser = await this.userModel.create({\n        ...creatUserDTO,\n        password: hashPassword,\n\n        createBy: { _id: user._id, createBy: user.name },\n      });\n\n      return { _id: newUser.id, createdAt: newUser.createdAt };\n    }\n  }\n\n  async register(user: RegisterUserDto) {\n    const { name, email, password, age, gender, address } = user;\n    const hashPassword = await this.hashPassword(user.password);\n    const exitUser = this.userModel.findOne({ email });\n\n    if (exitUser) {\n      throw new BadRequestException(`email :${email} đã tồn tại`);\n    }\n\n    //fetch user role\n    const userRole = await this.roleModel.findOne({ name: USER_ROLE });\n    return await this.userModel.create({\n      name,\n      email,\n      password: hashPassword,\n      age,\n      gender,\n      address,\n      role: userRole?._id,\n    });\n  }\n\n  async findAll(current: number, pageSize: number, qs: string) {\n    const { filter, sort, population } = aqp(qs);\n\n    delete filter.page;\n    delete filter.pageSize;\n\n    const offset = (+current - 1) * +pageSize;\n    const defualtpageSize = +pageSize ? +pageSize : 10;\n\n    const totalItems = (await this.userModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defualtpageSize);\n\n    const result = await this.userModel\n      .find(filter)\n      .skip(offset)\n      .limit(defualtpageSize)\n      .sort(sort as any)\n      .select('-password')\n      .populate(population)\n      .exec();\n    return {\n      meta: {\n        current: current,\n        pageSize: pageSize,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  findOne(id: string) {\n    try {\n      if (!mongoose.Types.ObjectId.isValid(id))\n        return 'không tìm thấy người dùng';\n      return this.userModel\n        .findOne({ _id: id })\n        .select('-password')\n        .populate({ path: 'role', select: { name: 1 } }); // - : exclude/include\n    } catch (error) {\n      return 'Not found user!';\n    }\n  }\n\n  async update(updateUserDto: UpdateUserDto, user: IUser) {\n    return await this.userModel.updateOne({\n      id_: updateUserDto._id,\n      ...updateUserDto,\n      updateBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n  }\n\n  async remove(id: string, user: IUser) {\n    //admin@gmail.com\n    try {\n      if (!isValidObjectId(id)) {\n        throw new BadRequestException('Không tìm thấy Id');\n      }\n\n      const foundUser = await this.userModel.findById(id);\n      if (foundUser && foundUser.email === 'admin@gmail.com') {\n        throw new BadRequestException('Không tìm thấy Id');\n      }\n\n      await this.userModel.updateOne(\n        { _id: id },\n        {\n          $set: {\n            _id: user._id,\n            name: user.name,\n          },\n        },\n      );\n\n      return this.userModel.softDelete({ _id: id });\n    } catch (error) {\n      return 'Not found user!';\n    }\n  }\n\n  findOneByUsername(username: string) {\n    return this.userModel\n      .findOne({ email: username })\n      .populate({ path: 'role', select: { name: 1, permission: 1 } });\n  }\n\n  isValidPassword(password: string, hash: string) {\n    console.log('Password nhập vào:', password);\n    console.log('Password đã hash:', hash);\n    return compareSync(password, hash);\n  }\n\n  updateUserToken = async (refreshToken: string, _id: string) => {\n    return await this.userModel.updateOne({ _id }, { refreshToken });\n  };\n\n  findUserByToken(refreshToken: string) {\n    return this.userModel\n      .findOne({ refreshToken })\n      .populate({ path: 'role', select: { name: 1 } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/passport/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/passport/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/throttle/throttle.mess.ts\n            \n            class\n            MyThrottlerGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/companies/companies.controller.ts\n            \n            controller\n            CompaniesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/companies/companies.service.ts\n            \n            injectable\n            CompaniesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/companies/dto/create-company.dto.ts\n            \n            class\n            CreateCompanyDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/companies/dto/update-company.dto.ts\n            \n            class\n            UpdateCompanyDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/companies/schemas/company.schema.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/companies/schemas/company.schema.ts\n            \n            variable\n            CompanySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/companies/schemas/company.schema.ts\n            \n            type alias\n            CompanyDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/transfomr.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/transfomr.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/databases/databases.controller.ts\n            \n            controller\n            DatabasesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/databases.service.ts\n            \n            injectable\n            DatabasesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/databases/sample.ts\n            \n            variable\n            ADMIN_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/databases/sample.ts\n            \n            variable\n            INIT_PERMISSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/databases/sample.ts\n            \n            variable\n            USER_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_PERMISSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            RESPONSE_MASSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            ResponseMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            SkipCheckPermission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/file/dto/create-file.dto.ts\n            \n            class\n            CreateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/file/dto/update-file.dto.ts\n            \n            class\n            UpdateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/file/entities/file.entity.ts\n            \n            class\n            File\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/file/file.controller.ts\n            \n            controller\n            FileController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/file/file.service.ts\n            \n            injectable\n            FileService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/file/multer.config.ts\n            \n            injectable\n            MulterConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            CreateJobDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/jobs/dto/update-job.dto.ts\n            \n            class\n            UpdateJobDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/jobs/jobs.controller.ts\n            \n            controller\n            JobsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/jobs/jobs.service.ts\n            \n            injectable\n            JobsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/jobs/schema/job.schema.ts\n            \n            class\n            Jobs\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                        src/jobs/schema/job.schema.ts\n            \n            variable\n            JobsSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/jobs/schema/job.schema.ts\n            \n            type alias\n            JobsDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mail/dto/create-mail.dto.ts\n            \n            class\n            CreateMailDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mail/dto/update-mail.dto.ts\n            \n            class\n            UpdateMailDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mail/entities/mail.entity.ts\n            \n            class\n            Mail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mail/mail.controller.ts\n            \n            controller\n            MailController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/dto/create-permission.dto.ts\n            \n            class\n            CreatePermissionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/permissions/dto/update-permission.dto.ts\n            \n            class\n            UpdatePermissionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/permissions.controller.ts\n            \n            controller\n            PermissionsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/permissions/permissions.service.ts\n            \n            injectable\n            PermissionsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/permissions/schema/permission.schema.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/permissions/schema/permission.schema.ts\n            \n            variable\n            PermissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/permissions/schema/permission.schema.ts\n            \n            type alias\n            PermissionDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateResumeDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateUserCvDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            ResumeHistoryDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            UpdateResumeDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/resumes/resumes.controller.ts\n            \n            controller\n            ResumesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/resumes.service.ts\n            \n            injectable\n            ResumesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/resumes/schema/resume.schema.ts\n            \n            class\n            Resume\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                        src/resumes/schema/resume.schema.ts\n            \n            variable\n            ResumeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/resumes/schema/resume.schema.ts\n            \n            type alias\n            ResumeDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/roles/dto/update-role.dto.ts\n            \n            class\n            UpdateRoleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/roles.controller.ts\n            \n            controller\n            RolesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/roles/roles.service.ts\n            \n            injectable\n            RolesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/roles/schema/role.schema.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                        src/roles/schema/role.schema.ts\n            \n            variable\n            RoleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/roles/schema/role.schema.ts\n            \n            type alias\n            RoleDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subcribers/dto/create-subcriber.dto.ts\n            \n            class\n            CreateSubcriberDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/subcribers/dto/update-subcriber.dto.ts\n            \n            class\n            UpdateSubcriberDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subcribers/schema/subcriber.schema.ts\n            \n            class\n            Subcriber\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                        src/subcribers/schema/subcriber.schema.ts\n            \n            variable\n            SubcriberSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/subcribers/schema/subcriber.schema.ts\n            \n            type alias\n            SubcriberDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subcribers/subcribers.controller.ts\n            \n            controller\n            SubcribersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/subcribers/subcribers.service.ts\n            \n            injectable\n            SubcribersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            UserLoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                        src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/users/schemas/user.schema.ts\n            \n            type alias\n            UserDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/user.interface.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : 1.8.1\n        \n            @nestjs/common : ^9.4.3\n        \n            @nestjs/config : ^2.3.4\n        \n            @nestjs/core : 9.4.0\n        \n            @nestjs/jwt : 10.0.3\n        \n            @nestjs/mapped-types : ^1.2.2\n        \n            @nestjs/mongoose : 9.2.2\n        \n            @nestjs/passport : 9.0.3\n        \n            @nestjs/platform-express : ^9.4.0\n        \n            @nestjs/schedule : 3.0.1\n        \n            @nestjs/swagger : ^7.0.1\n        \n            @nestjs/terminus : ^11.0.0\n        \n            @nestjs/throttler : ^6.4.0\n        \n            api-query-params : ^5.4.0\n        \n            bcrypt : ^5.1.1\n        \n            bcryptjs : 2.4.3\n        \n            class-transformer : 0.5.1\n        \n            class-validator : 0.14.0\n        \n            cookie-parser : ^1.4.7\n        \n            d : 1.0.2\n        \n            dotenv : ^16.4.7\n        \n            ejs : ^3.1.9\n        \n            handlebars : ^4.7.7\n        \n            hbs : ^4.2.0\n        \n            helmet : ^8.1.0\n        \n            mongoose : ^8.15.0\n        \n            ms : ^2.1.3\n        \n            multer : ^2.0.0\n        \n            nodemailer : 6.9.3\n        \n            passport : 0.6.0\n        \n            passport-jwt : 4.0.1\n        \n            passport-local : 1.0.0\n        \n            reflect-metadata : 0.1.13\n        \n            rxjs : 7.2.0\n        \n            soft-delete-plugin-mongoose : ^1.0.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCác bước cần làm để chạy dự án NestJS\n1. Cài đặt thư viện với câu lệnh: npm i\n2. Chạy dự án với câu lệnh: npm run dev\n\"# Job-portal-LPT\" \n\"# Job-portal-LPT\" \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompaniesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabasesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PermissionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResumesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubcribersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\ncluster_FileModule\n\n\n\ncluster_FileModule_providers\n\n\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_exports\n\n\n\ncluster_JobsModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_SubcribersModule\n\n\n\ncluster_SubcribersModule_exports\n\n\n\ncluster_SubcribersModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFileModule\n\nFileModule\n\nAppModule -->\n\nFileModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\n\n\nMailModule\n\nMailModule\n\nMailModule -->\n\nJobsModule->MailModule\n\n\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nJobsService \n\nJobsService \n\nJobsService  -->\n\nJobsModule->JobsService \n\n\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nRolesService \n\nRolesService \n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nSubcribersModule\n\nSubcribersModule\n\nMailModule -->\n\nSubcribersModule->MailModule\n\n\n\nAppModule -->\n\nSubcribersModule->AppModule\n\n\n\n\n\nSubcribersService \n\nSubcribersService \n\nSubcribersService  -->\n\nSubcribersModule->SubcribersService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCompaniesService\n\nCompaniesService\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\nDatabasesService\n\nDatabasesService\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nFileService\n\nFileService\n\nFileModule -->\n\nFileService->FileModule\n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nPermissionsService\n\nPermissionsService\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\nResumesService\n\nResumesService\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\nUsersModule -->\n\nRolesService->UsersModule\n\n\n\n\n\nSubcribersService\n\nSubcribersService\n\nSubcribersModule -->\n\nSubcribersService->SubcribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    33 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : https://hoidanit.com.vn/\n        \n            Keywords : \n        \n            Homepage : https://github.com/Huycoconut/Job-portal-LPT#readme\n        \n            Bugs : https://github.com/Huycoconut/Job-portal-LPT/issues\n        \n            License : UNLICENSED\n        \n            Repository : git+https://github.com/Huycoconut/Job-portal-LPT.git\n        \n            Author : Hỏi Dân IT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CompanyDocument   (src/.../company.schema.ts)\n                        \n                        \n                            JobsDocument   (src/.../job.schema.ts)\n                        \n                        \n                            PermissionDocument   (src/.../permission.schema.ts)\n                        \n                        \n                            ResumeDocument   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleDocument   (src/.../role.schema.ts)\n                        \n                        \n                            SubcriberDocument   (src/.../subcriber.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/companies/schemas/company.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CompanyDocument\n                \n            \n            \n                \n                        HydratedDocument\n\n                \n            \n        \n    \n    src/jobs/schema/job.schema.ts\n    \n    \n        \n            \n                \n                    \n                    JobsDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/permissions/schema/permission.schema.ts\n    \n    \n        \n            \n                \n                    \n                    PermissionDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/resumes/schema/resume.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ResumeDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/roles/schema/role.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RoleDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/subcribers/schema/subcriber.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SubcriberDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/users/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ADMIN_ROLE   (src/.../sample.ts)\n                        \n                        \n                            CompanySchema   (src/.../company.schema.ts)\n                        \n                        \n                            INIT_PERMISSION   (src/.../sample.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../customize.ts)\n                        \n                        \n                            IS_PUBLIC_PERMISSION   (src/.../customize.ts)\n                        \n                        \n                            JobsSchema   (src/.../job.schema.ts)\n                        \n                        \n                            PermissionSchema   (src/.../permission.schema.ts)\n                        \n                        \n                            Public   (src/.../customize.ts)\n                        \n                        \n                            RESPONSE_MASSAGE   (src/.../customize.ts)\n                        \n                        \n                            ResponseMessage   (src/.../customize.ts)\n                        \n                        \n                            ResumeSchema   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleSchema   (src/.../role.schema.ts)\n                        \n                        \n                            SkipCheckPermission   (src/.../customize.ts)\n                        \n                        \n                            SubcriberSchema   (src/.../subcriber.schema.ts)\n                        \n                        \n                            User   (src/.../customize.ts)\n                        \n                        \n                            USER_ROLE   (src/.../sample.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/databases/sample.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ADMIN_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SUPER ADMIN'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INIT_PERMISSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    _id: '665a1d7f8c31b2a89f000001',\n    name: 'View Users',\n    apiPath: '/api/v1/users',\n    method: 'GET',\n    module: 'USERS',\n    createdBy: {\n      _id: '665a1c9a8c31b2a89f000001',\n      email: 'admin@gmail.com',\n    },\n    updatedBy: {\n      _id: '665a1c9a8c31b2a89f000001',\n      email: 'admin@gmail.com',\n    },\n    deletedBy: null,\n    createdAt: '2024-01-10T10:00:00.000Z',\n    updatedAt: '2024-01-10T10:00:00.000Z',\n    isDeleted: false,\n    deletedAt: null,\n  },\n  {\n    _id: '665a1d7f8c31b2a89f000002',\n    name: 'Create User',\n    apiPath: '/api/v1/users',\n    method: 'POST',\n    module: 'USERS',\n    createdBy: {\n      _id: '665a1c9a8c31b2a89f000001',\n      email: 'admin@gmail.com',\n    },\n    updatedBy: {\n      _id: '665a1c9a8c31b2a89f000001',\n      email: 'admin@gmail.com',\n    },\n    deletedBy: null,\n    createdAt: '2024-01-11T08:20:00.000Z',\n    updatedAt: '2024-01-11T08:20:00.000Z',\n    isDeleted: false,\n    deletedAt: null,\n  },\n  {\n    _id: '665a1d7f8c31b2a89f000003',\n    name: 'Update User',\n    apiPath: '/api/v1/users/:id',\n    method: 'PUT',\n    module: 'USERS',\n    createdBy: {\n      _id: '665a1c9a8c31b2a89f000002',\n      email: 'admin@gmail.com',\n    },\n    updatedBy: {\n      _id: '665a1c9a8c31b2a89f000002',\n      email: 'admin@gmail.com',\n    },\n    deletedBy: null,\n    createdAt: '2024-01-12T09:15:00.000Z',\n    updatedAt: '2024-01-12T09:15:00.000Z',\n    isDeleted: false,\n    deletedAt: null,\n  },\n  {\n    _id: '665a1d7f8c31b2a89f000004',\n    name: 'Delete User',\n    apiPath: '/api/v1/users/:id',\n    method: 'DELETE',\n    module: 'USERS',\n    createdBy: {\n      _id: '665a1c9a8c31b2a89f000002',\n      email: 'admin@gmail.com',\n    },\n    updatedBy: {\n      _id: '665a1c9a8c31b2a89f000002',\n      email: 'admin@gmail.com',\n    },\n    deletedBy: null,\n    createdAt: '2024-01-13T10:00:00.000Z',\n    updatedAt: '2024-01-13T10:00:00.000Z',\n    isDeleted: false,\n    deletedAt: null,\n  },\n  {\n    _id: '665a1d7f8c31b2a89f000005',\n    name: 'View Roles',\n    apiPath: '/api/v1/roles',\n    method: 'GET',\n    module: 'ROLES',\n    createdBy: {\n      _id: '665a1c9a8c31b2a89f000003',\n      email: 'huyvu@gmail.com',\n    },\n    updatedBy: {\n      _id: '665a1c9a8c31b2a89f000003',\n      email: 'huyvu@gmail.com',\n    },\n    deletedBy: null,\n    createdAt: '2024-01-14T11:00:00.000Z',\n    updatedAt: '2024-01-14T11:00:00.000Z',\n    isDeleted: false,\n    deletedAt: null,\n  },\n  {\n    _id: '665a1d7f8c31b2a89f000006',\n    name: 'Assign Role',\n    apiPath: '/api/v1/users/:id/role',\n    method: 'PATCH',\n    module: 'ROLES',\n    createdBy: {\n      _id: '665a1c9a8c31b2a89f000003',\n      email: 'huyvu@gmail.com',\n    },\n    updatedBy: {\n      _id: '665a1c9a8c31b2a89f000003',\n      email: 'huyvu@gmail.com',\n    },\n    deletedBy: null,\n    createdAt: '2024-01-14T12:30:00.000Z',\n    updatedAt: '2024-01-14T12:30:00.000Z',\n    isDeleted: false,\n    deletedAt: null,\n  },\n  {\n    _id: '665a1d7f8c31b2a89f000007',\n    name: 'View Permissions',\n    apiPath: '/api/v1/permissions',\n    method: 'GET',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '665a1c9a8c31b2a89f000004',\n      email: 'huyvu@gmail.com',\n    },\n    updatedBy: {\n      _id: '665a1c9a8c31b2a89f000004',\n      email: 'huyvu@gmail.com',\n    },\n    deletedBy: null,\n    createdAt: '2024-01-15T08:00:00.000Z',\n    updatedAt: '2024-01-15T08:00:00.000Z',\n    isDeleted: false,\n    deletedAt: null,\n  },\n  {\n    _id: '665a1d7f8c31b2a89f000008',\n    name: 'Create Permission',\n    apiPath: '/api/v1/permissions',\n    method: 'POST',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '665a1c9a8c31b2a89f000004',\n      email: 'huyvu@gmail.com',\n    },\n    updatedBy: {\n      _id: '665a1c9a8c31b2a89f000004',\n      email: 'huyvu@gmail.com',\n    },\n    deletedBy: null,\n    createdAt: '2024-01-15T09:00:00.000Z',\n    updatedAt: '2024-01-15T09:00:00.000Z',\n    isDeleted: false,\n    deletedAt: null,\n  },\n  {\n    _id: '665a1d7f8c31b2a89f000009',\n    name: 'View Company',\n    apiPath: '/api/v1/companies',\n    method: 'GET',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '665a1c9a8c31b2a89f000005',\n      email: 'huyvu@gmail.com',\n    },\n    updatedBy: {\n      _id: '665a1c9a8c31b2a89f000005',\n      email: 'huyvu@gmail.com',\n    },\n    deletedBy: null,\n    createdAt: '2024-01-16T10:00:00.000Z',\n    updatedAt: '2024-01-16T10:00:00.000Z',\n    isDeleted: false,\n    deletedAt: null,\n  },\n  {\n    _id: '665a1d7f8c31b2a89f000010',\n    name: 'Edit Company',\n    apiPath: '/api/v1/companies/:id',\n    method: 'PATCH',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '665a1c9a8c31b2a89f000005',\n      email: 'huyvu@gmail.com',\n    },\n    updatedBy: {\n      _id: '665a1c9a8c31b2a89f000005',\n      email: 'huyvu@gmail.com',\n    },\n    deletedBy: null,\n    createdAt: '2024-01-16T11:00:00.000Z',\n    updatedAt: '2024-01-16T11:00:00.000Z',\n    isDeleted: false,\n    deletedAt: null,\n  },\n  {\n    _id: '665a1d7f8c31b2a89f000011',\n    name: 'View Jobs',\n    apiPath: '/api/v1jobs',\n    method: 'GET',\n    module: 'JOBS',\n    createdBy: {\n      _id: '665a1c9a8c31b2a89f000006',\n      email: 'user@gmail.com',\n    },\n    updatedBy: {\n      _id: '665a1c9a8c31b2a89f000006',\n      email: 'user@gmail.com',\n    },\n    deletedBy: null,\n    createdAt: '2024-01-17T10:30:00.000Z',\n    updatedAt: '2024-01-17T10:30:00.000Z',\n    isDeleted: false,\n    deletedAt: null,\n  },\n  {\n    _id: '665a1d7f8c31b2a89f000012',\n    name: 'Create Job',\n    apiPath: '/jobs',\n    method: 'POST',\n    module: 'JOBS',\n    createdBy: {\n      _id: '665a1c9a8c31b2a89f000006',\n      email: 'user@gmail.com',\n    },\n    updatedBy: {\n      _id: '665a1c9a8c31b2a89f000006',\n      email: 'user@gmail.com',\n    },\n    deletedBy: null,\n    createdAt: '2024-01-17T11:00:00.000Z',\n    updatedAt: '2024-01-17T11:00:00.000Z',\n    isDeleted: false,\n    deletedAt: null,\n  },\n  {\n    _id: '665a1d7f8c31b2a89f000013',\n    name: 'Delete Job',\n    apiPath: 'api/v1/jobs/:id',\n    method: 'DELETE',\n    module: 'JOBS',\n    createdBy: {\n      _id: '665a1c9a8c31b2a89f000006',\n      email: 'admin@gmail.com',\n    },\n    updatedBy: {\n      _id: '665a1c9a8c31b2a89f000006',\n      email: 'admin@gmail.com',\n    },\n    deletedBy: {\n      _id: '665a1c9a8c31b2a89f000006',\n      email: 'admin@gmail.com',\n    },\n    createdAt: '2024-01-18T09:30:00.000Z',\n    updatedAt: '2024-01-18T09:30:00.000Z',\n    isDeleted: true,\n    deletedAt: '2024-01-18T10:00:00.000Z',\n  },\n  {\n    _id: '665a1d7f8c31b2a89f000014',\n    name: 'Dashboard Access',\n    apiPath: '/api/v1/jobs',\n    method: 'GET',\n    module: 'JOBS',\n    createdBy: {\n      _id: '665a1c9a8c31b2a89f000001',\n      email: 'admin@gmail.com',\n    },\n    updatedBy: {\n      _id: '665a1c9a8c31b2a89f000001',\n      email: 'admin@gmail.com',\n    },\n    deletedBy: null,\n    createdAt: '2024-01-19T09:00:00.000Z',\n    updatedAt: '2024-01-19T09:00:00.000Z',\n    isDeleted: false,\n    deletedAt: null,\n  },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'NORMAL USER'\n                    \n                \n\n\n        \n    \n\n    src/companies/schemas/company.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CompanySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Company)\n                    \n                \n\n\n        \n    \n\n    src/decorator/customize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_PERMISSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPermission'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESPONSE_MASSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'response_massage'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResponseMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (message: string) =>\n  SetMetadata(RESPONSE_MASSAGE, message)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SkipCheckPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/jobs/schema/job.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JobsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Jobs)\n                    \n                \n\n\n        \n    \n\n    src/permissions/schema/permission.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PermissionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Permission)\n                    \n                \n\n\n        \n    \n\n    src/resumes/schema/resume.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ResumeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Resume)\n                    \n                \n\n\n        \n    \n\n    src/roles/schema/role.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Role)\n                    \n                \n\n\n        \n    \n\n    src/subcribers/schema/subcriber.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SubcriberSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Subcriber)\n                    \n                \n\n\n        \n    \n\n    src/users/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
